

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Aug 01 08:44:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.32
    44                           ; Generated 02/02/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	idataCOMRAM
    80  005A98                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for main@F2688
    84  005A98  00                 	db	0
    85  005A99  1F                 	db	31
    86  005A9A  10                 	db	16
    87  005A9B  10                 	db	16
    88  005A9C  17                 	db	23
    89  005A9D  17                 	db	23
    90  005A9E  17                 	db	23
    91  005A9F  17                 	db	23
    92  005AA0  00                 	db	0
    93  005AA1  1D                 	db	29
    94  005AA2  04                 	db	4
    95  005AA3  05                 	db	5
    96  005AA4  14                 	db	20
    97  005AA5  15                 	db	21
    98  005AA6  14                 	db	20
    99  005AA7  15                 	db	21
   100  005AA8  17                 	db	23
   101  005AA9  17                 	db	23
   102  005AAA  17                 	db	23
   103  005AAB  17                 	db	23
   104  005AAC  17                 	db	23
   105  005AAD  17                 	db	23
   106  005AAE  10                 	db	16
   107  005AAF  1F                 	db	31
   108  005AB0  14                 	db	20
   109  005AB1  15                 	db	21
   110  005AB2  14                 	db	20
   111  005AB3  15                 	db	21
   112  005AB4  14                 	db	20
   113  005AB5  15                 	db	21
   114  005AB6  04                 	db	4
   115  005AB7  1D                 	db	29
   116                           
   117                           	psect	mediumconst
   118  007EE2                     __pmediumconst:
   119                           	callstack 0
   120  007EE2  00                 	db	0
   121  007EE3                     _valor@ssd$F975:
   122                           	callstack 0
   123  007EE3  3F                 	db	63
   124  007EE4  06                 	db	6
   125  007EE5  5B                 	db	91
   126  007EE6  4F                 	db	79
   127  007EE7  66                 	db	102
   128  007EE8  6D                 	db	109
   129  007EE9  7D                 	db	125
   130  007EEA  07                 	db	7
   131  007EEB  7F                 	db	127
   132  007EEC  6F                 	db	111
   133  007EED  77                 	db	119
   134  007EEE  7C                 	db	124
   135  007EEF  39                 	db	57
   136  007EF0  5E                 	db	94
   137  007EF1  79                 	db	121
   138  007EF2  71                 	db	113
   139  007EF3                     __end_of_valor@ssd$F975:
   140                           	callstack 0
   141  0000                     _T0CON	set	4053
   142  0000                     _TMR0L	set	4054
   143  0000                     _TMR0H	set	4055
   144  0000                     _INTCON	set	4082
   145  0000                     _TRISE	set	3990
   146  0000                     _TRISD	set	3989
   147  0000                     _TRISC	set	3988
   148  0000                     _TRISB	set	3987
   149  0000                     _TRISA	set	3986
   150  0000                     _PORTE	set	3972
   151  0000                     _PORTD	set	3971
   152  0000                     _PORTC	set	3970
   153  0000                     _PORTB	set	3969
   154  0000                     _PORTA	set	3968
   155  0000                     _ADRESL	set	4035
   156  0000                     _ADRESH	set	4036
   157  0000                     _ADCON2	set	4032
   158  0000                     _ADCON0	set	4034
   159  0000                     _PORTEbits	set	3972
   160  0000                     _TRISEbits	set	3990
   161  0000                     _PORTCbits	set	3970
   162  0000                     _TRISCbits	set	3988
   163  007EF3                     STR_14:
   164  007EF3  32                 	db	50	;'2'
   165  007EF4  2D                 	db	45
   166  007EF5  20                 	db	32
   167  007EF6  35                 	db	53	;'5'
   168  007EF7  30                 	db	48	;'0'
   169  007EF8  30                 	db	48	;'0'
   170  007EF9  6D                 	db	109	;'m'
   171  007EFA  6C                 	db	108	;'l'
   172  007EFB  20                 	db	32
   173  007EFC  20                 	db	32
   174  007EFD  20                 	db	32
   175  007EFE  20                 	db	32
   176  007EFF  52                 	db	82	;'R'
   177  007F00  24                 	db	36
   178  007F01  31                 	db	49	;'1'
   179  007F02  30                 	db	48	;'0'
   180  007F03  00                 	db	0
   181  007F04                     STR_15:
   182  007F04  33                 	db	51	;'3'
   183  007F05  2D                 	db	45
   184  007F06  20                 	db	32
   185  007F07  37                 	db	55	;'7'
   186  007F08  30                 	db	48	;'0'
   187  007F09  30                 	db	48	;'0'
   188  007F0A  6D                 	db	109	;'m'
   189  007F0B  6C                 	db	108	;'l'
   190  007F0C  20                 	db	32
   191  007F0D  20                 	db	32
   192  007F0E  20                 	db	32
   193  007F0F  20                 	db	32
   194  007F10  52                 	db	82	;'R'
   195  007F11  24                 	db	36
   196  007F12  31                 	db	49	;'1'
   197  007F13  32                 	db	50	;'2'
   198  007F14  00                 	db	0
   199  007F15                     STR_18:
   200  007F15  56                 	db	86	;'V'
   201  007F16  61                 	db	97	;'a'
   202  007F17  6C                 	db	108	;'l'
   203  007F18  6F                 	db	111	;'o'
   204  007F19  72                 	db	114	;'r'
   205  007F1A  20                 	db	32
   206  007F1B  6E                 	db	110	;'n'
   207  007F1C  6F                 	db	111	;'o'
   208  007F1D  20                 	db	32
   209  007F1E  64                 	db	100	;'d'
   210  007F1F  69                 	db	105	;'i'
   211  007F20  73                 	db	115	;'s'
   212  007F21  70                 	db	112	;'p'
   213  007F22  6C                 	db	108	;'l'
   214  007F23  61                 	db	97	;'a'
   215  007F24  79                 	db	121	;'y'
   216  007F25  00                 	db	0
   217  007F26                     STR_13:
   218  007F26  31                 	db	49	;'1'
   219  007F27  2D                 	db	45
   220  007F28  20                 	db	32
   221  007F29  33                 	db	51	;'3'
   222  007F2A  30                 	db	48	;'0'
   223  007F2B  30                 	db	48	;'0'
   224  007F2C  6D                 	db	109	;'m'
   225  007F2D  6C                 	db	108	;'l'
   226  007F2E  20                 	db	32
   227  007F2F  20                 	db	32
   228  007F30  20                 	db	32
   229  007F31  20                 	db	32
   230  007F32  52                 	db	82	;'R'
   231  007F33  24                 	db	36
   232  007F34  37                 	db	55	;'7'
   233  007F35  00                 	db	0
   234  007F36                     STR_22:
   235  007F36  56                 	db	86	;'V'
   236  007F37  6F                 	db	111	;'o'
   237  007F38  6C                 	db	108	;'l'
   238  007F39  74                 	db	116	;'t'
   239  007F3A  65                 	db	101	;'e'
   240  007F3B  20                 	db	32
   241  007F3C  73                 	db	115	;'s'
   242  007F3D  65                 	db	101	;'e'
   243  007F3E  6D                 	db	109	;'m'
   244  007F3F  70                 	db	112	;'p'
   245  007F40  72                 	db	114	;'r'
   246  007F41  65                 	db	101	;'e'
   247  007F42  21                 	db	33
   248  007F43  00                 	db	0
   249  007F44                     STR_20:
   250  007F44  43                 	db	67	;'C'
   251  007F45  61                 	db	97	;'a'
   252  007F46  72                 	db	114	;'r'
   253  007F47  72                 	db	114	;'r'
   254  007F48  65                 	db	101	;'e'
   255  007F49  67                 	db	103	;'g'
   256  007F4A  61                 	db	97	;'a'
   257  007F4B  6E                 	db	110	;'n'
   258  007F4C  64                 	db	100	;'d'
   259  007F4D  6F                 	db	111	;'o'
   260  007F4E  2E                 	db	46
   261  007F4F  2E                 	db	46
   262  007F50  2E                 	db	46
   263  007F51  00                 	db	0
   264  007F52                     STR_16:
   265  007F52  53                 	db	83	;'S'
   266  007F53  65                 	db	101	;'e'
   267  007F54  75                 	db	117	;'u'
   268  007F55  20                 	db	32
   269  007F56  63                 	db	99	;'c'
   270  007F57  6F                 	db	111	;'o'
   271  007F58  70                 	db	112	;'p'
   272  007F59  6F                 	db	111	;'o'
   273  007F5A  20                 	db	32
   274  007F5B  65                 	db	101	;'e'
   275  007F5C  73                 	db	115	;'s'
   276  007F5D  74                 	db	116	;'t'
   277  007F5E  61                 	db	97	;'a'
   278  007F5F  00                 	db	0
   279  007F60                     STR_5:
   280  007F60  45                 	db	69	;'E'
   281  007F61  73                 	db	115	;'s'
   282  007F62  63                 	db	99	;'c'
   283  007F63  6F                 	db	111	;'o'
   284  007F64  6C                 	db	108	;'l'
   285  007F65  68                 	db	104	;'h'
   286  007F66  61                 	db	97	;'a'
   287  007F67  20                 	db	32
   288  007F68  65                 	db	101	;'e'
   289  007F69  6E                 	db	110	;'n'
   290  007F6A  74                 	db	116	;'t'
   291  007F6B  72                 	db	114	;'r'
   292  007F6C  65                 	db	101	;'e'
   293  007F6D  00                 	db	0
   294  007F6E                     STR_23:
   295  007F6E  4F                 	db	79	;'O'
   296  007F6F  75                 	db	117	;'u'
   297  007F70  74                 	db	116	;'t'
   298  007F71  72                 	db	114	;'r'
   299  007F72  6F                 	db	111	;'o'
   300  007F73  20                 	db	32
   301  007F74  70                 	db	112	;'p'
   302  007F75  65                 	db	101	;'e'
   303  007F76  64                 	db	100	;'d'
   304  007F77  69                 	db	105	;'i'
   305  007F78  64                 	db	100	;'d'
   306  007F79  6F                 	db	111	;'o'
   307  007F7A  00                 	db	0
   308  007F7B                     STR_1:
   309  007F7B  43                 	db	67	;'C'
   310  007F7C  65                 	db	101	;'e'
   311  007F7D  72                 	db	114	;'r'
   312  007F7E  76                 	db	118	;'v'
   313  007F7F  65                 	db	101	;'e'
   314  007F80  6A                 	db	106	;'j'
   315  007F81  61                 	db	97	;'a'
   316  007F82  72                 	db	114	;'r'
   317  007F83  69                 	db	105	;'i'
   318  007F84  61                 	db	97	;'a'
   319  007F85  00                 	db	0
   320  007F86                     STR_7:
   321  007F86  64                 	db	100	;'d'
   322  007F87  65                 	db	101	;'e'
   323  007F88  20                 	db	32
   324  007F89  63                 	db	99	;'c'
   325  007F8A  65                 	db	101	;'e'
   326  007F8B  72                 	db	114	;'r'
   327  007F8C  76                 	db	118	;'v'
   328  007F8D  65                 	db	101	;'e'
   329  007F8E  6A                 	db	106	;'j'
   330  007F8F  61                 	db	97	;'a'
   331  007F90  00                 	db	0
   332  007F91                     STR_3:
   333  007F91  4E                 	db	78	;'N'
   334  007F92  61                 	db	97	;'a'
   335  007F93  73                 	db	115	;'s'
   336  007F94  63                 	db	99	;'c'
   337  007F95  69                 	db	105	;'i'
   338  007F96  6D                 	db	109	;'m'
   339  007F97  65                 	db	101	;'e'
   340  007F98  6E                 	db	110	;'n'
   341  007F99  74                 	db	116	;'t'
   342  007F9A  6F                 	db	111	;'o'
   343  007F9B  00                 	db	0
   344  007F9C                     STR_21:
   345  007F9C  41                 	db	65	;'A'
   346  007F9D  70                 	db	112	;'p'
   347  007F9E  72                 	db	114	;'r'
   348  007F9F  6F                 	db	111	;'o'
   349  007FA0  76                 	db	118	;'v'
   350  007FA1  61                 	db	97	;'a'
   351  007FA2  64                 	db	100	;'d'
   352  007FA3  6F                 	db	111	;'o'
   353  007FA4  21                 	db	33
   354  007FA5  00                 	db	0
   355  007FA6                     STR_17:
   356  007FA6  65                 	db	101	;'e'
   357  007FA7  6E                 	db	110	;'n'
   358  007FA8  63                 	db	99	;'c'
   359  007FA9  68                 	db	104	;'h'
   360  007FAA  65                 	db	101	;'e'
   361  007FAB  6E                 	db	110	;'n'
   362  007FAC  64                 	db	100	;'d'
   363  007FAD  6F                 	db	111	;'o'
   364  007FAE  21                 	db	33
   365  007FAF  00                 	db	0
   366  007FB0                     STR_8:
   367  007FB0  31                 	db	49	;'1'
   368  007FB1  2D                 	db	45
   369  007FB2  20                 	db	32
   370  007FB3  50                 	db	80	;'P'
   371  007FB4  69                 	db	105	;'i'
   372  007FB5  6C                 	db	108	;'l'
   373  007FB6  73                 	db	115	;'s'
   374  007FB7  65                 	db	101	;'e'
   375  007FB8  6E                 	db	110	;'n'
   376  007FB9  00                 	db	0
   377  007FBA                     STR_19:
   378  007FBA  30                 	db	48	;'0'
   379  007FBB  2D                 	db	45
   380  007FBC  20                 	db	32
   381  007FBD  50                 	db	80	;'P'
   382  007FBE  61                 	db	97	;'a'
   383  007FBF  67                 	db	103	;'g'
   384  007FC0  61                 	db	97	;'a'
   385  007FC1  72                 	db	114	;'r'
   386  007FC2  00                 	db	0
   387  007FC3                     STR_10:
   388  007FC3  33                 	db	51	;'3'
   389  007FC4  2D                 	db	45
   390  007FC5  20                 	db	32
   391  007FC6  4C                 	db	76	;'L'
   392  007FC7  61                 	db	97	;'a'
   393  007FC8  67                 	db	103	;'g'
   394  007FC9  65                 	db	101	;'e'
   395  007FCA  72                 	db	114	;'r'
   396  007FCB  00                 	db	0
   397  007FCC                     STR_6:
   398  007FCC  34                 	db	52	;'4'
   399  007FCD  20                 	db	32
   400  007FCE  6F                 	db	111	;'o'
   401  007FCF  70                 	db	112	;'p'
   402  007FD0  63                 	db	99	;'c'
   403  007FD1  6F                 	db	111	;'o'
   404  007FD2  65                 	db	101	;'e'
   405  007FD3  73                 	db	115	;'s'
   406  007FD4  00                 	db	0
   407  007FD5                     STR_24:
   408  007FD5  6E                 	db	110	;'n'
   409  007FD6  6F                 	db	111	;'o'
   410  007FD7  20                 	db	32
   411  007FD8  52                 	db	82	;'R'
   412  007FD9  65                 	db	101	;'e'
   413  007FDA  73                 	db	115	;'s'
   414  007FDB  65                 	db	101	;'e'
   415  007FDC  74                 	db	116	;'t'
   416  007FDD  00                 	db	0
   417  007FDE                     STR_9:
   418  007FDE  32                 	db	50	;'2'
   419  007FDF  2D                 	db	45
   420  007FE0  20                 	db	32
   421  007FE1  53                 	db	83	;'S'
   422  007FE2  74                 	db	116	;'t'
   423  007FE3  6F                 	db	111	;'o'
   424  007FE4  75                 	db	117	;'u'
   425  007FE5  74                 	db	116	;'t'
   426  007FE6  00                 	db	0
   427  007FE7                     STR_4:
   428  007FE7  50                 	db	80	;'P'
   429  007FE8  65                 	db	101	;'e'
   430  007FE9  72                 	db	114	;'r'
   431  007FEA  65                 	db	101	;'e'
   432  007FEB  69                 	db	105	;'i'
   433  007FEC  72                 	db	114	;'r'
   434  007FED  61                 	db	97	;'a'
   435  007FEE  00                 	db	0
   436  007FEF                     STR_2:
   437  007FEF  52                 	db	82	;'R'
   438  007FF0  6F                 	db	111	;'o'
   439  007FF1  64                 	db	100	;'d'
   440  007FF2  72                 	db	114	;'r'
   441  007FF3  69                 	db	105	;'i'
   442  007FF4  67                 	db	103	;'g'
   443  007FF5  6F                 	db	111	;'o'
   444  007FF6  00                 	db	0
   445  007FF7                     STR_11:
   446  007FF7  34                 	db	52	;'4'
   447  007FF8  2D                 	db	45
   448  007FF9  20                 	db	32
   449  007FFA  49                 	db	73	;'I'
   450  007FFB  70                 	db	112	;'p'
   451  007FFC  61                 	db	97	;'a'
   452  007FFD  00                 	db	0
   453  007FFE  00                 	db	0	; dummy byte at the end
   454  0000                     
   455                           ; #config settings
   456                           
   457                           	psect	cinit
   458  005B0C                     __pcinit:
   459                           	callstack 0
   460  005B0C                     start_initialization:
   461                           	callstack 0
   462  005B0C                     __initialization:
   463                           	callstack 0
   464                           
   465                           ; Initialize objects allocated to COMRAM (32 bytes)
   466                           ; load TBLPTR registers with __pidataCOMRAM
   467  005B0C  0E98               	movlw	low __pidataCOMRAM
   468  005B0E  6EF6               	movwf	tblptrl,c
   469  005B10  0E5A               	movlw	high __pidataCOMRAM
   470  005B12  6EF7               	movwf	tblptrh,c
   471  005B14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   472  005B16  6EF8               	movwf	tblptru,c
   473  005B18  EE00  F032         	lfsr	0,__pdataCOMRAM
   474  005B1C  EE10 F020          	lfsr	1,32
   475  005B20                     copy_data0:
   476  005B20  0009               	tblrd		*+
   477  005B22  CFF5 FFEE          	movff	tablat,postinc0
   478  005B26  50E5               	movf	postdec1,w,c
   479  005B28  50E1               	movf	fsr1l,w,c
   480  005B2A  E1FA               	bnz	copy_data0
   481                           
   482                           ; Clear objects allocated to COMRAM (13 bytes)
   483  005B2C  EE00  F052         	lfsr	0,__pbssCOMRAM
   484  005B30  0E0D               	movlw	13
   485  005B32                     clear_0:
   486  005B32  6AEE               	clrf	postinc0,c
   487  005B34  06E8               	decf	wreg,f,c
   488  005B36  E1FD               	bnz	clear_0
   489  005B38                     end_of_initialization:
   490                           	callstack 0
   491  005B38                     __end_of__initialization:
   492                           	callstack 0
   493  005B38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   494  005B3A  6EF8               	movwf	tblptru,c
   495  005B3C  0100               	movlb	0
   496  005B3E  EFF8  F032         	goto	_main	;jump to C main() function
   497                           
   498                           	psect	bssCOMRAM
   499  000052                     __pbssCOMRAM:
   500                           	callstack 0
   501  000052                     kpDebounce@valorAntigo:
   502                           	callstack 0
   503  000052                     	ds	2
   504  000054                     kpDebounce@valorNovo:
   505                           	callstack 0
   506  000054                     	ds	2
   507  000056                     _valor:
   508                           	callstack 0
   509  000056                     	ds	2
   510  000058                     _v3:
   511                           	callstack 0
   512  000058                     	ds	1
   513  000059                     _v2:
   514                           	callstack 0
   515  000059                     	ds	1
   516  00005A                     _v1:
   517                           	callstack 0
   518  00005A                     	ds	1
   519  00005B                     _v0:
   520                           	callstack 0
   521  00005B                     	ds	1
   522  00005C                     _display:
   523                           	callstack 0
   524  00005C                     	ds	1
   525  00005D                     _de:
   526                           	callstack 0
   527  00005D                     	ds	1
   528  00005E                     kpDebounce@tempo:
   529                           	callstack 0
   530  00005E                     	ds	1
   531                           
   532                           	psect	dataCOMRAM
   533  000032                     __pdataCOMRAM:
   534                           	callstack 0
   535  000032                     main@F2688:
   536                           	callstack 0
   537  000032                     	ds	32
   538                           
   539                           	psect	cstackCOMRAM
   540  000001                     __pcstackCOMRAM:
   541                           	callstack 0
   542  000001                     ??_kpDebounce:
   543  000001                     ?_kpRead:
   544                           	callstack 0
   545  000001                     lcd_wr@val:
   546                           	callstack 0
   547  000001                     Delay40us@i:
   548                           	callstack 0
   549  000001                     ssdDigit@pos:
   550                           	callstack 0
   551  000001                     atraso_ms@valor:
   552                           	callstack 0
   553  000001                     digitalWrite@pin:
   554                           	callstack 0
   555  000001                     pinMode@pin:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x0
   559  000001                     	ds	1
   560  000002                     Delay2ms@i:
   561                           	callstack 0
   562  000002                     ssdDigit@val:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x1
   566  000002                     	ds	1
   567  000003                     atraso_ms@i:
   568                           	callstack 0
   569  000003                     digitalWrite@value:
   570                           	callstack 0
   571  000003                     pinMode@type:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x2
   575  000003                     	ds	2
   576  000005                     ??_digitalWrite:
   577  000005                     ??_pinMode:
   578  000005                     atraso_ms@j:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x4
   582  000005                     	ds	1
   583  000006                     kpDebounce@old_D:
   584                           	callstack 0
   585  000006                     lcd_cmd@val:
   586                           	callstack 0
   587  000006                     lcd_dat@val:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x5
   591  000006                     	ds	1
   592  000007                     ??_ssdUpdate:
   593  000007                     lcdCommand@old_D:
   594                           	callstack 0
   595  000007                     lcdData@valor:
   596                           	callstack 0
   597  000007                     kpDebounce@k:
   598                           	callstack 0
   599  000007                     lcd_str@str:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x6
   603  000007                     	ds	1
   604  000008                     lcdCommand@cmd:
   605                           	callstack 0
   606  000008                     lcdData@old_D:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x7
   610  000008                     	ds	1
   611  000009                     ??_lcd_str:
   612  000009                     lcdPosition@coluna:
   613                           	callstack 0
   614  000009                     kpDebounce@j:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x8
   618  000009                     	ds	1
   619  00000A                     lcdPosition@linha:
   620                           	callstack 0
   621  00000A                     kpDebounce@i:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0x9
   625  00000A                     	ds	1
   626  00000B                     lcd_str@i:
   627                           	callstack 0
   628                           
   629                           ; 1 bytes @ 0xA
   630  00000B                     	ds	1
   631  00000C                     main@imagem1:
   632                           	callstack 0
   633                           
   634                           ; 32 bytes @ 0xB
   635  00000C                     	ds	32
   636  00002C                     main@coluna:
   637                           	callstack 0
   638                           
   639                           ; 1 bytes @ 0x2B
   640  00002C                     	ds	1
   641  00002D                     main@linha:
   642                           	callstack 0
   643                           
   644                           ; 1 bytes @ 0x2C
   645  00002D                     	ds	1
   646  00002E                     main@i:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x2D
   650  00002E                     	ds	2
   651  000030                     main@tecla:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x2F
   655  000030                     	ds	2
   656                           
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 74 in file "main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;  imagem1        32   11[COMRAM] unsigned char [32]
   667 ;;  tecla           2   47[COMRAM] unsigned int 
   668 ;;  i               2   45[COMRAM] unsigned int 
   669 ;;  linha           1   44[COMRAM] unsigned char 
   670 ;;  coluna          1   43[COMRAM] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   680 ;;      Params:         0       0       0       0       0       0       0
   681 ;;      Locals:        38       0       0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0
   683 ;;      Totals:        38       0       0       0       0       0       0
   684 ;;Total ram usage:       38 bytes
   685 ;; Hardware stack levels required when called: 4
   686 ;; This function calls:
   687 ;;		_atraso_ms
   688 ;;		_desligaDisplays
   689 ;;		_desligaRele1
   690 ;;		_desligaRele2
   691 ;;		_desligarCooler
   692 ;;		_kpDebounce
   693 ;;		_kpInit
   694 ;;		_kpRead
   695 ;;		_lcdCommand
   696 ;;		_lcdData
   697 ;;		_lcdInit
   698 ;;		_lcdPosition
   699 ;;		_lcd_cmd
   700 ;;		_lcd_str
   701 ;;		_ligaRele1
   702 ;;		_ligaRele2
   703 ;;		_ligarCooler
   704 ;;		_ssdDigit
   705 ;;		_ssdInit
   706 ;;		_ssdUpdate
   707 ;; This function is called by:
   708 ;;		Startup code after reset
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text0
   713  0065F0                     __ptext0:
   714                           	callstack 0
   715  0065F0                     _main:
   716                           	callstack 27
   717  0065F0                     
   718                           ;main.c: 76:     unsigned int tecla = 16, i = 0;
   719  0065F0  0E00               	movlw	0
   720  0065F2  6E31               	movwf	(main@tecla+1)^0,c
   721  0065F4  0E10               	movlw	16
   722  0065F6  6E30               	movwf	main@tecla^0,c
   723                           
   724                           ;main.c: 77:     unsigned char coluna = 0, linha = 0;
   725  0065F8  0E00               	movlw	0
   726  0065FA  6E2C               	movwf	main@coluna^0,c
   727  0065FC  0E00               	movlw	0
   728  0065FE  6E2D               	movwf	main@linha^0,c
   729  006600                     
   730                           ;main.c: 78:     unsigned char imagem1[32] = {
   731  006600  EE20  F032         	lfsr	2,main@F2688
   732  006604  EE10  F00C         	lfsr	1,main@imagem1
   733  006608  0E1F               	movlw	31
   734  00660A                     u2121:
   735  00660A  CFDB FFE3          	movff	plusw2,plusw1
   736  00660E  06E8               	decf	wreg,f,c
   737  006610  E2FC               	bc	u2121
   738  006612                     
   739                           ;main.c: 86:     lcdInit();
   740  006612  ECCA  F02E         	call	_lcdInit	;wreg free
   741  006616                     
   742                           ;main.c: 87:     kpInit();
   743  006616  EC28  F02D         	call	_kpInit	;wreg free
   744  00661A                     
   745                           ;main.c: 88:     ssdInit();
   746  00661A  EC3B  F02E         	call	_ssdInit	;wreg free
   747  00661E                     
   748                           ;main.c: 93:     lcdCommand(0x40);
   749  00661E  0E40               	movlw	64
   750  006620  EC06  F02F         	call	_lcdCommand
   751  006624                     
   752                           ;main.c: 94:     for (i = 0; i < 32; i++)
   753  006624  0E00               	movlw	0
   754  006626  6E2F               	movwf	(main@i+1)^0,c
   755  006628  0E00               	movlw	0
   756  00662A  6E2E               	movwf	main@i^0,c
   757  00662C                     l3420:
   758                           
   759                           ;main.c: 95:         lcdData(imagem1[i]);
   760  00662C  0E0C               	movlw	low main@imagem1
   761  00662E  242E               	addwf	main@i^0,w,c
   762  006630  6ED9               	movwf	fsr2l,c
   763  006632  0E00               	movlw	high main@imagem1
   764  006634  202F               	addwfc	(main@i+1)^0,w,c
   765  006636  6EDA               	movwf	fsr2h,c
   766  006638  50DF               	movf	indf2,w,c
   767  00663A  EC11  F02E         	call	_lcdData
   768  00663E  4A2E               	infsnz	main@i^0,f,c
   769  006640  2A2F               	incf	(main@i+1)^0,f,c
   770  006642  502F               	movf	(main@i+1)^0,w,c
   771  006644  E109               	bnz	u2130
   772  006646  0E20               	movlw	32
   773  006648  5C2E               	subwf	main@i^0,w,c
   774  00664A  A0D8               	btfss	status,0,c
   775  00664C  EF2A  F033         	goto	u2131
   776  006650  EF2C  F033         	goto	u2130
   777  006654                     u2131:
   778  006654  EF16  F033         	goto	l3420
   779  006658                     u2130:
   780  006658                     
   781                           ;main.c: 96:     lcdPosition(0, 0);
   782  006658  0E00               	movlw	0
   783  00665A  6E09               	movwf	lcdPosition@coluna^0,c
   784  00665C  0E00               	movlw	0
   785  00665E  EC92  F02E         	call	_lcdPosition
   786                           
   787                           ;main.c: 97:     lcdData(0);
   788  006662  0E00               	movlw	0
   789  006664  EC11  F02E         	call	_lcdData
   790                           
   791                           ;main.c: 98:     lcdData(1);
   792  006668  0E01               	movlw	1
   793  00666A  EC11  F02E         	call	_lcdData
   794                           
   795                           ;main.c: 99:     lcdPosition(1, 0);
   796  00666E  0E00               	movlw	0
   797  006670  6E09               	movwf	lcdPosition@coluna^0,c
   798  006672  0E01               	movlw	1
   799  006674  EC92  F02E         	call	_lcdPosition
   800                           
   801                           ;main.c: 100:     lcdData(2);
   802  006678  0E02               	movlw	2
   803  00667A  EC11  F02E         	call	_lcdData
   804                           
   805                           ;main.c: 101:     lcdData(3);
   806  00667E  0E03               	movlw	3
   807  006680  EC11  F02E         	call	_lcdData
   808                           
   809                           ;main.c: 104:     lcdPosition(0, 4);
   810  006684  0E04               	movlw	4
   811  006686  6E09               	movwf	lcdPosition@coluna^0,c
   812  006688  0E00               	movlw	0
   813  00668A  EC92  F02E         	call	_lcdPosition
   814  00668E                     
   815                           ;main.c: 105:     lcd_str("Cervejaria");
   816  00668E  0E7B               	movlw	low STR_1
   817  006690  6E07               	movwf	lcd_str@str^0,c
   818  006692  0E7F               	movlw	high STR_1
   819  006694  6E08               	movwf	(lcd_str@str+1)^0,c
   820  006696  ECC0  F02D         	call	_lcd_str	;wreg free
   821  00669A                     
   822                           ;main.c: 106:     lcdPosition(1, 4);
   823  00669A  0E04               	movlw	4
   824  00669C  6E09               	movwf	lcdPosition@coluna^0,c
   825  00669E  0E01               	movlw	1
   826  0066A0  EC92  F02E         	call	_lcdPosition
   827                           
   828                           ;main.c: 107:     lcd_str("Rodrigo");
   829  0066A4  0EEF               	movlw	low STR_2
   830  0066A6  6E07               	movwf	lcd_str@str^0,c
   831  0066A8  0E7F               	movlw	high STR_2
   832  0066AA  6E08               	movwf	(lcd_str@str+1)^0,c
   833  0066AC  ECC0  F02D         	call	_lcd_str	;wreg free
   834  0066B0                     
   835                           ;main.c: 108:     lcdPosition(2, 4);
   836  0066B0  0E04               	movlw	4
   837  0066B2  6E09               	movwf	lcdPosition@coluna^0,c
   838  0066B4  0E02               	movlw	2
   839  0066B6  EC92  F02E         	call	_lcdPosition
   840  0066BA                     
   841                           ;main.c: 109:     lcd_str("Nascimento");
   842  0066BA  0E91               	movlw	low STR_3
   843  0066BC  6E07               	movwf	lcd_str@str^0,c
   844  0066BE  0E7F               	movlw	high STR_3
   845  0066C0  6E08               	movwf	(lcd_str@str+1)^0,c
   846  0066C2  ECC0  F02D         	call	_lcd_str	;wreg free
   847                           
   848                           ;main.c: 110:     lcdPosition(3, 4);
   849  0066C6  0E04               	movlw	4
   850  0066C8  6E09               	movwf	lcdPosition@coluna^0,c
   851  0066CA  0E03               	movlw	3
   852  0066CC  EC92  F02E         	call	_lcdPosition
   853  0066D0                     
   854                           ;main.c: 111:     lcd_str("Pereira");
   855  0066D0  0EE7               	movlw	low STR_4
   856  0066D2  6E07               	movwf	lcd_str@str^0,c
   857  0066D4  0E7F               	movlw	high STR_4
   858  0066D6  6E08               	movwf	(lcd_str@str+1)^0,c
   859  0066D8  ECC0  F02D         	call	_lcd_str	;wreg free
   860  0066DC                     
   861                           ;main.c: 112:     atraso_ms(5000);
   862  0066DC  0E13               	movlw	19
   863  0066DE  6E02               	movwf	(atraso_ms@valor+1)^0,c
   864  0066E0  0E88               	movlw	136
   865  0066E2  6E01               	movwf	atraso_ms@valor^0,c
   866  0066E4  ECA1  F02D         	call	_atraso_ms	;wreg free
   867  0066E8                     
   868                           ;main.c: 117:     lcd_cmd(0x01);
   869  0066E8  0E01               	movlw	1
   870  0066EA  EC5C  F02D         	call	_lcd_cmd
   871  0066EE                     
   872                           ;main.c: 118:     lcdPosition(0, 0);
   873  0066EE  0E00               	movlw	0
   874  0066F0  6E09               	movwf	lcdPosition@coluna^0,c
   875  0066F2  0E00               	movlw	0
   876  0066F4  EC92  F02E         	call	_lcdPosition
   877                           
   878                           ;main.c: 119:     lcd_str("Escolha entre");
   879  0066F8  0E60               	movlw	low STR_5
   880  0066FA  6E07               	movwf	lcd_str@str^0,c
   881  0066FC  0E7F               	movlw	high STR_5
   882  0066FE  6E08               	movwf	(lcd_str@str+1)^0,c
   883  006700  ECC0  F02D         	call	_lcd_str	;wreg free
   884  006704                     
   885                           ;main.c: 120:     lcdPosition(1, 0);
   886  006704  0E00               	movlw	0
   887  006706  6E09               	movwf	lcdPosition@coluna^0,c
   888  006708  0E01               	movlw	1
   889  00670A  EC92  F02E         	call	_lcdPosition
   890  00670E                     
   891                           ;main.c: 121:     lcd_str("4 opcoes");
   892  00670E  0ECC               	movlw	low STR_6
   893  006710  6E07               	movwf	lcd_str@str^0,c
   894  006712  0E7F               	movlw	high STR_6
   895  006714  6E08               	movwf	(lcd_str@str+1)^0,c
   896  006716  ECC0  F02D         	call	_lcd_str	;wreg free
   897                           
   898                           ;main.c: 122:     lcdPosition(2, 0);
   899  00671A  0E00               	movlw	0
   900  00671C  6E09               	movwf	lcdPosition@coluna^0,c
   901  00671E  0E02               	movlw	2
   902  006720  EC92  F02E         	call	_lcdPosition
   903  006724                     
   904                           ;main.c: 123:     lcd_str("de cerveja");
   905  006724  0E86               	movlw	low STR_7
   906  006726  6E07               	movwf	lcd_str@str^0,c
   907  006728  0E7F               	movlw	high STR_7
   908  00672A  6E08               	movwf	(lcd_str@str+1)^0,c
   909  00672C  ECC0  F02D         	call	_lcd_str	;wreg free
   910  006730                     
   911                           ;main.c: 124:     atraso_ms(5000);
   912  006730  0E13               	movlw	19
   913  006732  6E02               	movwf	(atraso_ms@valor+1)^0,c
   914  006734  0E88               	movlw	136
   915  006736  6E01               	movwf	atraso_ms@valor^0,c
   916  006738  ECA1  F02D         	call	_atraso_ms	;wreg free
   917  00673C                     
   918                           ;main.c: 127:     lcd_cmd(0x01);
   919  00673C  0E01               	movlw	1
   920  00673E  EC5C  F02D         	call	_lcd_cmd
   921  006742                     
   922                           ;main.c: 128:     lcdPosition(0, 0);
   923  006742  0E00               	movlw	0
   924  006744  6E09               	movwf	lcdPosition@coluna^0,c
   925  006746  0E00               	movlw	0
   926  006748  EC92  F02E         	call	_lcdPosition
   927                           
   928                           ;main.c: 129:     lcd_str("1- Pilsen");
   929  00674C  0EB0               	movlw	low STR_8
   930  00674E  6E07               	movwf	lcd_str@str^0,c
   931  006750  0E7F               	movlw	high STR_8
   932  006752  6E08               	movwf	(lcd_str@str+1)^0,c
   933  006754  ECC0  F02D         	call	_lcd_str	;wreg free
   934  006758                     
   935                           ;main.c: 130:     lcdPosition(1, 0);
   936  006758  0E00               	movlw	0
   937  00675A  6E09               	movwf	lcdPosition@coluna^0,c
   938  00675C  0E01               	movlw	1
   939  00675E  EC92  F02E         	call	_lcdPosition
   940  006762                     
   941                           ;main.c: 131:     lcd_str("2- Stout");
   942  006762  0EDE               	movlw	low STR_9
   943  006764  6E07               	movwf	lcd_str@str^0,c
   944  006766  0E7F               	movlw	high STR_9
   945  006768  6E08               	movwf	(lcd_str@str+1)^0,c
   946  00676A  ECC0  F02D         	call	_lcd_str	;wreg free
   947                           
   948                           ;main.c: 132:     lcdPosition(2, 0);
   949  00676E  0E00               	movlw	0
   950  006770  6E09               	movwf	lcdPosition@coluna^0,c
   951  006772  0E02               	movlw	2
   952  006774  EC92  F02E         	call	_lcdPosition
   953  006778                     
   954                           ;main.c: 133:     lcd_str("3- Lager");
   955  006778  0EC3               	movlw	low STR_10
   956  00677A  6E07               	movwf	lcd_str@str^0,c
   957  00677C  0E7F               	movlw	high STR_10
   958  00677E  6E08               	movwf	(lcd_str@str+1)^0,c
   959  006780  ECC0  F02D         	call	_lcd_str	;wreg free
   960  006784                     
   961                           ;main.c: 134:     lcdPosition(3, 0);
   962  006784  0E00               	movlw	0
   963  006786  6E09               	movwf	lcdPosition@coluna^0,c
   964  006788  0E03               	movlw	3
   965  00678A  EC92  F02E         	call	_lcdPosition
   966                           
   967                           ;main.c: 135:     lcd_str("4- Ipa");
   968  00678E  0EF7               	movlw	low STR_11
   969  006790  6E07               	movwf	lcd_str@str^0,c
   970  006792  0E7F               	movlw	high STR_11
   971  006794  6E08               	movwf	(lcd_str@str+1)^0,c
   972  006796  ECC0  F02D         	call	_lcd_str	;wreg free
   973  00679A                     l3464:
   974                           
   975                           ;main.c: 140:         kpDebounce();
   976  00679A  ECED  F02F         	call	_kpDebounce	;wreg free
   977  00679E                     
   978                           ;main.c: 141:         if (kpRead() != tecla) {
   979  00679E  EC2D  F02D         	call	_kpRead	;wreg free
   980  0067A2  5030               	movf	main@tecla^0,w,c
   981  0067A4  1801               	xorwf	?_kpRead^0,w,c
   982  0067A6  E109               	bnz	u2140
   983  0067A8  5031               	movf	(main@tecla+1)^0,w,c
   984  0067AA  1802               	xorwf	(?_kpRead+1)^0,w,c
   985  0067AC  B4D8               	btfsc	status,2,c
   986  0067AE  EFDB  F033         	goto	u2141
   987  0067B2  EFDD  F033         	goto	u2140
   988  0067B6                     u2141:
   989  0067B6  EFCD  F033         	goto	l3464
   990  0067BA                     u2140:
   991  0067BA                     
   992                           ;main.c: 142:             tecla = kpRead();
   993  0067BA  EC2D  F02D         	call	_kpRead	;wreg free
   994  0067BE  C001  F030         	movff	?_kpRead,main@tecla
   995  0067C2  C002  F031         	movff	?_kpRead+1,main@tecla+1
   996  0067C6                     
   997                           ;main.c: 143:             if (((tecla) & (1<<(3)))) {
   998  0067C6  A630               	btfss	main@tecla^0,3,c
   999  0067C8  EFE8  F033         	goto	u2151
  1000  0067CC  EFEA  F033         	goto	u2150
  1001  0067D0                     u2151:
  1002  0067D0  EFC6  F036         	goto	l73
  1003  0067D4                     u2150:
  1004  0067D4                     
  1005                           ;main.c: 144:                 lcd_cmd(0x01);
  1006  0067D4  0E01               	movlw	1
  1007  0067D6  EC5C  F02D         	call	_lcd_cmd
  1008                           
  1009                           ;main.c: 145:                 lcdPosition(0, 0);
  1010  0067DA  0E00               	movlw	0
  1011  0067DC  6E09               	movwf	lcdPosition@coluna^0,c
  1012  0067DE  0E00               	movlw	0
  1013  0067E0  EC92  F02E         	call	_lcdPosition
  1014  0067E4                     
  1015                           ;main.c: 146:                 lcd_str("Pilsen");
  1016  0067E4  0EB3               	movlw	low (STR_8+3)
  1017  0067E6  6E07               	movwf	lcd_str@str^0,c
  1018  0067E8  0E7F               	movlw	high (STR_8+3)
  1019  0067EA  6E08               	movwf	(lcd_str@str+1)^0,c
  1020  0067EC  ECC0  F02D         	call	_lcd_str	;wreg free
  1021  0067F0                     
  1022                           ;main.c: 147:                 lcdPosition(1, 0);
  1023  0067F0  0E00               	movlw	0
  1024  0067F2  6E09               	movwf	lcdPosition@coluna^0,c
  1025  0067F4  0E01               	movlw	1
  1026  0067F6  EC92  F02E         	call	_lcdPosition
  1027                           
  1028                           ;main.c: 148:                 lcd_str("1- 300ml    R$7");
  1029  0067FA  0E26               	movlw	low STR_13
  1030  0067FC  6E07               	movwf	lcd_str@str^0,c
  1031  0067FE  0E7F               	movlw	high STR_13
  1032  006800  6E08               	movwf	(lcd_str@str+1)^0,c
  1033  006802  ECC0  F02D         	call	_lcd_str	;wreg free
  1034  006806                     
  1035                           ;main.c: 149:                 lcdPosition(2, 0);
  1036  006806  0E00               	movlw	0
  1037  006808  6E09               	movwf	lcdPosition@coluna^0,c
  1038  00680A  0E02               	movlw	2
  1039  00680C  EC92  F02E         	call	_lcdPosition
  1040  006810                     
  1041                           ;main.c: 150:                 lcd_str("2- 500ml    R$10");
  1042  006810  0EF3               	movlw	low STR_14
  1043  006812  6E07               	movwf	lcd_str@str^0,c
  1044  006814  0E7E               	movlw	high STR_14
  1045  006816  6E08               	movwf	(lcd_str@str+1)^0,c
  1046  006818  ECC0  F02D         	call	_lcd_str	;wreg free
  1047                           
  1048                           ;main.c: 151:                 lcdPosition(3, 0);
  1049  00681C  0E00               	movlw	0
  1050  00681E  6E09               	movwf	lcdPosition@coluna^0,c
  1051  006820  0E03               	movlw	3
  1052  006822  EC92  F02E         	call	_lcdPosition
  1053  006826                     
  1054                           ;main.c: 152:                 lcd_str("3- 700ml    R$12");
  1055  006826  0E04               	movlw	low STR_15
  1056  006828  6E07               	movwf	lcd_str@str^0,c
  1057  00682A  0E7F               	movlw	high STR_15
  1058  00682C  6E08               	movwf	(lcd_str@str+1)^0,c
  1059  00682E  ECC0  F02D         	call	_lcd_str	;wreg free
  1060  006832                     l3484:
  1061                           
  1062                           ;main.c: 154:                     kpDebounce();
  1063  006832  ECED  F02F         	call	_kpDebounce	;wreg free
  1064  006836                     
  1065                           ;main.c: 155:                     if (kpRead() != tecla) {
  1066  006836  EC2D  F02D         	call	_kpRead	;wreg free
  1067  00683A  5030               	movf	main@tecla^0,w,c
  1068  00683C  1801               	xorwf	?_kpRead^0,w,c
  1069  00683E  E109               	bnz	u2160
  1070  006840  5031               	movf	(main@tecla+1)^0,w,c
  1071  006842  1802               	xorwf	(?_kpRead+1)^0,w,c
  1072  006844  B4D8               	btfsc	status,2,c
  1073  006846  EF27  F034         	goto	u2161
  1074  00684A  EF29  F034         	goto	u2160
  1075  00684E                     u2161:
  1076  00684E  EF19  F034         	goto	l3484
  1077  006852                     u2160:
  1078  006852                     
  1079                           ;main.c: 156:                         tecla = kpRead();
  1080  006852  EC2D  F02D         	call	_kpRead	;wreg free
  1081  006856  C001  F030         	movff	?_kpRead,main@tecla
  1082  00685A  C002  F031         	movff	?_kpRead+1,main@tecla+1
  1083  00685E                     
  1084                           ;main.c: 157:                         if (((tecla) & (1<<(3)))) {
  1085  00685E  A630               	btfss	main@tecla^0,3,c
  1086  006860  EF34  F034         	goto	u2171
  1087  006864  EF36  F034         	goto	u2170
  1088  006868                     u2171:
  1089  006868  EF0C  F035         	goto	l76
  1090  00686C                     u2170:
  1091  00686C                     
  1092                           ;main.c: 158:                             lcd_cmd(0x01);
  1093  00686C  0E01               	movlw	1
  1094  00686E  EC5C  F02D         	call	_lcd_cmd
  1095                           
  1096                           ;main.c: 159:                             lcdPosition(0, 0);
  1097  006872  0E00               	movlw	0
  1098  006874  6E09               	movwf	lcdPosition@coluna^0,c
  1099  006876  0E00               	movlw	0
  1100  006878  EC92  F02E         	call	_lcdPosition
  1101  00687C                     
  1102                           ;main.c: 160:                             lcd_str("Seu copo esta");
  1103  00687C  0E52               	movlw	low STR_16
  1104  00687E  6E07               	movwf	lcd_str@str^0,c
  1105  006880  0E7F               	movlw	high STR_16
  1106  006882  6E08               	movwf	(lcd_str@str+1)^0,c
  1107  006884  ECC0  F02D         	call	_lcd_str	;wreg free
  1108  006888                     
  1109                           ;main.c: 161:                             lcdPosition(1, 0);
  1110  006888  0E00               	movlw	0
  1111  00688A  6E09               	movwf	lcdPosition@coluna^0,c
  1112  00688C  0E01               	movlw	1
  1113  00688E  EC92  F02E         	call	_lcdPosition
  1114                           
  1115                           ;main.c: 162:                             lcd_str("enchendo!");
  1116  006892  0EA6               	movlw	low STR_17
  1117  006894  6E07               	movwf	lcd_str@str^0,c
  1118  006896  0E7F               	movlw	high STR_17
  1119  006898  6E08               	movwf	(lcd_str@str+1)^0,c
  1120  00689A  ECC0  F02D         	call	_lcd_str	;wreg free
  1121  00689E                     
  1122                           ;main.c: 163:                             ligarCooler();
  1123  00689E  EC24  F02D         	call	_ligarCooler	;wreg free
  1124  0068A2                     
  1125                           ;main.c: 164:                             atraso_ms(5000);
  1126  0068A2  0E13               	movlw	19
  1127  0068A4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1128  0068A6  0E88               	movlw	136
  1129  0068A8  6E01               	movwf	atraso_ms@valor^0,c
  1130  0068AA  ECA1  F02D         	call	_atraso_ms	;wreg free
  1131  0068AE                     
  1132                           ;main.c: 165:                             desligarCooler();
  1133  0068AE  EC1C  F02D         	call	_desligarCooler	;wreg free
  1134  0068B2                     
  1135                           ;main.c: 166:                             lcd_cmd(0x01);
  1136  0068B2  0E01               	movlw	1
  1137  0068B4  EC5C  F02D         	call	_lcd_cmd
  1138  0068B8                     
  1139                           ;main.c: 167:                             lcdPosition(0, 0);
  1140  0068B8  0E00               	movlw	0
  1141  0068BA  6E09               	movwf	lcdPosition@coluna^0,c
  1142  0068BC  0E00               	movlw	0
  1143  0068BE  EC92  F02E         	call	_lcdPosition
  1144  0068C2                     
  1145                           ;main.c: 168:                             lcd_str("Valor no display");
  1146  0068C2  0E15               	movlw	low STR_18
  1147  0068C4  6E07               	movwf	lcd_str@str^0,c
  1148  0068C6  0E7F               	movlw	high STR_18
  1149  0068C8  6E08               	movwf	(lcd_str@str+1)^0,c
  1150  0068CA  ECC0  F02D         	call	_lcd_str	;wreg free
  1151                           
  1152                           ;main.c: 169:                             lcdPosition(2, 0);
  1153  0068CE  0E00               	movlw	0
  1154  0068D0  6E09               	movwf	lcdPosition@coluna^0,c
  1155  0068D2  0E02               	movlw	2
  1156  0068D4  EC92  F02E         	call	_lcdPosition
  1157  0068D8                     
  1158                           ;main.c: 170:                             lcd_str("0- Pagar");
  1159  0068D8  0EBA               	movlw	low STR_19
  1160  0068DA  6E07               	movwf	lcd_str@str^0,c
  1161  0068DC  0E7F               	movlw	high STR_19
  1162  0068DE  6E08               	movwf	(lcd_str@str+1)^0,c
  1163  0068E0  ECC0  F02D         	call	_lcd_str	;wreg free
  1164  0068E4                     
  1165                           ;main.c: 171:                             ssdInit();
  1166  0068E4  EC3B  F02E         	call	_ssdInit	;wreg free
  1167  0068E8                     
  1168                           ;main.c: 172:                             for (i = 0; i < 3000; i++) {
  1169  0068E8  0E00               	movlw	0
  1170  0068EA  6E2F               	movwf	(main@i+1)^0,c
  1171  0068EC  0E00               	movlw	0
  1172  0068EE  6E2E               	movwf	main@i^0,c
  1173  0068F0                     l3520:
  1174                           
  1175                           ;main.c: 173:                                 ssdDigit(0, 2);
  1176  0068F0  0E02               	movlw	2
  1177  0068F2  6E01               	movwf	ssdDigit@pos^0,c
  1178  0068F4  0E00               	movlw	0
  1179  0068F6  EC66  F02E         	call	_ssdDigit
  1180                           
  1181                           ;main.c: 174:                                 ssdDigit(7, 3);
  1182  0068FA  0E03               	movlw	3
  1183  0068FC  6E01               	movwf	ssdDigit@pos^0,c
  1184  0068FE  0E07               	movlw	7
  1185  006900  EC66  F02E         	call	_ssdDigit
  1186  006904                     
  1187                           ;main.c: 175:                                 ssdUpdate();
  1188  006904  EC45  F02F         	call	_ssdUpdate	;wreg free
  1189  006908                     
  1190                           ;main.c: 176:                                 atraso_ms(2);
  1191  006908  0E00               	movlw	0
  1192  00690A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1193  00690C  0E02               	movlw	2
  1194  00690E  6E01               	movwf	atraso_ms@valor^0,c
  1195  006910  ECA1  F02D         	call	_atraso_ms	;wreg free
  1196  006914                     
  1197                           ;main.c: 177:                             }
  1198  006914  4A2E               	infsnz	main@i^0,f,c
  1199  006916  2A2F               	incf	(main@i+1)^0,f,c
  1200  006918  0EB8               	movlw	184
  1201  00691A  5C2E               	subwf	main@i^0,w,c
  1202  00691C  0E0B               	movlw	11
  1203  00691E  582F               	subwfb	(main@i+1)^0,w,c
  1204  006920  A0D8               	btfss	status,0,c
  1205  006922  EF95  F034         	goto	u2181
  1206  006926  EF97  F034         	goto	u2180
  1207  00692A                     u2181:
  1208  00692A  EF78  F034         	goto	l3520
  1209  00692E                     u2180:
  1210  00692E                     
  1211                           ;main.c: 178:                             desligaDisplays();
  1212  00692E  ECE8  F02D         	call	_desligaDisplays	;wreg free
  1213  006932                     l3532:
  1214                           
  1215                           ;main.c: 181:                                 kpDebounce();
  1216  006932  ECED  F02F         	call	_kpDebounce	;wreg free
  1217  006936                     
  1218                           ;main.c: 182:                                 if (kpRead() != tecla) {
  1219  006936  EC2D  F02D         	call	_kpRead	;wreg free
  1220  00693A  5030               	movf	main@tecla^0,w,c
  1221  00693C  1801               	xorwf	?_kpRead^0,w,c
  1222  00693E  E109               	bnz	u2190
  1223  006940  5031               	movf	(main@tecla+1)^0,w,c
  1224  006942  1802               	xorwf	(?_kpRead+1)^0,w,c
  1225  006944  B4D8               	btfsc	status,2,c
  1226  006946  EFA7  F034         	goto	u2191
  1227  00694A  EFA9  F034         	goto	u2190
  1228  00694E                     u2191:
  1229  00694E  EF99  F034         	goto	l3532
  1230  006952                     u2190:
  1231  006952                     
  1232                           ;main.c: 183:                                     tecla = kpRead();
  1233  006952  EC2D  F02D         	call	_kpRead	;wreg free
  1234  006956  C001  F030         	movff	?_kpRead,main@tecla
  1235  00695A  C002  F031         	movff	?_kpRead+1,main@tecla+1
  1236  00695E                     
  1237                           ;main.c: 184:                                     if (((tecla) & (1<<(4)))) {
  1238  00695E  A830               	btfss	main@tecla^0,4,c
  1239  006960  EFB4  F034         	goto	u2201
  1240  006964  EFB6  F034         	goto	u2200
  1241  006968                     u2201:
  1242  006968  EF99  F034         	goto	l3532
  1243  00696C                     u2200:
  1244  00696C                     
  1245                           ;main.c: 185:                                         lcd_cmd(0x01);
  1246  00696C  0E01               	movlw	1
  1247  00696E  EC5C  F02D         	call	_lcd_cmd
  1248                           
  1249                           ;main.c: 186:                                         lcdPosition(0, 0);
  1250  006972  0E00               	movlw	0
  1251  006974  6E09               	movwf	lcdPosition@coluna^0,c
  1252  006976  0E00               	movlw	0
  1253  006978  EC92  F02E         	call	_lcdPosition
  1254  00697C                     
  1255                           ;main.c: 187:                                         lcd_str("Carregando...");
  1256  00697C  0E44               	movlw	low STR_20
  1257  00697E  6E07               	movwf	lcd_str@str^0,c
  1258  006980  0E7F               	movlw	high STR_20
  1259  006982  6E08               	movwf	(lcd_str@str+1)^0,c
  1260  006984  ECC0  F02D         	call	_lcd_str	;wreg free
  1261  006988                     
  1262                           ;main.c: 188:                                         atraso_ms(5000);
  1263  006988  0E13               	movlw	19
  1264  00698A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1265  00698C  0E88               	movlw	136
  1266  00698E  6E01               	movwf	atraso_ms@valor^0,c
  1267  006990  ECA1  F02D         	call	_atraso_ms	;wreg free
  1268  006994                     
  1269                           ;main.c: 189:                                         lcd_cmd(0x01);
  1270  006994  0E01               	movlw	1
  1271  006996  EC5C  F02D         	call	_lcd_cmd
  1272  00699A                     
  1273                           ;main.c: 190:                                         lcdPosition(0, 0);
  1274  00699A  0E00               	movlw	0
  1275  00699C  6E09               	movwf	lcdPosition@coluna^0,c
  1276  00699E  0E00               	movlw	0
  1277  0069A0  EC92  F02E         	call	_lcdPosition
  1278                           
  1279                           ;main.c: 191:                                         lcd_str("Aprovado!");
  1280  0069A4  0E9C               	movlw	low STR_21
  1281  0069A6  6E07               	movwf	lcd_str@str^0,c
  1282  0069A8  0E7F               	movlw	high STR_21
  1283  0069AA  6E08               	movwf	(lcd_str@str+1)^0,c
  1284  0069AC  ECC0  F02D         	call	_lcd_str	;wreg free
  1285  0069B0                     
  1286                           ;main.c: 192:                                         ligaRele1();
  1287  0069B0  EC16  F02D         	call	_ligaRele1	;wreg free
  1288  0069B4                     
  1289                           ;main.c: 193:                                         ligaRele2();
  1290  0069B4  EC19  F02D         	call	_ligaRele2	;wreg free
  1291  0069B8                     
  1292                           ;main.c: 194:                                         atraso_ms(5000);
  1293  0069B8  0E13               	movlw	19
  1294  0069BA  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1295  0069BC  0E88               	movlw	136
  1296  0069BE  6E01               	movwf	atraso_ms@valor^0,c
  1297  0069C0  ECA1  F02D         	call	_atraso_ms	;wreg free
  1298  0069C4                     
  1299                           ;main.c: 195:                                         desligaRele1();
  1300  0069C4  EC10  F02D         	call	_desligaRele1	;wreg free
  1301  0069C8                     
  1302                           ;main.c: 196:                                         desligaRele2();
  1303  0069C8  EC13  F02D         	call	_desligaRele2	;wreg free
  1304  0069CC                     
  1305                           ;main.c: 197:                                         lcd_cmd(0x01);
  1306  0069CC  0E01               	movlw	1
  1307  0069CE  EC5C  F02D         	call	_lcd_cmd
  1308  0069D2                     
  1309                           ;main.c: 198:                                         lcdPosition(0, 0);
  1310  0069D2  0E00               	movlw	0
  1311  0069D4  6E09               	movwf	lcdPosition@coluna^0,c
  1312  0069D6  0E00               	movlw	0
  1313  0069D8  EC92  F02E         	call	_lcdPosition
  1314  0069DC                     
  1315                           ;main.c: 199:                                         lcd_str("Volte sempre!");
  1316  0069DC  0E36               	movlw	low STR_22
  1317  0069DE  6E07               	movwf	lcd_str@str^0,c
  1318  0069E0  0E7F               	movlw	high STR_22
  1319  0069E2  6E08               	movwf	(lcd_str@str+1)^0,c
  1320  0069E4  ECC0  F02D         	call	_lcd_str	;wreg free
  1321                           
  1322                           ;main.c: 200:                                         lcdPosition(2, 0);
  1323  0069E8  0E00               	movlw	0
  1324  0069EA  6E09               	movwf	lcdPosition@coluna^0,c
  1325  0069EC  0E02               	movlw	2
  1326  0069EE  EC92  F02E         	call	_lcdPosition
  1327  0069F2                     
  1328                           ;main.c: 201:                                         lcd_str("Outro pedido");
  1329  0069F2  0E6E               	movlw	low STR_23
  1330  0069F4  6E07               	movwf	lcd_str@str^0,c
  1331  0069F6  0E7F               	movlw	high STR_23
  1332  0069F8  6E08               	movwf	(lcd_str@str+1)^0,c
  1333  0069FA  ECC0  F02D         	call	_lcd_str	;wreg free
  1334  0069FE                     
  1335                           ;main.c: 202:                                         lcdPosition(3, 0);
  1336  0069FE  0E00               	movlw	0
  1337  006A00  6E09               	movwf	lcdPosition@coluna^0,c
  1338  006A02  0E03               	movlw	3
  1339  006A04  EC92  F02E         	call	_lcdPosition
  1340                           
  1341                           ;main.c: 203:                                         lcd_str("no Reset");
  1342  006A08  0ED5               	movlw	low STR_24
  1343  006A0A  6E07               	movwf	lcd_str@str^0,c
  1344  006A0C  0E7F               	movlw	high STR_24
  1345  006A0E  6E08               	movwf	(lcd_str@str+1)^0,c
  1346  006A10  ECC0  F02D         	call	_lcd_str	;wreg free
  1347  006A14  EF99  F034         	goto	l3532
  1348  006A18                     l76:
  1349                           
  1350                           ;main.c: 208:                         if (((tecla) & (1<<(7)))) {
  1351  006A18  AE30               	btfss	main@tecla^0,7,c
  1352  006A1A  EF11  F035         	goto	u2211
  1353  006A1E  EF13  F035         	goto	u2210
  1354  006A22                     u2211:
  1355  006A22  EFE9  F035         	goto	l83
  1356  006A26                     u2210:
  1357  006A26                     
  1358                           ;main.c: 209:                             lcd_cmd(0x01);
  1359  006A26  0E01               	movlw	1
  1360  006A28  EC5C  F02D         	call	_lcd_cmd
  1361                           
  1362                           ;main.c: 210:                             lcdPosition(0, 0);
  1363  006A2C  0E00               	movlw	0
  1364  006A2E  6E09               	movwf	lcdPosition@coluna^0,c
  1365  006A30  0E00               	movlw	0
  1366  006A32  EC92  F02E         	call	_lcdPosition
  1367  006A36                     
  1368                           ;main.c: 211:                             lcd_str("Seu copo esta");
  1369  006A36  0E52               	movlw	low STR_16
  1370  006A38  6E07               	movwf	lcd_str@str^0,c
  1371  006A3A  0E7F               	movlw	high STR_16
  1372  006A3C  6E08               	movwf	(lcd_str@str+1)^0,c
  1373  006A3E  ECC0  F02D         	call	_lcd_str	;wreg free
  1374  006A42                     
  1375                           ;main.c: 212:                             lcdPosition(1, 0);
  1376  006A42  0E00               	movlw	0
  1377  006A44  6E09               	movwf	lcdPosition@coluna^0,c
  1378  006A46  0E01               	movlw	1
  1379  006A48  EC92  F02E         	call	_lcdPosition
  1380                           
  1381                           ;main.c: 213:                             lcd_str("enchendo!");
  1382  006A4C  0EA6               	movlw	low STR_17
  1383  006A4E  6E07               	movwf	lcd_str@str^0,c
  1384  006A50  0E7F               	movlw	high STR_17
  1385  006A52  6E08               	movwf	(lcd_str@str+1)^0,c
  1386  006A54  ECC0  F02D         	call	_lcd_str	;wreg free
  1387  006A58                     
  1388                           ;main.c: 214:                             ligarCooler();
  1389  006A58  EC24  F02D         	call	_ligarCooler	;wreg free
  1390  006A5C                     
  1391                           ;main.c: 215:                             atraso_ms(5000);
  1392  006A5C  0E13               	movlw	19
  1393  006A5E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1394  006A60  0E88               	movlw	136
  1395  006A62  6E01               	movwf	atraso_ms@valor^0,c
  1396  006A64  ECA1  F02D         	call	_atraso_ms	;wreg free
  1397  006A68                     
  1398                           ;main.c: 216:                             desligarCooler();
  1399  006A68  EC1C  F02D         	call	_desligarCooler	;wreg free
  1400  006A6C                     
  1401                           ;main.c: 217:                             lcd_cmd(0x01);
  1402  006A6C  0E01               	movlw	1
  1403  006A6E  EC5C  F02D         	call	_lcd_cmd
  1404  006A72                     
  1405                           ;main.c: 218:                             lcdPosition(0, 0);
  1406  006A72  0E00               	movlw	0
  1407  006A74  6E09               	movwf	lcdPosition@coluna^0,c
  1408  006A76  0E00               	movlw	0
  1409  006A78  EC92  F02E         	call	_lcdPosition
  1410  006A7C                     
  1411                           ;main.c: 219:                             lcd_str("Valor no display");
  1412  006A7C  0E15               	movlw	low STR_18
  1413  006A7E  6E07               	movwf	lcd_str@str^0,c
  1414  006A80  0E7F               	movlw	high STR_18
  1415  006A82  6E08               	movwf	(lcd_str@str+1)^0,c
  1416  006A84  ECC0  F02D         	call	_lcd_str	;wreg free
  1417                           
  1418                           ;main.c: 220:                             lcdPosition(2, 0);
  1419  006A88  0E00               	movlw	0
  1420  006A8A  6E09               	movwf	lcdPosition@coluna^0,c
  1421  006A8C  0E02               	movlw	2
  1422  006A8E  EC92  F02E         	call	_lcdPosition
  1423  006A92                     
  1424                           ;main.c: 221:                             lcd_str("0- Pagar");
  1425  006A92  0EBA               	movlw	low STR_19
  1426  006A94  6E07               	movwf	lcd_str@str^0,c
  1427  006A96  0E7F               	movlw	high STR_19
  1428  006A98  6E08               	movwf	(lcd_str@str+1)^0,c
  1429  006A9A  ECC0  F02D         	call	_lcd_str	;wreg free
  1430  006A9E                     
  1431                           ;main.c: 222:                             ssdInit();
  1432  006A9E  EC3B  F02E         	call	_ssdInit	;wreg free
  1433  006AA2                     
  1434                           ;main.c: 223:                             for (i = 0; i < 3000; i++) {
  1435  006AA2  0E00               	movlw	0
  1436  006AA4  6E2F               	movwf	(main@i+1)^0,c
  1437  006AA6  0E00               	movlw	0
  1438  006AA8  6E2E               	movwf	main@i^0,c
  1439  006AAA                     l3598:
  1440                           
  1441                           ;main.c: 224:                                 ssdDigit(1, 2);
  1442  006AAA  0E02               	movlw	2
  1443  006AAC  6E01               	movwf	ssdDigit@pos^0,c
  1444  006AAE  0E01               	movlw	1
  1445  006AB0  EC66  F02E         	call	_ssdDigit
  1446                           
  1447                           ;main.c: 225:                                 ssdDigit(0, 3);
  1448  006AB4  0E03               	movlw	3
  1449  006AB6  6E01               	movwf	ssdDigit@pos^0,c
  1450  006AB8  0E00               	movlw	0
  1451  006ABA  EC66  F02E         	call	_ssdDigit
  1452  006ABE                     
  1453                           ;main.c: 226:                                 ssdUpdate();
  1454  006ABE  EC45  F02F         	call	_ssdUpdate	;wreg free
  1455  006AC2                     
  1456                           ;main.c: 227:                                 atraso_ms(2);
  1457  006AC2  0E00               	movlw	0
  1458  006AC4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1459  006AC6  0E02               	movlw	2
  1460  006AC8  6E01               	movwf	atraso_ms@valor^0,c
  1461  006ACA  ECA1  F02D         	call	_atraso_ms	;wreg free
  1462  006ACE                     
  1463                           ;main.c: 228:                             }
  1464  006ACE  4A2E               	infsnz	main@i^0,f,c
  1465  006AD0  2A2F               	incf	(main@i+1)^0,f,c
  1466  006AD2  0EB8               	movlw	184
  1467  006AD4  5C2E               	subwf	main@i^0,w,c
  1468  006AD6  0E0B               	movlw	11
  1469  006AD8  582F               	subwfb	(main@i+1)^0,w,c
  1470  006ADA  A0D8               	btfss	status,0,c
  1471  006ADC  EF72  F035         	goto	u2221
  1472  006AE0  EF74  F035         	goto	u2220
  1473  006AE4                     u2221:
  1474  006AE4  EF55  F035         	goto	l3598
  1475  006AE8                     u2220:
  1476  006AE8                     
  1477                           ;main.c: 229:                             desligaDisplays();
  1478  006AE8  ECE8  F02D         	call	_desligaDisplays	;wreg free
  1479  006AEC                     l3610:
  1480                           
  1481                           ;main.c: 232:                                 kpDebounce();
  1482  006AEC  ECED  F02F         	call	_kpDebounce	;wreg free
  1483  006AF0                     
  1484                           ;main.c: 233:                                 if (kpRead() != tecla) {
  1485  006AF0  EC2D  F02D         	call	_kpRead	;wreg free
  1486  006AF4  5030               	movf	main@tecla^0,w,c
  1487  006AF6  1801               	xorwf	?_kpRead^0,w,c
  1488  006AF8  E109               	bnz	u2230
  1489  006AFA  5031               	movf	(main@tecla+1)^0,w,c
  1490  006AFC  1802               	xorwf	(?_kpRead+1)^0,w,c
  1491  006AFE  B4D8               	btfsc	status,2,c
  1492  006B00  EF84  F035         	goto	u2231
  1493  006B04  EF86  F035         	goto	u2230
  1494  006B08                     u2231:
  1495  006B08  EF76  F035         	goto	l3610
  1496  006B0C                     u2230:
  1497  006B0C                     
  1498                           ;main.c: 234:                                     tecla = kpRead();
  1499  006B0C  EC2D  F02D         	call	_kpRead	;wreg free
  1500  006B10  C001  F030         	movff	?_kpRead,main@tecla
  1501  006B14  C002  F031         	movff	?_kpRead+1,main@tecla+1
  1502  006B18                     
  1503                           ;main.c: 235:                                     if (((tecla) & (1<<(4)))) {
  1504  006B18  A830               	btfss	main@tecla^0,4,c
  1505  006B1A  EF91  F035         	goto	u2241
  1506  006B1E  EF93  F035         	goto	u2240
  1507  006B22                     u2241:
  1508  006B22  EF76  F035         	goto	l3610
  1509  006B26                     u2240:
  1510  006B26                     
  1511                           ;main.c: 236:                                         lcd_cmd(0x01);
  1512  006B26  0E01               	movlw	1
  1513  006B28  EC5C  F02D         	call	_lcd_cmd
  1514                           
  1515                           ;main.c: 237:                                         lcdPosition(0, 0);
  1516  006B2C  0E00               	movlw	0
  1517  006B2E  6E09               	movwf	lcdPosition@coluna^0,c
  1518  006B30  0E00               	movlw	0
  1519  006B32  EC92  F02E         	call	_lcdPosition
  1520  006B36                     
  1521                           ;main.c: 238:                                         lcd_str("Carregando...");
  1522  006B36  0E44               	movlw	low STR_20
  1523  006B38  6E07               	movwf	lcd_str@str^0,c
  1524  006B3A  0E7F               	movlw	high STR_20
  1525  006B3C  6E08               	movwf	(lcd_str@str+1)^0,c
  1526  006B3E  ECC0  F02D         	call	_lcd_str	;wreg free
  1527  006B42                     
  1528                           ;main.c: 239:                                         atraso_ms(5000);
  1529  006B42  0E13               	movlw	19
  1530  006B44  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1531  006B46  0E88               	movlw	136
  1532  006B48  6E01               	movwf	atraso_ms@valor^0,c
  1533  006B4A  ECA1  F02D         	call	_atraso_ms	;wreg free
  1534  006B4E                     
  1535                           ;main.c: 240:                                         lcd_cmd(0x01);
  1536  006B4E  0E01               	movlw	1
  1537  006B50  EC5C  F02D         	call	_lcd_cmd
  1538  006B54                     
  1539                           ;main.c: 241:                                         lcdPosition(0, 0);
  1540  006B54  0E00               	movlw	0
  1541  006B56  6E09               	movwf	lcdPosition@coluna^0,c
  1542  006B58  0E00               	movlw	0
  1543  006B5A  EC92  F02E         	call	_lcdPosition
  1544                           
  1545                           ;main.c: 242:                                         lcd_str("Aprovado!");
  1546  006B5E  0E9C               	movlw	low STR_21
  1547  006B60  6E07               	movwf	lcd_str@str^0,c
  1548  006B62  0E7F               	movlw	high STR_21
  1549  006B64  6E08               	movwf	(lcd_str@str+1)^0,c
  1550  006B66  ECC0  F02D         	call	_lcd_str	;wreg free
  1551  006B6A                     
  1552                           ;main.c: 243:                                         ligaRele1();
  1553  006B6A  EC16  F02D         	call	_ligaRele1	;wreg free
  1554  006B6E                     
  1555                           ;main.c: 244:                                         ligaRele2();
  1556  006B6E  EC19  F02D         	call	_ligaRele2	;wreg free
  1557  006B72                     
  1558                           ;main.c: 245:                                         atraso_ms(5000);
  1559  006B72  0E13               	movlw	19
  1560  006B74  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1561  006B76  0E88               	movlw	136
  1562  006B78  6E01               	movwf	atraso_ms@valor^0,c
  1563  006B7A  ECA1  F02D         	call	_atraso_ms	;wreg free
  1564  006B7E                     
  1565                           ;main.c: 246:                                         desligaRele1();
  1566  006B7E  EC10  F02D         	call	_desligaRele1	;wreg free
  1567  006B82                     
  1568                           ;main.c: 247:                                         desligaRele2();
  1569  006B82  EC13  F02D         	call	_desligaRele2	;wreg free
  1570  006B86                     
  1571                           ;main.c: 248:                                         lcd_cmd(0x01);
  1572  006B86  0E01               	movlw	1
  1573  006B88  EC5C  F02D         	call	_lcd_cmd
  1574  006B8C                     
  1575                           ;main.c: 249:                                         lcdPosition(0, 0);
  1576  006B8C  0E00               	movlw	0
  1577  006B8E  6E09               	movwf	lcdPosition@coluna^0,c
  1578  006B90  0E00               	movlw	0
  1579  006B92  EC92  F02E         	call	_lcdPosition
  1580  006B96                     
  1581                           ;main.c: 250:                                         lcd_str("Volte sempre!");
  1582  006B96  0E36               	movlw	low STR_22
  1583  006B98  6E07               	movwf	lcd_str@str^0,c
  1584  006B9A  0E7F               	movlw	high STR_22
  1585  006B9C  6E08               	movwf	(lcd_str@str+1)^0,c
  1586  006B9E  ECC0  F02D         	call	_lcd_str	;wreg free
  1587                           
  1588                           ;main.c: 251:                                         lcdPosition(2, 0);
  1589  006BA2  0E00               	movlw	0
  1590  006BA4  6E09               	movwf	lcdPosition@coluna^0,c
  1591  006BA6  0E02               	movlw	2
  1592  006BA8  EC92  F02E         	call	_lcdPosition
  1593  006BAC                     
  1594                           ;main.c: 252:                                         lcd_str("Outro pedido");
  1595  006BAC  0E6E               	movlw	low STR_23
  1596  006BAE  6E07               	movwf	lcd_str@str^0,c
  1597  006BB0  0E7F               	movlw	high STR_23
  1598  006BB2  6E08               	movwf	(lcd_str@str+1)^0,c
  1599  006BB4  ECC0  F02D         	call	_lcd_str	;wreg free
  1600  006BB8                     
  1601                           ;main.c: 253:                                         lcdPosition(3, 0);
  1602  006BB8  0E00               	movlw	0
  1603  006BBA  6E09               	movwf	lcdPosition@coluna^0,c
  1604  006BBC  0E03               	movlw	3
  1605  006BBE  EC92  F02E         	call	_lcdPosition
  1606                           
  1607                           ;main.c: 254:                                         lcd_str("no Reset");
  1608  006BC2  0ED5               	movlw	low STR_24
  1609  006BC4  6E07               	movwf	lcd_str@str^0,c
  1610  006BC6  0E7F               	movlw	high STR_24
  1611  006BC8  6E08               	movwf	(lcd_str@str+1)^0,c
  1612  006BCA  ECC0  F02D         	call	_lcd_str	;wreg free
  1613  006BCE  EF76  F035         	goto	l3610
  1614  006BD2                     l83:
  1615                           
  1616                           ;main.c: 259:                         if (((tecla) & (1<<(11)))) {
  1617  006BD2  A631               	btfss	(main@tecla+1)^0,3,c
  1618  006BD4  EFEE  F035         	goto	u2251
  1619  006BD8  EFF0  F035         	goto	u2250
  1620  006BDC                     u2251:
  1621  006BDC  EF19  F034         	goto	l3484
  1622  006BE0                     u2250:
  1623  006BE0                     
  1624                           ;main.c: 260:                             lcd_cmd(0x01);
  1625  006BE0  0E01               	movlw	1
  1626  006BE2  EC5C  F02D         	call	_lcd_cmd
  1627                           
  1628                           ;main.c: 261:                             lcdPosition(0, 0);
  1629  006BE6  0E00               	movlw	0
  1630  006BE8  6E09               	movwf	lcdPosition@coluna^0,c
  1631  006BEA  0E00               	movlw	0
  1632  006BEC  EC92  F02E         	call	_lcdPosition
  1633  006BF0                     
  1634                           ;main.c: 262:                             lcd_str("Seu copo esta");
  1635  006BF0  0E52               	movlw	low STR_16
  1636  006BF2  6E07               	movwf	lcd_str@str^0,c
  1637  006BF4  0E7F               	movlw	high STR_16
  1638  006BF6  6E08               	movwf	(lcd_str@str+1)^0,c
  1639  006BF8  ECC0  F02D         	call	_lcd_str	;wreg free
  1640  006BFC                     
  1641                           ;main.c: 263:                             lcdPosition(1, 0);
  1642  006BFC  0E00               	movlw	0
  1643  006BFE  6E09               	movwf	lcdPosition@coluna^0,c
  1644  006C00  0E01               	movlw	1
  1645  006C02  EC92  F02E         	call	_lcdPosition
  1646                           
  1647                           ;main.c: 264:                             lcd_str("enchendo!");
  1648  006C06  0EA6               	movlw	low STR_17
  1649  006C08  6E07               	movwf	lcd_str@str^0,c
  1650  006C0A  0E7F               	movlw	high STR_17
  1651  006C0C  6E08               	movwf	(lcd_str@str+1)^0,c
  1652  006C0E  ECC0  F02D         	call	_lcd_str	;wreg free
  1653  006C12                     
  1654                           ;main.c: 265:                             ligarCooler();
  1655  006C12  EC24  F02D         	call	_ligarCooler	;wreg free
  1656  006C16                     
  1657                           ;main.c: 266:                             atraso_ms(5000);
  1658  006C16  0E13               	movlw	19
  1659  006C18  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1660  006C1A  0E88               	movlw	136
  1661  006C1C  6E01               	movwf	atraso_ms@valor^0,c
  1662  006C1E  ECA1  F02D         	call	_atraso_ms	;wreg free
  1663  006C22                     
  1664                           ;main.c: 267:                             desligarCooler();
  1665  006C22  EC1C  F02D         	call	_desligarCooler	;wreg free
  1666  006C26                     
  1667                           ;main.c: 268:                             lcd_cmd(0x01);
  1668  006C26  0E01               	movlw	1
  1669  006C28  EC5C  F02D         	call	_lcd_cmd
  1670  006C2C                     
  1671                           ;main.c: 269:                             lcdPosition(0, 0);
  1672  006C2C  0E00               	movlw	0
  1673  006C2E  6E09               	movwf	lcdPosition@coluna^0,c
  1674  006C30  0E00               	movlw	0
  1675  006C32  EC92  F02E         	call	_lcdPosition
  1676  006C36                     
  1677                           ;main.c: 270:                             lcd_str("Valor no display");
  1678  006C36  0E15               	movlw	low STR_18
  1679  006C38  6E07               	movwf	lcd_str@str^0,c
  1680  006C3A  0E7F               	movlw	high STR_18
  1681  006C3C  6E08               	movwf	(lcd_str@str+1)^0,c
  1682  006C3E  ECC0  F02D         	call	_lcd_str	;wreg free
  1683                           
  1684                           ;main.c: 271:                             lcdPosition(2, 0);
  1685  006C42  0E00               	movlw	0
  1686  006C44  6E09               	movwf	lcdPosition@coluna^0,c
  1687  006C46  0E02               	movlw	2
  1688  006C48  EC92  F02E         	call	_lcdPosition
  1689  006C4C                     
  1690                           ;main.c: 272:                             lcd_str("0- Pagar");
  1691  006C4C  0EBA               	movlw	low STR_19
  1692  006C4E  6E07               	movwf	lcd_str@str^0,c
  1693  006C50  0E7F               	movlw	high STR_19
  1694  006C52  6E08               	movwf	(lcd_str@str+1)^0,c
  1695  006C54  ECC0  F02D         	call	_lcd_str	;wreg free
  1696  006C58                     
  1697                           ;main.c: 273:                             ssdInit();
  1698  006C58  EC3B  F02E         	call	_ssdInit	;wreg free
  1699  006C5C                     
  1700                           ;main.c: 274:                             for (i = 0; i < 3000; i++) {
  1701  006C5C  0E00               	movlw	0
  1702  006C5E  6E2F               	movwf	(main@i+1)^0,c
  1703  006C60  0E00               	movlw	0
  1704  006C62  6E2E               	movwf	main@i^0,c
  1705  006C64                     l3676:
  1706                           
  1707                           ;main.c: 275:                                 ssdDigit(1, 2);
  1708  006C64  0E02               	movlw	2
  1709  006C66  6E01               	movwf	ssdDigit@pos^0,c
  1710  006C68  0E01               	movlw	1
  1711  006C6A  EC66  F02E         	call	_ssdDigit
  1712                           
  1713                           ;main.c: 276:                                 ssdDigit(2, 3);
  1714  006C6E  0E03               	movlw	3
  1715  006C70  6E01               	movwf	ssdDigit@pos^0,c
  1716  006C72  0E02               	movlw	2
  1717  006C74  EC66  F02E         	call	_ssdDigit
  1718  006C78                     
  1719                           ;main.c: 277:                                 ssdUpdate();
  1720  006C78  EC45  F02F         	call	_ssdUpdate	;wreg free
  1721  006C7C                     
  1722                           ;main.c: 278:                                 atraso_ms(2);
  1723  006C7C  0E00               	movlw	0
  1724  006C7E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1725  006C80  0E02               	movlw	2
  1726  006C82  6E01               	movwf	atraso_ms@valor^0,c
  1727  006C84  ECA1  F02D         	call	_atraso_ms	;wreg free
  1728  006C88                     
  1729                           ;main.c: 279:                             }
  1730  006C88  4A2E               	infsnz	main@i^0,f,c
  1731  006C8A  2A2F               	incf	(main@i+1)^0,f,c
  1732  006C8C  0EB8               	movlw	184
  1733  006C8E  5C2E               	subwf	main@i^0,w,c
  1734  006C90  0E0B               	movlw	11
  1735  006C92  582F               	subwfb	(main@i+1)^0,w,c
  1736  006C94  A0D8               	btfss	status,0,c
  1737  006C96  EF4F  F036         	goto	u2261
  1738  006C9A  EF51  F036         	goto	u2260
  1739  006C9E                     u2261:
  1740  006C9E  EF32  F036         	goto	l3676
  1741  006CA2                     u2260:
  1742  006CA2                     
  1743                           ;main.c: 280:                             desligaDisplays();
  1744  006CA2  ECE8  F02D         	call	_desligaDisplays	;wreg free
  1745  006CA6                     l3688:
  1746                           
  1747                           ;main.c: 283:                                 kpDebounce();
  1748  006CA6  ECED  F02F         	call	_kpDebounce	;wreg free
  1749  006CAA                     
  1750                           ;main.c: 284:                                 if (kpRead() != tecla) {
  1751  006CAA  EC2D  F02D         	call	_kpRead	;wreg free
  1752  006CAE  5030               	movf	main@tecla^0,w,c
  1753  006CB0  1801               	xorwf	?_kpRead^0,w,c
  1754  006CB2  E109               	bnz	u2270
  1755  006CB4  5031               	movf	(main@tecla+1)^0,w,c
  1756  006CB6  1802               	xorwf	(?_kpRead+1)^0,w,c
  1757  006CB8  B4D8               	btfsc	status,2,c
  1758  006CBA  EF61  F036         	goto	u2271
  1759  006CBE  EF63  F036         	goto	u2270
  1760  006CC2                     u2271:
  1761  006CC2  EF53  F036         	goto	l3688
  1762  006CC6                     u2270:
  1763  006CC6                     
  1764                           ;main.c: 285:                                     tecla = kpRead();
  1765  006CC6  EC2D  F02D         	call	_kpRead	;wreg free
  1766  006CCA  C001  F030         	movff	?_kpRead,main@tecla
  1767  006CCE  C002  F031         	movff	?_kpRead+1,main@tecla+1
  1768  006CD2                     
  1769                           ;main.c: 286:                                     if (((tecla) & (1<<(4)))) {
  1770  006CD2  A830               	btfss	main@tecla^0,4,c
  1771  006CD4  EF6E  F036         	goto	u2281
  1772  006CD8  EF70  F036         	goto	u2280
  1773  006CDC                     u2281:
  1774  006CDC  EF53  F036         	goto	l3688
  1775  006CE0                     u2280:
  1776  006CE0                     
  1777                           ;main.c: 287:                                         lcd_cmd(0x01);
  1778  006CE0  0E01               	movlw	1
  1779  006CE2  EC5C  F02D         	call	_lcd_cmd
  1780                           
  1781                           ;main.c: 288:                                         lcdPosition(0, 0);
  1782  006CE6  0E00               	movlw	0
  1783  006CE8  6E09               	movwf	lcdPosition@coluna^0,c
  1784  006CEA  0E00               	movlw	0
  1785  006CEC  EC92  F02E         	call	_lcdPosition
  1786  006CF0                     
  1787                           ;main.c: 289:                                         lcd_str("Carregando...");
  1788  006CF0  0E44               	movlw	low STR_20
  1789  006CF2  6E07               	movwf	lcd_str@str^0,c
  1790  006CF4  0E7F               	movlw	high STR_20
  1791  006CF6  6E08               	movwf	(lcd_str@str+1)^0,c
  1792  006CF8  ECC0  F02D         	call	_lcd_str	;wreg free
  1793  006CFC                     
  1794                           ;main.c: 290:                                         atraso_ms(5000);
  1795  006CFC  0E13               	movlw	19
  1796  006CFE  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1797  006D00  0E88               	movlw	136
  1798  006D02  6E01               	movwf	atraso_ms@valor^0,c
  1799  006D04  ECA1  F02D         	call	_atraso_ms	;wreg free
  1800  006D08                     
  1801                           ;main.c: 291:                                         lcd_cmd(0x01);
  1802  006D08  0E01               	movlw	1
  1803  006D0A  EC5C  F02D         	call	_lcd_cmd
  1804  006D0E                     
  1805                           ;main.c: 292:                                         lcdPosition(0, 0);
  1806  006D0E  0E00               	movlw	0
  1807  006D10  6E09               	movwf	lcdPosition@coluna^0,c
  1808  006D12  0E00               	movlw	0
  1809  006D14  EC92  F02E         	call	_lcdPosition
  1810                           
  1811                           ;main.c: 293:                                         lcd_str("Aprovado!");
  1812  006D18  0E9C               	movlw	low STR_21
  1813  006D1A  6E07               	movwf	lcd_str@str^0,c
  1814  006D1C  0E7F               	movlw	high STR_21
  1815  006D1E  6E08               	movwf	(lcd_str@str+1)^0,c
  1816  006D20  ECC0  F02D         	call	_lcd_str	;wreg free
  1817  006D24                     
  1818                           ;main.c: 294:                                         ligaRele1();
  1819  006D24  EC16  F02D         	call	_ligaRele1	;wreg free
  1820  006D28                     
  1821                           ;main.c: 295:                                         ligaRele2();
  1822  006D28  EC19  F02D         	call	_ligaRele2	;wreg free
  1823  006D2C                     
  1824                           ;main.c: 296:                                         atraso_ms(5000);
  1825  006D2C  0E13               	movlw	19
  1826  006D2E  6E02               	movwf	(atraso_ms@valor+1)^0,c
  1827  006D30  0E88               	movlw	136
  1828  006D32  6E01               	movwf	atraso_ms@valor^0,c
  1829  006D34  ECA1  F02D         	call	_atraso_ms	;wreg free
  1830  006D38                     
  1831                           ;main.c: 297:                                         desligaRele1();
  1832  006D38  EC10  F02D         	call	_desligaRele1	;wreg free
  1833  006D3C                     
  1834                           ;main.c: 298:                                         desligaRele2();
  1835  006D3C  EC13  F02D         	call	_desligaRele2	;wreg free
  1836  006D40                     
  1837                           ;main.c: 299:                                         lcd_cmd(0x01);
  1838  006D40  0E01               	movlw	1
  1839  006D42  EC5C  F02D         	call	_lcd_cmd
  1840  006D46                     
  1841                           ;main.c: 300:                                         lcdPosition(0, 0);
  1842  006D46  0E00               	movlw	0
  1843  006D48  6E09               	movwf	lcdPosition@coluna^0,c
  1844  006D4A  0E00               	movlw	0
  1845  006D4C  EC92  F02E         	call	_lcdPosition
  1846  006D50                     
  1847                           ;main.c: 301:                                         lcd_str("Volte sempre!");
  1848  006D50  0E36               	movlw	low STR_22
  1849  006D52  6E07               	movwf	lcd_str@str^0,c
  1850  006D54  0E7F               	movlw	high STR_22
  1851  006D56  6E08               	movwf	(lcd_str@str+1)^0,c
  1852  006D58  ECC0  F02D         	call	_lcd_str	;wreg free
  1853                           
  1854                           ;main.c: 302:                                         lcdPosition(2, 0);
  1855  006D5C  0E00               	movlw	0
  1856  006D5E  6E09               	movwf	lcdPosition@coluna^0,c
  1857  006D60  0E02               	movlw	2
  1858  006D62  EC92  F02E         	call	_lcdPosition
  1859  006D66                     
  1860                           ;main.c: 303:                                         lcd_str("Outro pedido");
  1861  006D66  0E6E               	movlw	low STR_23
  1862  006D68  6E07               	movwf	lcd_str@str^0,c
  1863  006D6A  0E7F               	movlw	high STR_23
  1864  006D6C  6E08               	movwf	(lcd_str@str+1)^0,c
  1865  006D6E  ECC0  F02D         	call	_lcd_str	;wreg free
  1866  006D72                     
  1867                           ;main.c: 304:                                         lcdPosition(3, 0);
  1868  006D72  0E00               	movlw	0
  1869  006D74  6E09               	movwf	lcdPosition@coluna^0,c
  1870  006D76  0E03               	movlw	3
  1871  006D78  EC92  F02E         	call	_lcdPosition
  1872                           
  1873                           ;main.c: 305:                                         lcd_str("no Reset");
  1874  006D7C  0ED5               	movlw	low STR_24
  1875  006D7E  6E07               	movwf	lcd_str@str^0,c
  1876  006D80  0E7F               	movlw	high STR_24
  1877  006D82  6E08               	movwf	(lcd_str@str+1)^0,c
  1878  006D84  ECC0  F02D         	call	_lcd_str	;wreg free
  1879  006D88  EF53  F036         	goto	l3688
  1880  006D8C                     l73:
  1881                           
  1882                           ;main.c: 313:             if (((tecla) & (1<<(7)))) {
  1883  006D8C  AE30               	btfss	main@tecla^0,7,c
  1884  006D8E  EFCB  F036         	goto	u2291
  1885  006D92  EFCD  F036         	goto	u2290
  1886  006D96                     u2291:
  1887  006D96  EFA9  F039         	goto	l98
  1888  006D9A                     u2290:
  1889  006D9A                     
  1890                           ;main.c: 314:                 lcd_cmd(0x01);
  1891  006D9A  0E01               	movlw	1
  1892  006D9C  EC5C  F02D         	call	_lcd_cmd
  1893                           
  1894                           ;main.c: 315:                 lcdPosition(0, 0);
  1895  006DA0  0E00               	movlw	0
  1896  006DA2  6E09               	movwf	lcdPosition@coluna^0,c
  1897  006DA4  0E00               	movlw	0
  1898  006DA6  EC92  F02E         	call	_lcdPosition
  1899  006DAA                     
  1900                           ;main.c: 316:                 lcd_str("Stout");
  1901  006DAA  0EE1               	movlw	low (STR_9+3)
  1902  006DAC  6E07               	movwf	lcd_str@str^0,c
  1903  006DAE  0E7F               	movlw	high (STR_9+3)
  1904  006DB0  6E08               	movwf	(lcd_str@str+1)^0,c
  1905  006DB2  ECC0  F02D         	call	_lcd_str	;wreg free
  1906  006DB6                     
  1907                           ;main.c: 317:                 lcdPosition(1, 0);
  1908  006DB6  0E00               	movlw	0
  1909  006DB8  6E09               	movwf	lcdPosition@coluna^0,c
  1910  006DBA  0E01               	movlw	1
  1911  006DBC  EC92  F02E         	call	_lcdPosition
  1912                           
  1913                           ;main.c: 318:                 lcd_str("1- 300ml    R$7");
  1914  006DC0  0E26               	movlw	low STR_13
  1915  006DC2  6E07               	movwf	lcd_str@str^0,c
  1916  006DC4  0E7F               	movlw	high STR_13
  1917  006DC6  6E08               	movwf	(lcd_str@str+1)^0,c
  1918  006DC8  ECC0  F02D         	call	_lcd_str	;wreg free
  1919  006DCC                     
  1920                           ;main.c: 319:                 lcdPosition(2, 0);
  1921  006DCC  0E00               	movlw	0
  1922  006DCE  6E09               	movwf	lcdPosition@coluna^0,c
  1923  006DD0  0E02               	movlw	2
  1924  006DD2  EC92  F02E         	call	_lcdPosition
  1925  006DD6                     
  1926                           ;main.c: 320:                 lcd_str("2- 500ml    R$10");
  1927  006DD6  0EF3               	movlw	low STR_14
  1928  006DD8  6E07               	movwf	lcd_str@str^0,c
  1929  006DDA  0E7E               	movlw	high STR_14
  1930  006DDC  6E08               	movwf	(lcd_str@str+1)^0,c
  1931  006DDE  ECC0  F02D         	call	_lcd_str	;wreg free
  1932                           
  1933                           ;main.c: 321:                 lcdPosition(3, 0);
  1934  006DE2  0E00               	movlw	0
  1935  006DE4  6E09               	movwf	lcdPosition@coluna^0,c
  1936  006DE6  0E03               	movlw	3
  1937  006DE8  EC92  F02E         	call	_lcdPosition
  1938  006DEC                     
  1939                           ;main.c: 322:                 lcd_str("3- 700ml    R$12");
  1940  006DEC  0E04               	movlw	low STR_15
  1941  006DEE  6E07               	movwf	lcd_str@str^0,c
  1942  006DF0  0E7F               	movlw	high STR_15
  1943  006DF2  6E08               	movwf	(lcd_str@str+1)^0,c
  1944  006DF4  ECC0  F02D         	call	_lcd_str	;wreg free
  1945  006DF8                     l3738:
  1946                           
  1947                           ;main.c: 324:                     kpDebounce();
  1948  006DF8  ECED  F02F         	call	_kpDebounce	;wreg free
  1949  006DFC                     
  1950                           ;main.c: 325:                     if (kpRead() != tecla) {
  1951  006DFC  EC2D  F02D         	call	_kpRead	;wreg free
  1952  006E00  5030               	movf	main@tecla^0,w,c
  1953  006E02  1801               	xorwf	?_kpRead^0,w,c
  1954  006E04  E109               	bnz	u2300
  1955  006E06  5031               	movf	(main@tecla+1)^0,w,c
  1956  006E08  1802               	xorwf	(?_kpRead+1)^0,w,c
  1957  006E0A  B4D8               	btfsc	status,2,c
  1958  006E0C  EF0A  F037         	goto	u2301
  1959  006E10  EF0C  F037         	goto	u2300
  1960  006E14                     u2301:
  1961  006E14  EFFC  F036         	goto	l3738
  1962  006E18                     u2300:
  1963  006E18                     
  1964                           ;main.c: 326:                         tecla = kpRead();
  1965  006E18  EC2D  F02D         	call	_kpRead	;wreg free
  1966  006E1C  C001  F030         	movff	?_kpRead,main@tecla
  1967  006E20  C002  F031         	movff	?_kpRead+1,main@tecla+1
  1968  006E24                     
  1969                           ;main.c: 327:                         if (((tecla) & (1<<(3)))) {
  1970  006E24  A630               	btfss	main@tecla^0,3,c
  1971  006E26  EF17  F037         	goto	u2311
  1972  006E2A  EF19  F037         	goto	u2310
  1973  006E2E                     u2311:
  1974  006E2E  EFEF  F037         	goto	l101
  1975  006E32                     u2310:
  1976  006E32                     
  1977                           ;main.c: 328:                             lcd_cmd(0x01);
  1978  006E32  0E01               	movlw	1
  1979  006E34  EC5C  F02D         	call	_lcd_cmd
  1980                           
  1981                           ;main.c: 329:                             lcdPosition(0, 0);
  1982  006E38  0E00               	movlw	0
  1983  006E3A  6E09               	movwf	lcdPosition@coluna^0,c
  1984  006E3C  0E00               	movlw	0
  1985  006E3E  EC92  F02E         	call	_lcdPosition
  1986  006E42                     
  1987                           ;main.c: 330:                             lcd_str("Seu copo esta");
  1988  006E42  0E52               	movlw	low STR_16
  1989  006E44  6E07               	movwf	lcd_str@str^0,c
  1990  006E46  0E7F               	movlw	high STR_16
  1991  006E48  6E08               	movwf	(lcd_str@str+1)^0,c
  1992  006E4A  ECC0  F02D         	call	_lcd_str	;wreg free
  1993  006E4E                     
  1994                           ;main.c: 331:                             lcdPosition(1, 0);
  1995  006E4E  0E00               	movlw	0
  1996  006E50  6E09               	movwf	lcdPosition@coluna^0,c
  1997  006E52  0E01               	movlw	1
  1998  006E54  EC92  F02E         	call	_lcdPosition
  1999                           
  2000                           ;main.c: 332:                             lcd_str("enchendo!");
  2001  006E58  0EA6               	movlw	low STR_17
  2002  006E5A  6E07               	movwf	lcd_str@str^0,c
  2003  006E5C  0E7F               	movlw	high STR_17
  2004  006E5E  6E08               	movwf	(lcd_str@str+1)^0,c
  2005  006E60  ECC0  F02D         	call	_lcd_str	;wreg free
  2006  006E64                     
  2007                           ;main.c: 333:                             ligarCooler();
  2008  006E64  EC24  F02D         	call	_ligarCooler	;wreg free
  2009  006E68                     
  2010                           ;main.c: 334:                             atraso_ms(5000);
  2011  006E68  0E13               	movlw	19
  2012  006E6A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2013  006E6C  0E88               	movlw	136
  2014  006E6E  6E01               	movwf	atraso_ms@valor^0,c
  2015  006E70  ECA1  F02D         	call	_atraso_ms	;wreg free
  2016  006E74                     
  2017                           ;main.c: 335:                             desligarCooler();
  2018  006E74  EC1C  F02D         	call	_desligarCooler	;wreg free
  2019  006E78                     
  2020                           ;main.c: 336:                             lcd_cmd(0x01);
  2021  006E78  0E01               	movlw	1
  2022  006E7A  EC5C  F02D         	call	_lcd_cmd
  2023  006E7E                     
  2024                           ;main.c: 337:                             lcdPosition(0, 0);
  2025  006E7E  0E00               	movlw	0
  2026  006E80  6E09               	movwf	lcdPosition@coluna^0,c
  2027  006E82  0E00               	movlw	0
  2028  006E84  EC92  F02E         	call	_lcdPosition
  2029  006E88                     
  2030                           ;main.c: 338:                             lcd_str("Valor no display");
  2031  006E88  0E15               	movlw	low STR_18
  2032  006E8A  6E07               	movwf	lcd_str@str^0,c
  2033  006E8C  0E7F               	movlw	high STR_18
  2034  006E8E  6E08               	movwf	(lcd_str@str+1)^0,c
  2035  006E90  ECC0  F02D         	call	_lcd_str	;wreg free
  2036                           
  2037                           ;main.c: 339:                             lcdPosition(2, 0);
  2038  006E94  0E00               	movlw	0
  2039  006E96  6E09               	movwf	lcdPosition@coluna^0,c
  2040  006E98  0E02               	movlw	2
  2041  006E9A  EC92  F02E         	call	_lcdPosition
  2042  006E9E                     
  2043                           ;main.c: 340:                             lcd_str("0- Pagar");
  2044  006E9E  0EBA               	movlw	low STR_19
  2045  006EA0  6E07               	movwf	lcd_str@str^0,c
  2046  006EA2  0E7F               	movlw	high STR_19
  2047  006EA4  6E08               	movwf	(lcd_str@str+1)^0,c
  2048  006EA6  ECC0  F02D         	call	_lcd_str	;wreg free
  2049  006EAA                     
  2050                           ;main.c: 341:                             ssdInit();
  2051  006EAA  EC3B  F02E         	call	_ssdInit	;wreg free
  2052  006EAE                     
  2053                           ;main.c: 342:                             for (i = 0; i < 3000; i++) {
  2054  006EAE  0E00               	movlw	0
  2055  006EB0  6E2F               	movwf	(main@i+1)^0,c
  2056  006EB2  0E00               	movlw	0
  2057  006EB4  6E2E               	movwf	main@i^0,c
  2058  006EB6                     l3774:
  2059                           
  2060                           ;main.c: 343:                                 ssdDigit(0, 2);
  2061  006EB6  0E02               	movlw	2
  2062  006EB8  6E01               	movwf	ssdDigit@pos^0,c
  2063  006EBA  0E00               	movlw	0
  2064  006EBC  EC66  F02E         	call	_ssdDigit
  2065                           
  2066                           ;main.c: 344:                                 ssdDigit(7, 3);
  2067  006EC0  0E03               	movlw	3
  2068  006EC2  6E01               	movwf	ssdDigit@pos^0,c
  2069  006EC4  0E07               	movlw	7
  2070  006EC6  EC66  F02E         	call	_ssdDigit
  2071  006ECA                     
  2072                           ;main.c: 345:                                 ssdUpdate();
  2073  006ECA  EC45  F02F         	call	_ssdUpdate	;wreg free
  2074  006ECE                     
  2075                           ;main.c: 346:                                 atraso_ms(2);
  2076  006ECE  0E00               	movlw	0
  2077  006ED0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2078  006ED2  0E02               	movlw	2
  2079  006ED4  6E01               	movwf	atraso_ms@valor^0,c
  2080  006ED6  ECA1  F02D         	call	_atraso_ms	;wreg free
  2081  006EDA                     
  2082                           ;main.c: 347:                             }
  2083  006EDA  4A2E               	infsnz	main@i^0,f,c
  2084  006EDC  2A2F               	incf	(main@i+1)^0,f,c
  2085  006EDE  0EB8               	movlw	184
  2086  006EE0  5C2E               	subwf	main@i^0,w,c
  2087  006EE2  0E0B               	movlw	11
  2088  006EE4  582F               	subwfb	(main@i+1)^0,w,c
  2089  006EE6  A0D8               	btfss	status,0,c
  2090  006EE8  EF78  F037         	goto	u2321
  2091  006EEC  EF7A  F037         	goto	u2320
  2092  006EF0                     u2321:
  2093  006EF0  EF5B  F037         	goto	l3774
  2094  006EF4                     u2320:
  2095  006EF4                     
  2096                           ;main.c: 348:                             desligaDisplays();
  2097  006EF4  ECE8  F02D         	call	_desligaDisplays	;wreg free
  2098  006EF8                     l3786:
  2099                           
  2100                           ;main.c: 351:                                 kpDebounce();
  2101  006EF8  ECED  F02F         	call	_kpDebounce	;wreg free
  2102  006EFC                     
  2103                           ;main.c: 352:                                 if (kpRead() != tecla) {
  2104  006EFC  EC2D  F02D         	call	_kpRead	;wreg free
  2105  006F00  5030               	movf	main@tecla^0,w,c
  2106  006F02  1801               	xorwf	?_kpRead^0,w,c
  2107  006F04  E109               	bnz	u2330
  2108  006F06  5031               	movf	(main@tecla+1)^0,w,c
  2109  006F08  1802               	xorwf	(?_kpRead+1)^0,w,c
  2110  006F0A  B4D8               	btfsc	status,2,c
  2111  006F0C  EF8A  F037         	goto	u2331
  2112  006F10  EF8C  F037         	goto	u2330
  2113  006F14                     u2331:
  2114  006F14  EF7C  F037         	goto	l3786
  2115  006F18                     u2330:
  2116  006F18                     
  2117                           ;main.c: 353:                                     tecla = kpRead();
  2118  006F18  EC2D  F02D         	call	_kpRead	;wreg free
  2119  006F1C  C001  F030         	movff	?_kpRead,main@tecla
  2120  006F20  C002  F031         	movff	?_kpRead+1,main@tecla+1
  2121  006F24                     
  2122                           ;main.c: 354:                                     if (((tecla) & (1<<(4)))) {
  2123  006F24  A830               	btfss	main@tecla^0,4,c
  2124  006F26  EF97  F037         	goto	u2341
  2125  006F2A  EF99  F037         	goto	u2340
  2126  006F2E                     u2341:
  2127  006F2E  EF7C  F037         	goto	l3786
  2128  006F32                     u2340:
  2129  006F32                     
  2130                           ;main.c: 355:                                         lcd_cmd(0x01);
  2131  006F32  0E01               	movlw	1
  2132  006F34  EC5C  F02D         	call	_lcd_cmd
  2133                           
  2134                           ;main.c: 356:                                         lcdPosition(0, 0);
  2135  006F38  0E00               	movlw	0
  2136  006F3A  6E09               	movwf	lcdPosition@coluna^0,c
  2137  006F3C  0E00               	movlw	0
  2138  006F3E  EC92  F02E         	call	_lcdPosition
  2139  006F42                     
  2140                           ;main.c: 357:                                         lcd_str("Carregando...");
  2141  006F42  0E44               	movlw	low STR_20
  2142  006F44  6E07               	movwf	lcd_str@str^0,c
  2143  006F46  0E7F               	movlw	high STR_20
  2144  006F48  6E08               	movwf	(lcd_str@str+1)^0,c
  2145  006F4A  ECC0  F02D         	call	_lcd_str	;wreg free
  2146  006F4E                     
  2147                           ;main.c: 358:                                         atraso_ms(5000);
  2148  006F4E  0E13               	movlw	19
  2149  006F50  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2150  006F52  0E88               	movlw	136
  2151  006F54  6E01               	movwf	atraso_ms@valor^0,c
  2152  006F56  ECA1  F02D         	call	_atraso_ms	;wreg free
  2153  006F5A                     
  2154                           ;main.c: 359:                                         lcd_cmd(0x01);
  2155  006F5A  0E01               	movlw	1
  2156  006F5C  EC5C  F02D         	call	_lcd_cmd
  2157  006F60                     
  2158                           ;main.c: 360:                                         lcdPosition(0, 0);
  2159  006F60  0E00               	movlw	0
  2160  006F62  6E09               	movwf	lcdPosition@coluna^0,c
  2161  006F64  0E00               	movlw	0
  2162  006F66  EC92  F02E         	call	_lcdPosition
  2163                           
  2164                           ;main.c: 361:                                         lcd_str("Aprovado!");
  2165  006F6A  0E9C               	movlw	low STR_21
  2166  006F6C  6E07               	movwf	lcd_str@str^0,c
  2167  006F6E  0E7F               	movlw	high STR_21
  2168  006F70  6E08               	movwf	(lcd_str@str+1)^0,c
  2169  006F72  ECC0  F02D         	call	_lcd_str	;wreg free
  2170  006F76                     
  2171                           ;main.c: 362:                                         ligaRele1();
  2172  006F76  EC16  F02D         	call	_ligaRele1	;wreg free
  2173  006F7A                     
  2174                           ;main.c: 363:                                         ligaRele2();
  2175  006F7A  EC19  F02D         	call	_ligaRele2	;wreg free
  2176  006F7E                     
  2177                           ;main.c: 364:                                         atraso_ms(5000);
  2178  006F7E  0E13               	movlw	19
  2179  006F80  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2180  006F82  0E88               	movlw	136
  2181  006F84  6E01               	movwf	atraso_ms@valor^0,c
  2182  006F86  ECA1  F02D         	call	_atraso_ms	;wreg free
  2183  006F8A                     
  2184                           ;main.c: 365:                                         desligaRele1();
  2185  006F8A  EC10  F02D         	call	_desligaRele1	;wreg free
  2186  006F8E                     
  2187                           ;main.c: 366:                                         desligaRele2();
  2188  006F8E  EC13  F02D         	call	_desligaRele2	;wreg free
  2189  006F92                     
  2190                           ;main.c: 367:                                         lcd_cmd(0x01);
  2191  006F92  0E01               	movlw	1
  2192  006F94  EC5C  F02D         	call	_lcd_cmd
  2193  006F98                     
  2194                           ;main.c: 368:                                         lcdPosition(0, 0);
  2195  006F98  0E00               	movlw	0
  2196  006F9A  6E09               	movwf	lcdPosition@coluna^0,c
  2197  006F9C  0E00               	movlw	0
  2198  006F9E  EC92  F02E         	call	_lcdPosition
  2199  006FA2                     
  2200                           ;main.c: 369:                                         lcd_str("Volte sempre!");
  2201  006FA2  0E36               	movlw	low STR_22
  2202  006FA4  6E07               	movwf	lcd_str@str^0,c
  2203  006FA6  0E7F               	movlw	high STR_22
  2204  006FA8  6E08               	movwf	(lcd_str@str+1)^0,c
  2205  006FAA  ECC0  F02D         	call	_lcd_str	;wreg free
  2206                           
  2207                           ;main.c: 370:                                         lcdPosition(2, 0);
  2208  006FAE  0E00               	movlw	0
  2209  006FB0  6E09               	movwf	lcdPosition@coluna^0,c
  2210  006FB2  0E02               	movlw	2
  2211  006FB4  EC92  F02E         	call	_lcdPosition
  2212  006FB8                     
  2213                           ;main.c: 371:                                         lcd_str("Outro pedido");
  2214  006FB8  0E6E               	movlw	low STR_23
  2215  006FBA  6E07               	movwf	lcd_str@str^0,c
  2216  006FBC  0E7F               	movlw	high STR_23
  2217  006FBE  6E08               	movwf	(lcd_str@str+1)^0,c
  2218  006FC0  ECC0  F02D         	call	_lcd_str	;wreg free
  2219  006FC4                     
  2220                           ;main.c: 372:                                         lcdPosition(3, 0);
  2221  006FC4  0E00               	movlw	0
  2222  006FC6  6E09               	movwf	lcdPosition@coluna^0,c
  2223  006FC8  0E03               	movlw	3
  2224  006FCA  EC92  F02E         	call	_lcdPosition
  2225                           
  2226                           ;main.c: 373:                                         lcd_str("no Reset");
  2227  006FCE  0ED5               	movlw	low STR_24
  2228  006FD0  6E07               	movwf	lcd_str@str^0,c
  2229  006FD2  0E7F               	movlw	high STR_24
  2230  006FD4  6E08               	movwf	(lcd_str@str+1)^0,c
  2231  006FD6  ECC0  F02D         	call	_lcd_str	;wreg free
  2232  006FDA  EF7C  F037         	goto	l3786
  2233  006FDE                     l101:
  2234                           
  2235                           ;main.c: 378:                         if (((tecla) & (1<<(7)))) {
  2236  006FDE  AE30               	btfss	main@tecla^0,7,c
  2237  006FE0  EFF4  F037         	goto	u2351
  2238  006FE4  EFF6  F037         	goto	u2350
  2239  006FE8                     u2351:
  2240  006FE8  EFCC  F038         	goto	l108
  2241  006FEC                     u2350:
  2242  006FEC                     
  2243                           ;main.c: 379:                             lcd_cmd(0x01);
  2244  006FEC  0E01               	movlw	1
  2245  006FEE  EC5C  F02D         	call	_lcd_cmd
  2246                           
  2247                           ;main.c: 380:                             lcdPosition(0, 0);
  2248  006FF2  0E00               	movlw	0
  2249  006FF4  6E09               	movwf	lcdPosition@coluna^0,c
  2250  006FF6  0E00               	movlw	0
  2251  006FF8  EC92  F02E         	call	_lcdPosition
  2252  006FFC                     
  2253                           ;main.c: 381:                             lcd_str("Seu copo esta");
  2254  006FFC  0E52               	movlw	low STR_16
  2255  006FFE  6E07               	movwf	lcd_str@str^0,c
  2256  007000  0E7F               	movlw	high STR_16
  2257  007002  6E08               	movwf	(lcd_str@str+1)^0,c
  2258  007004  ECC0  F02D         	call	_lcd_str	;wreg free
  2259  007008                     
  2260                           ;main.c: 382:                             lcdPosition(1, 0);
  2261  007008  0E00               	movlw	0
  2262  00700A  6E09               	movwf	lcdPosition@coluna^0,c
  2263  00700C  0E01               	movlw	1
  2264  00700E  EC92  F02E         	call	_lcdPosition
  2265                           
  2266                           ;main.c: 383:                             lcd_str("enchendo!");
  2267  007012  0EA6               	movlw	low STR_17
  2268  007014  6E07               	movwf	lcd_str@str^0,c
  2269  007016  0E7F               	movlw	high STR_17
  2270  007018  6E08               	movwf	(lcd_str@str+1)^0,c
  2271  00701A  ECC0  F02D         	call	_lcd_str	;wreg free
  2272  00701E                     
  2273                           ;main.c: 384:                             ligarCooler();
  2274  00701E  EC24  F02D         	call	_ligarCooler	;wreg free
  2275  007022                     
  2276                           ;main.c: 385:                             atraso_ms(5000);
  2277  007022  0E13               	movlw	19
  2278  007024  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2279  007026  0E88               	movlw	136
  2280  007028  6E01               	movwf	atraso_ms@valor^0,c
  2281  00702A  ECA1  F02D         	call	_atraso_ms	;wreg free
  2282  00702E                     
  2283                           ;main.c: 386:                             desligarCooler();
  2284  00702E  EC1C  F02D         	call	_desligarCooler	;wreg free
  2285  007032                     
  2286                           ;main.c: 387:                             lcd_cmd(0x01);
  2287  007032  0E01               	movlw	1
  2288  007034  EC5C  F02D         	call	_lcd_cmd
  2289  007038                     
  2290                           ;main.c: 388:                             lcdPosition(0, 0);
  2291  007038  0E00               	movlw	0
  2292  00703A  6E09               	movwf	lcdPosition@coluna^0,c
  2293  00703C  0E00               	movlw	0
  2294  00703E  EC92  F02E         	call	_lcdPosition
  2295  007042                     
  2296                           ;main.c: 389:                             lcd_str("Valor no display");
  2297  007042  0E15               	movlw	low STR_18
  2298  007044  6E07               	movwf	lcd_str@str^0,c
  2299  007046  0E7F               	movlw	high STR_18
  2300  007048  6E08               	movwf	(lcd_str@str+1)^0,c
  2301  00704A  ECC0  F02D         	call	_lcd_str	;wreg free
  2302                           
  2303                           ;main.c: 390:                             lcdPosition(2, 0);
  2304  00704E  0E00               	movlw	0
  2305  007050  6E09               	movwf	lcdPosition@coluna^0,c
  2306  007052  0E02               	movlw	2
  2307  007054  EC92  F02E         	call	_lcdPosition
  2308  007058                     
  2309                           ;main.c: 391:                             lcd_str("0- Pagar");
  2310  007058  0EBA               	movlw	low STR_19
  2311  00705A  6E07               	movwf	lcd_str@str^0,c
  2312  00705C  0E7F               	movlw	high STR_19
  2313  00705E  6E08               	movwf	(lcd_str@str+1)^0,c
  2314  007060  ECC0  F02D         	call	_lcd_str	;wreg free
  2315  007064                     
  2316                           ;main.c: 392:                             ssdInit();
  2317  007064  EC3B  F02E         	call	_ssdInit	;wreg free
  2318  007068                     
  2319                           ;main.c: 393:                             for (i = 0; i < 3000; i++) {
  2320  007068  0E00               	movlw	0
  2321  00706A  6E2F               	movwf	(main@i+1)^0,c
  2322  00706C  0E00               	movlw	0
  2323  00706E  6E2E               	movwf	main@i^0,c
  2324  007070                     l3852:
  2325                           
  2326                           ;main.c: 394:                                 ssdDigit(1, 2);
  2327  007070  0E02               	movlw	2
  2328  007072  6E01               	movwf	ssdDigit@pos^0,c
  2329  007074  0E01               	movlw	1
  2330  007076  EC66  F02E         	call	_ssdDigit
  2331                           
  2332                           ;main.c: 395:                                 ssdDigit(0, 3);
  2333  00707A  0E03               	movlw	3
  2334  00707C  6E01               	movwf	ssdDigit@pos^0,c
  2335  00707E  0E00               	movlw	0
  2336  007080  EC66  F02E         	call	_ssdDigit
  2337  007084                     
  2338                           ;main.c: 396:                                 ssdUpdate();
  2339  007084  EC45  F02F         	call	_ssdUpdate	;wreg free
  2340  007088                     
  2341                           ;main.c: 397:                                 atraso_ms(2);
  2342  007088  0E00               	movlw	0
  2343  00708A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2344  00708C  0E02               	movlw	2
  2345  00708E  6E01               	movwf	atraso_ms@valor^0,c
  2346  007090  ECA1  F02D         	call	_atraso_ms	;wreg free
  2347  007094                     
  2348                           ;main.c: 398:                             }
  2349  007094  4A2E               	infsnz	main@i^0,f,c
  2350  007096  2A2F               	incf	(main@i+1)^0,f,c
  2351  007098  0EB8               	movlw	184
  2352  00709A  5C2E               	subwf	main@i^0,w,c
  2353  00709C  0E0B               	movlw	11
  2354  00709E  582F               	subwfb	(main@i+1)^0,w,c
  2355  0070A0  A0D8               	btfss	status,0,c
  2356  0070A2  EF55  F038         	goto	u2361
  2357  0070A6  EF57  F038         	goto	u2360
  2358  0070AA                     u2361:
  2359  0070AA  EF38  F038         	goto	l3852
  2360  0070AE                     u2360:
  2361  0070AE                     
  2362                           ;main.c: 399:                             desligaDisplays();
  2363  0070AE  ECE8  F02D         	call	_desligaDisplays	;wreg free
  2364  0070B2                     l3864:
  2365                           
  2366                           ;main.c: 402:                                 kpDebounce();
  2367  0070B2  ECED  F02F         	call	_kpDebounce	;wreg free
  2368  0070B6                     
  2369                           ;main.c: 403:                                 if (kpRead() != tecla) {
  2370  0070B6  EC2D  F02D         	call	_kpRead	;wreg free
  2371  0070BA  5030               	movf	main@tecla^0,w,c
  2372  0070BC  1801               	xorwf	?_kpRead^0,w,c
  2373  0070BE  E109               	bnz	u2370
  2374  0070C0  5031               	movf	(main@tecla+1)^0,w,c
  2375  0070C2  1802               	xorwf	(?_kpRead+1)^0,w,c
  2376  0070C4  B4D8               	btfsc	status,2,c
  2377  0070C6  EF67  F038         	goto	u2371
  2378  0070CA  EF69  F038         	goto	u2370
  2379  0070CE                     u2371:
  2380  0070CE  EF59  F038         	goto	l3864
  2381  0070D2                     u2370:
  2382  0070D2                     
  2383                           ;main.c: 404:                                     tecla = kpRead();
  2384  0070D2  EC2D  F02D         	call	_kpRead	;wreg free
  2385  0070D6  C001  F030         	movff	?_kpRead,main@tecla
  2386  0070DA  C002  F031         	movff	?_kpRead+1,main@tecla+1
  2387  0070DE                     
  2388                           ;main.c: 405:                                     if (((tecla) & (1<<(4)))) {
  2389  0070DE  A830               	btfss	main@tecla^0,4,c
  2390  0070E0  EF74  F038         	goto	u2381
  2391  0070E4  EF76  F038         	goto	u2380
  2392  0070E8                     u2381:
  2393  0070E8  EF59  F038         	goto	l3864
  2394  0070EC                     u2380:
  2395  0070EC                     
  2396                           ;main.c: 406:                                         lcd_cmd(0x01);
  2397  0070EC  0E01               	movlw	1
  2398  0070EE  EC5C  F02D         	call	_lcd_cmd
  2399                           
  2400                           ;main.c: 407:                                         lcdPosition(0, 0);
  2401  0070F2  0E00               	movlw	0
  2402  0070F4  6E09               	movwf	lcdPosition@coluna^0,c
  2403  0070F6  0E00               	movlw	0
  2404  0070F8  EC92  F02E         	call	_lcdPosition
  2405  0070FC                     
  2406                           ;main.c: 408:                                         lcd_str("Carregando...");
  2407  0070FC  0E44               	movlw	low STR_20
  2408  0070FE  6E07               	movwf	lcd_str@str^0,c
  2409  007100  0E7F               	movlw	high STR_20
  2410  007102  6E08               	movwf	(lcd_str@str+1)^0,c
  2411  007104  ECC0  F02D         	call	_lcd_str	;wreg free
  2412  007108                     
  2413                           ;main.c: 409:                                         atraso_ms(5000);
  2414  007108  0E13               	movlw	19
  2415  00710A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2416  00710C  0E88               	movlw	136
  2417  00710E  6E01               	movwf	atraso_ms@valor^0,c
  2418  007110  ECA1  F02D         	call	_atraso_ms	;wreg free
  2419  007114                     
  2420                           ;main.c: 410:                                         lcd_cmd(0x01);
  2421  007114  0E01               	movlw	1
  2422  007116  EC5C  F02D         	call	_lcd_cmd
  2423  00711A                     
  2424                           ;main.c: 411:                                         lcdPosition(0, 0);
  2425  00711A  0E00               	movlw	0
  2426  00711C  6E09               	movwf	lcdPosition@coluna^0,c
  2427  00711E  0E00               	movlw	0
  2428  007120  EC92  F02E         	call	_lcdPosition
  2429                           
  2430                           ;main.c: 412:                                         lcd_str("Aprovado!");
  2431  007124  0E9C               	movlw	low STR_21
  2432  007126  6E07               	movwf	lcd_str@str^0,c
  2433  007128  0E7F               	movlw	high STR_21
  2434  00712A  6E08               	movwf	(lcd_str@str+1)^0,c
  2435  00712C  ECC0  F02D         	call	_lcd_str	;wreg free
  2436  007130                     
  2437                           ;main.c: 413:                                         ligaRele1();
  2438  007130  EC16  F02D         	call	_ligaRele1	;wreg free
  2439  007134                     
  2440                           ;main.c: 414:                                         ligaRele2();
  2441  007134  EC19  F02D         	call	_ligaRele2	;wreg free
  2442  007138                     
  2443                           ;main.c: 415:                                         atraso_ms(5000);
  2444  007138  0E13               	movlw	19
  2445  00713A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2446  00713C  0E88               	movlw	136
  2447  00713E  6E01               	movwf	atraso_ms@valor^0,c
  2448  007140  ECA1  F02D         	call	_atraso_ms	;wreg free
  2449  007144                     
  2450                           ;main.c: 416:                                         desligaRele1();
  2451  007144  EC10  F02D         	call	_desligaRele1	;wreg free
  2452  007148                     
  2453                           ;main.c: 417:                                         desligaRele2();
  2454  007148  EC13  F02D         	call	_desligaRele2	;wreg free
  2455  00714C                     
  2456                           ;main.c: 418:                                         lcd_cmd(0x01);
  2457  00714C  0E01               	movlw	1
  2458  00714E  EC5C  F02D         	call	_lcd_cmd
  2459  007152                     
  2460                           ;main.c: 419:                                         lcdPosition(0, 0);
  2461  007152  0E00               	movlw	0
  2462  007154  6E09               	movwf	lcdPosition@coluna^0,c
  2463  007156  0E00               	movlw	0
  2464  007158  EC92  F02E         	call	_lcdPosition
  2465  00715C                     
  2466                           ;main.c: 420:                                         lcd_str("Volte sempre!");
  2467  00715C  0E36               	movlw	low STR_22
  2468  00715E  6E07               	movwf	lcd_str@str^0,c
  2469  007160  0E7F               	movlw	high STR_22
  2470  007162  6E08               	movwf	(lcd_str@str+1)^0,c
  2471  007164  ECC0  F02D         	call	_lcd_str	;wreg free
  2472                           
  2473                           ;main.c: 421:                                         lcdPosition(2, 0);
  2474  007168  0E00               	movlw	0
  2475  00716A  6E09               	movwf	lcdPosition@coluna^0,c
  2476  00716C  0E02               	movlw	2
  2477  00716E  EC92  F02E         	call	_lcdPosition
  2478  007172                     
  2479                           ;main.c: 422:                                         lcd_str("Outro pedido");
  2480  007172  0E6E               	movlw	low STR_23
  2481  007174  6E07               	movwf	lcd_str@str^0,c
  2482  007176  0E7F               	movlw	high STR_23
  2483  007178  6E08               	movwf	(lcd_str@str+1)^0,c
  2484  00717A  ECC0  F02D         	call	_lcd_str	;wreg free
  2485  00717E                     
  2486                           ;main.c: 423:                                         lcdPosition(3, 0);
  2487  00717E  0E00               	movlw	0
  2488  007180  6E09               	movwf	lcdPosition@coluna^0,c
  2489  007182  0E03               	movlw	3
  2490  007184  EC92  F02E         	call	_lcdPosition
  2491                           
  2492                           ;main.c: 424:                                         lcd_str("no Reset");
  2493  007188  0ED5               	movlw	low STR_24
  2494  00718A  6E07               	movwf	lcd_str@str^0,c
  2495  00718C  0E7F               	movlw	high STR_24
  2496  00718E  6E08               	movwf	(lcd_str@str+1)^0,c
  2497  007190  ECC0  F02D         	call	_lcd_str	;wreg free
  2498  007194  EF59  F038         	goto	l3864
  2499  007198                     l108:
  2500                           
  2501                           ;main.c: 429:                         if (((tecla) & (1<<(11)))) {
  2502  007198  A631               	btfss	(main@tecla+1)^0,3,c
  2503  00719A  EFD1  F038         	goto	u2391
  2504  00719E  EFD3  F038         	goto	u2390
  2505  0071A2                     u2391:
  2506  0071A2  EFFC  F036         	goto	l3738
  2507  0071A6                     u2390:
  2508  0071A6                     
  2509                           ;main.c: 430:                             lcd_cmd(0x01);
  2510  0071A6  0E01               	movlw	1
  2511  0071A8  EC5C  F02D         	call	_lcd_cmd
  2512                           
  2513                           ;main.c: 431:                             lcdPosition(0, 0);
  2514  0071AC  0E00               	movlw	0
  2515  0071AE  6E09               	movwf	lcdPosition@coluna^0,c
  2516  0071B0  0E00               	movlw	0
  2517  0071B2  EC92  F02E         	call	_lcdPosition
  2518  0071B6                     
  2519                           ;main.c: 432:                             lcd_str("Seu copo esta");
  2520  0071B6  0E52               	movlw	low STR_16
  2521  0071B8  6E07               	movwf	lcd_str@str^0,c
  2522  0071BA  0E7F               	movlw	high STR_16
  2523  0071BC  6E08               	movwf	(lcd_str@str+1)^0,c
  2524  0071BE  ECC0  F02D         	call	_lcd_str	;wreg free
  2525  0071C2                     
  2526                           ;main.c: 433:                             lcdPosition(1, 0);
  2527  0071C2  0E00               	movlw	0
  2528  0071C4  6E09               	movwf	lcdPosition@coluna^0,c
  2529  0071C6  0E01               	movlw	1
  2530  0071C8  EC92  F02E         	call	_lcdPosition
  2531                           
  2532                           ;main.c: 434:                             lcd_str("enchendo!");
  2533  0071CC  0EA6               	movlw	low STR_17
  2534  0071CE  6E07               	movwf	lcd_str@str^0,c
  2535  0071D0  0E7F               	movlw	high STR_17
  2536  0071D2  6E08               	movwf	(lcd_str@str+1)^0,c
  2537  0071D4  ECC0  F02D         	call	_lcd_str	;wreg free
  2538  0071D8                     
  2539                           ;main.c: 435:                             ligarCooler();
  2540  0071D8  EC24  F02D         	call	_ligarCooler	;wreg free
  2541  0071DC                     
  2542                           ;main.c: 436:                             atraso_ms(5000);
  2543  0071DC  0E13               	movlw	19
  2544  0071DE  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2545  0071E0  0E88               	movlw	136
  2546  0071E2  6E01               	movwf	atraso_ms@valor^0,c
  2547  0071E4  ECA1  F02D         	call	_atraso_ms	;wreg free
  2548  0071E8                     
  2549                           ;main.c: 437:                             desligarCooler();
  2550  0071E8  EC1C  F02D         	call	_desligarCooler	;wreg free
  2551  0071EC                     
  2552                           ;main.c: 438:                             lcd_cmd(0x01);
  2553  0071EC  0E01               	movlw	1
  2554  0071EE  EC5C  F02D         	call	_lcd_cmd
  2555  0071F2                     
  2556                           ;main.c: 439:                             lcdPosition(0, 0);
  2557  0071F2  0E00               	movlw	0
  2558  0071F4  6E09               	movwf	lcdPosition@coluna^0,c
  2559  0071F6  0E00               	movlw	0
  2560  0071F8  EC92  F02E         	call	_lcdPosition
  2561  0071FC                     
  2562                           ;main.c: 440:                             lcd_str("Valor no display");
  2563  0071FC  0E15               	movlw	low STR_18
  2564  0071FE  6E07               	movwf	lcd_str@str^0,c
  2565  007200  0E7F               	movlw	high STR_18
  2566  007202  6E08               	movwf	(lcd_str@str+1)^0,c
  2567  007204  ECC0  F02D         	call	_lcd_str	;wreg free
  2568                           
  2569                           ;main.c: 441:                             lcdPosition(2, 0);
  2570  007208  0E00               	movlw	0
  2571  00720A  6E09               	movwf	lcdPosition@coluna^0,c
  2572  00720C  0E02               	movlw	2
  2573  00720E  EC92  F02E         	call	_lcdPosition
  2574  007212                     
  2575                           ;main.c: 442:                             lcd_str("0- Pagar");
  2576  007212  0EBA               	movlw	low STR_19
  2577  007214  6E07               	movwf	lcd_str@str^0,c
  2578  007216  0E7F               	movlw	high STR_19
  2579  007218  6E08               	movwf	(lcd_str@str+1)^0,c
  2580  00721A  ECC0  F02D         	call	_lcd_str	;wreg free
  2581  00721E                     
  2582                           ;main.c: 443:                             ssdInit();
  2583  00721E  EC3B  F02E         	call	_ssdInit	;wreg free
  2584  007222                     
  2585                           ;main.c: 444:                             for (i = 0; i < 3000; i++) {
  2586  007222  0E00               	movlw	0
  2587  007224  6E2F               	movwf	(main@i+1)^0,c
  2588  007226  0E00               	movlw	0
  2589  007228  6E2E               	movwf	main@i^0,c
  2590  00722A                     l3930:
  2591                           
  2592                           ;main.c: 445:                                 ssdDigit(1, 2);
  2593  00722A  0E02               	movlw	2
  2594  00722C  6E01               	movwf	ssdDigit@pos^0,c
  2595  00722E  0E01               	movlw	1
  2596  007230  EC66  F02E         	call	_ssdDigit
  2597                           
  2598                           ;main.c: 446:                                 ssdDigit(2, 3);
  2599  007234  0E03               	movlw	3
  2600  007236  6E01               	movwf	ssdDigit@pos^0,c
  2601  007238  0E02               	movlw	2
  2602  00723A  EC66  F02E         	call	_ssdDigit
  2603  00723E                     
  2604                           ;main.c: 447:                                 ssdUpdate();
  2605  00723E  EC45  F02F         	call	_ssdUpdate	;wreg free
  2606  007242                     
  2607                           ;main.c: 448:                                 atraso_ms(2);
  2608  007242  0E00               	movlw	0
  2609  007244  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2610  007246  0E02               	movlw	2
  2611  007248  6E01               	movwf	atraso_ms@valor^0,c
  2612  00724A  ECA1  F02D         	call	_atraso_ms	;wreg free
  2613  00724E                     
  2614                           ;main.c: 449:                             }
  2615  00724E  4A2E               	infsnz	main@i^0,f,c
  2616  007250  2A2F               	incf	(main@i+1)^0,f,c
  2617  007252  0EB8               	movlw	184
  2618  007254  5C2E               	subwf	main@i^0,w,c
  2619  007256  0E0B               	movlw	11
  2620  007258  582F               	subwfb	(main@i+1)^0,w,c
  2621  00725A  A0D8               	btfss	status,0,c
  2622  00725C  EF32  F039         	goto	u2401
  2623  007260  EF34  F039         	goto	u2400
  2624  007264                     u2401:
  2625  007264  EF15  F039         	goto	l3930
  2626  007268                     u2400:
  2627  007268                     
  2628                           ;main.c: 450:                             desligaDisplays();
  2629  007268  ECE8  F02D         	call	_desligaDisplays	;wreg free
  2630  00726C                     l3942:
  2631                           
  2632                           ;main.c: 453:                                 kpDebounce();
  2633  00726C  ECED  F02F         	call	_kpDebounce	;wreg free
  2634  007270                     
  2635                           ;main.c: 454:                                 if (kpRead() != tecla) {
  2636  007270  EC2D  F02D         	call	_kpRead	;wreg free
  2637  007274  5030               	movf	main@tecla^0,w,c
  2638  007276  1801               	xorwf	?_kpRead^0,w,c
  2639  007278  E109               	bnz	u2410
  2640  00727A  5031               	movf	(main@tecla+1)^0,w,c
  2641  00727C  1802               	xorwf	(?_kpRead+1)^0,w,c
  2642  00727E  B4D8               	btfsc	status,2,c
  2643  007280  EF44  F039         	goto	u2411
  2644  007284  EF46  F039         	goto	u2410
  2645  007288                     u2411:
  2646  007288  EF36  F039         	goto	l3942
  2647  00728C                     u2410:
  2648  00728C                     
  2649                           ;main.c: 455:                                     tecla = kpRead();
  2650  00728C  EC2D  F02D         	call	_kpRead	;wreg free
  2651  007290  C001  F030         	movff	?_kpRead,main@tecla
  2652  007294  C002  F031         	movff	?_kpRead+1,main@tecla+1
  2653  007298                     
  2654                           ;main.c: 456:                                     if (((tecla) & (1<<(4)))) {
  2655  007298  A830               	btfss	main@tecla^0,4,c
  2656  00729A  EF51  F039         	goto	u2421
  2657  00729E  EF53  F039         	goto	u2420
  2658  0072A2                     u2421:
  2659  0072A2  EF36  F039         	goto	l3942
  2660  0072A6                     u2420:
  2661  0072A6                     
  2662                           ;main.c: 457:                                         lcd_cmd(0x01);
  2663  0072A6  0E01               	movlw	1
  2664  0072A8  EC5C  F02D         	call	_lcd_cmd
  2665                           
  2666                           ;main.c: 458:                                         lcdPosition(0, 0);
  2667  0072AC  0E00               	movlw	0
  2668  0072AE  6E09               	movwf	lcdPosition@coluna^0,c
  2669  0072B0  0E00               	movlw	0
  2670  0072B2  EC92  F02E         	call	_lcdPosition
  2671  0072B6                     
  2672                           ;main.c: 459:                                         lcd_str("Carregando...");
  2673  0072B6  0E44               	movlw	low STR_20
  2674  0072B8  6E07               	movwf	lcd_str@str^0,c
  2675  0072BA  0E7F               	movlw	high STR_20
  2676  0072BC  6E08               	movwf	(lcd_str@str+1)^0,c
  2677  0072BE  ECC0  F02D         	call	_lcd_str	;wreg free
  2678  0072C2                     
  2679                           ;main.c: 460:                                         atraso_ms(5000);
  2680  0072C2  0E13               	movlw	19
  2681  0072C4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2682  0072C6  0E88               	movlw	136
  2683  0072C8  6E01               	movwf	atraso_ms@valor^0,c
  2684  0072CA  ECA1  F02D         	call	_atraso_ms	;wreg free
  2685  0072CE                     
  2686                           ;main.c: 461:                                         lcd_cmd(0x01);
  2687  0072CE  0E01               	movlw	1
  2688  0072D0  EC5C  F02D         	call	_lcd_cmd
  2689  0072D4                     
  2690                           ;main.c: 462:                                         lcdPosition(0, 0);
  2691  0072D4  0E00               	movlw	0
  2692  0072D6  6E09               	movwf	lcdPosition@coluna^0,c
  2693  0072D8  0E00               	movlw	0
  2694  0072DA  EC92  F02E         	call	_lcdPosition
  2695                           
  2696                           ;main.c: 463:                                         lcd_str("Aprovado!");
  2697  0072DE  0E9C               	movlw	low STR_21
  2698  0072E0  6E07               	movwf	lcd_str@str^0,c
  2699  0072E2  0E7F               	movlw	high STR_21
  2700  0072E4  6E08               	movwf	(lcd_str@str+1)^0,c
  2701  0072E6  ECC0  F02D         	call	_lcd_str	;wreg free
  2702  0072EA                     
  2703                           ;main.c: 464:                                         ligaRele1();
  2704  0072EA  EC16  F02D         	call	_ligaRele1	;wreg free
  2705  0072EE                     
  2706                           ;main.c: 465:                                         ligaRele2();
  2707  0072EE  EC19  F02D         	call	_ligaRele2	;wreg free
  2708  0072F2                     
  2709                           ;main.c: 466:                                         atraso_ms(5000);
  2710  0072F2  0E13               	movlw	19
  2711  0072F4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2712  0072F6  0E88               	movlw	136
  2713  0072F8  6E01               	movwf	atraso_ms@valor^0,c
  2714  0072FA  ECA1  F02D         	call	_atraso_ms	;wreg free
  2715  0072FE                     
  2716                           ;main.c: 467:                                         desligaRele1();
  2717  0072FE  EC10  F02D         	call	_desligaRele1	;wreg free
  2718  007302                     
  2719                           ;main.c: 468:                                         desligaRele2();
  2720  007302  EC13  F02D         	call	_desligaRele2	;wreg free
  2721  007306                     
  2722                           ;main.c: 469:                                         lcd_cmd(0x01);
  2723  007306  0E01               	movlw	1
  2724  007308  EC5C  F02D         	call	_lcd_cmd
  2725  00730C                     
  2726                           ;main.c: 470:                                         lcdPosition(0, 0);
  2727  00730C  0E00               	movlw	0
  2728  00730E  6E09               	movwf	lcdPosition@coluna^0,c
  2729  007310  0E00               	movlw	0
  2730  007312  EC92  F02E         	call	_lcdPosition
  2731  007316                     
  2732                           ;main.c: 471:                                         lcd_str("Volte sempre!");
  2733  007316  0E36               	movlw	low STR_22
  2734  007318  6E07               	movwf	lcd_str@str^0,c
  2735  00731A  0E7F               	movlw	high STR_22
  2736  00731C  6E08               	movwf	(lcd_str@str+1)^0,c
  2737  00731E  ECC0  F02D         	call	_lcd_str	;wreg free
  2738                           
  2739                           ;main.c: 472:                                         lcdPosition(2, 0);
  2740  007322  0E00               	movlw	0
  2741  007324  6E09               	movwf	lcdPosition@coluna^0,c
  2742  007326  0E02               	movlw	2
  2743  007328  EC92  F02E         	call	_lcdPosition
  2744  00732C                     
  2745                           ;main.c: 473:                                         lcd_str("Outro pedido");
  2746  00732C  0E6E               	movlw	low STR_23
  2747  00732E  6E07               	movwf	lcd_str@str^0,c
  2748  007330  0E7F               	movlw	high STR_23
  2749  007332  6E08               	movwf	(lcd_str@str+1)^0,c
  2750  007334  ECC0  F02D         	call	_lcd_str	;wreg free
  2751  007338                     
  2752                           ;main.c: 474:                                         lcdPosition(3, 0);
  2753  007338  0E00               	movlw	0
  2754  00733A  6E09               	movwf	lcdPosition@coluna^0,c
  2755  00733C  0E03               	movlw	3
  2756  00733E  EC92  F02E         	call	_lcdPosition
  2757                           
  2758                           ;main.c: 475:                                         lcd_str("no Reset");
  2759  007342  0ED5               	movlw	low STR_24
  2760  007344  6E07               	movwf	lcd_str@str^0,c
  2761  007346  0E7F               	movlw	high STR_24
  2762  007348  6E08               	movwf	(lcd_str@str+1)^0,c
  2763  00734A  ECC0  F02D         	call	_lcd_str	;wreg free
  2764  00734E  EF36  F039         	goto	l3942
  2765  007352                     l98:
  2766                           
  2767                           ;main.c: 483:             if (((tecla) & (1<<(11)))) {
  2768  007352  A631               	btfss	(main@tecla+1)^0,3,c
  2769  007354  EFAE  F039         	goto	u2431
  2770  007358  EFB0  F039         	goto	u2430
  2771  00735C                     u2431:
  2772  00735C  EF8C  F03C         	goto	l123
  2773  007360                     u2430:
  2774  007360                     
  2775                           ;main.c: 484:                 lcd_cmd(0x01);
  2776  007360  0E01               	movlw	1
  2777  007362  EC5C  F02D         	call	_lcd_cmd
  2778                           
  2779                           ;main.c: 485:                 lcdPosition(0, 0);
  2780  007366  0E00               	movlw	0
  2781  007368  6E09               	movwf	lcdPosition@coluna^0,c
  2782  00736A  0E00               	movlw	0
  2783  00736C  EC92  F02E         	call	_lcdPosition
  2784  007370                     
  2785                           ;main.c: 486:                 lcd_str("Lager");
  2786  007370  0EC6               	movlw	low (STR_10+3)
  2787  007372  6E07               	movwf	lcd_str@str^0,c
  2788  007374  0E7F               	movlw	high (STR_10+3)
  2789  007376  6E08               	movwf	(lcd_str@str+1)^0,c
  2790  007378  ECC0  F02D         	call	_lcd_str	;wreg free
  2791  00737C                     
  2792                           ;main.c: 487:                 lcdPosition(1, 0);
  2793  00737C  0E00               	movlw	0
  2794  00737E  6E09               	movwf	lcdPosition@coluna^0,c
  2795  007380  0E01               	movlw	1
  2796  007382  EC92  F02E         	call	_lcdPosition
  2797                           
  2798                           ;main.c: 488:                 lcd_str("1- 300ml    R$7");
  2799  007386  0E26               	movlw	low STR_13
  2800  007388  6E07               	movwf	lcd_str@str^0,c
  2801  00738A  0E7F               	movlw	high STR_13
  2802  00738C  6E08               	movwf	(lcd_str@str+1)^0,c
  2803  00738E  ECC0  F02D         	call	_lcd_str	;wreg free
  2804  007392                     
  2805                           ;main.c: 489:                 lcdPosition(2, 0);
  2806  007392  0E00               	movlw	0
  2807  007394  6E09               	movwf	lcdPosition@coluna^0,c
  2808  007396  0E02               	movlw	2
  2809  007398  EC92  F02E         	call	_lcdPosition
  2810  00739C                     
  2811                           ;main.c: 490:                 lcd_str("2- 500ml    R$10");
  2812  00739C  0EF3               	movlw	low STR_14
  2813  00739E  6E07               	movwf	lcd_str@str^0,c
  2814  0073A0  0E7E               	movlw	high STR_14
  2815  0073A2  6E08               	movwf	(lcd_str@str+1)^0,c
  2816  0073A4  ECC0  F02D         	call	_lcd_str	;wreg free
  2817                           
  2818                           ;main.c: 491:                 lcdPosition(3, 0);
  2819  0073A8  0E00               	movlw	0
  2820  0073AA  6E09               	movwf	lcdPosition@coluna^0,c
  2821  0073AC  0E03               	movlw	3
  2822  0073AE  EC92  F02E         	call	_lcdPosition
  2823  0073B2                     
  2824                           ;main.c: 492:                 lcd_str("3- 700ml    R$12");
  2825  0073B2  0E04               	movlw	low STR_15
  2826  0073B4  6E07               	movwf	lcd_str@str^0,c
  2827  0073B6  0E7F               	movlw	high STR_15
  2828  0073B8  6E08               	movwf	(lcd_str@str+1)^0,c
  2829  0073BA  ECC0  F02D         	call	_lcd_str	;wreg free
  2830  0073BE                     l3992:
  2831                           
  2832                           ;main.c: 494:                     kpDebounce();
  2833  0073BE  ECED  F02F         	call	_kpDebounce	;wreg free
  2834  0073C2                     
  2835                           ;main.c: 495:                     if (kpRead() != tecla) {
  2836  0073C2  EC2D  F02D         	call	_kpRead	;wreg free
  2837  0073C6  5030               	movf	main@tecla^0,w,c
  2838  0073C8  1801               	xorwf	?_kpRead^0,w,c
  2839  0073CA  E109               	bnz	u2440
  2840  0073CC  5031               	movf	(main@tecla+1)^0,w,c
  2841  0073CE  1802               	xorwf	(?_kpRead+1)^0,w,c
  2842  0073D0  B4D8               	btfsc	status,2,c
  2843  0073D2  EFED  F039         	goto	u2441
  2844  0073D6  EFEF  F039         	goto	u2440
  2845  0073DA                     u2441:
  2846  0073DA  EFDF  F039         	goto	l3992
  2847  0073DE                     u2440:
  2848  0073DE                     
  2849                           ;main.c: 496:                         tecla = kpRead();
  2850  0073DE  EC2D  F02D         	call	_kpRead	;wreg free
  2851  0073E2  C001  F030         	movff	?_kpRead,main@tecla
  2852  0073E6  C002  F031         	movff	?_kpRead+1,main@tecla+1
  2853  0073EA                     
  2854                           ;main.c: 497:                         if (((tecla) & (1<<(3)))) {
  2855  0073EA  A630               	btfss	main@tecla^0,3,c
  2856  0073EC  EFFA  F039         	goto	u2451
  2857  0073F0  EFFC  F039         	goto	u2450
  2858  0073F4                     u2451:
  2859  0073F4  EFD2  F03A         	goto	l126
  2860  0073F8                     u2450:
  2861  0073F8                     
  2862                           ;main.c: 498:                             lcd_cmd(0x01);
  2863  0073F8  0E01               	movlw	1
  2864  0073FA  EC5C  F02D         	call	_lcd_cmd
  2865                           
  2866                           ;main.c: 499:                             lcdPosition(0, 0);
  2867  0073FE  0E00               	movlw	0
  2868  007400  6E09               	movwf	lcdPosition@coluna^0,c
  2869  007402  0E00               	movlw	0
  2870  007404  EC92  F02E         	call	_lcdPosition
  2871  007408                     
  2872                           ;main.c: 500:                             lcd_str("Seu copo esta");
  2873  007408  0E52               	movlw	low STR_16
  2874  00740A  6E07               	movwf	lcd_str@str^0,c
  2875  00740C  0E7F               	movlw	high STR_16
  2876  00740E  6E08               	movwf	(lcd_str@str+1)^0,c
  2877  007410  ECC0  F02D         	call	_lcd_str	;wreg free
  2878  007414                     
  2879                           ;main.c: 501:                             lcdPosition(1, 0);
  2880  007414  0E00               	movlw	0
  2881  007416  6E09               	movwf	lcdPosition@coluna^0,c
  2882  007418  0E01               	movlw	1
  2883  00741A  EC92  F02E         	call	_lcdPosition
  2884                           
  2885                           ;main.c: 502:                             lcd_str("enchendo!");
  2886  00741E  0EA6               	movlw	low STR_17
  2887  007420  6E07               	movwf	lcd_str@str^0,c
  2888  007422  0E7F               	movlw	high STR_17
  2889  007424  6E08               	movwf	(lcd_str@str+1)^0,c
  2890  007426  ECC0  F02D         	call	_lcd_str	;wreg free
  2891  00742A                     
  2892                           ;main.c: 503:                             ligarCooler();
  2893  00742A  EC24  F02D         	call	_ligarCooler	;wreg free
  2894  00742E                     
  2895                           ;main.c: 504:                             atraso_ms(5000);
  2896  00742E  0E13               	movlw	19
  2897  007430  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2898  007432  0E88               	movlw	136
  2899  007434  6E01               	movwf	atraso_ms@valor^0,c
  2900  007436  ECA1  F02D         	call	_atraso_ms	;wreg free
  2901  00743A                     
  2902                           ;main.c: 505:                             desligarCooler();
  2903  00743A  EC1C  F02D         	call	_desligarCooler	;wreg free
  2904  00743E                     
  2905                           ;main.c: 506:                             lcd_cmd(0x01);
  2906  00743E  0E01               	movlw	1
  2907  007440  EC5C  F02D         	call	_lcd_cmd
  2908  007444                     
  2909                           ;main.c: 507:                             lcdPosition(0, 0);
  2910  007444  0E00               	movlw	0
  2911  007446  6E09               	movwf	lcdPosition@coluna^0,c
  2912  007448  0E00               	movlw	0
  2913  00744A  EC92  F02E         	call	_lcdPosition
  2914  00744E                     
  2915                           ;main.c: 508:                             lcd_str("Valor no display");
  2916  00744E  0E15               	movlw	low STR_18
  2917  007450  6E07               	movwf	lcd_str@str^0,c
  2918  007452  0E7F               	movlw	high STR_18
  2919  007454  6E08               	movwf	(lcd_str@str+1)^0,c
  2920  007456  ECC0  F02D         	call	_lcd_str	;wreg free
  2921                           
  2922                           ;main.c: 509:                             lcdPosition(2, 0);
  2923  00745A  0E00               	movlw	0
  2924  00745C  6E09               	movwf	lcdPosition@coluna^0,c
  2925  00745E  0E02               	movlw	2
  2926  007460  EC92  F02E         	call	_lcdPosition
  2927  007464                     
  2928                           ;main.c: 510:                             lcd_str("0- Pagar");
  2929  007464  0EBA               	movlw	low STR_19
  2930  007466  6E07               	movwf	lcd_str@str^0,c
  2931  007468  0E7F               	movlw	high STR_19
  2932  00746A  6E08               	movwf	(lcd_str@str+1)^0,c
  2933  00746C  ECC0  F02D         	call	_lcd_str	;wreg free
  2934  007470                     
  2935                           ;main.c: 511:                             ssdInit();
  2936  007470  EC3B  F02E         	call	_ssdInit	;wreg free
  2937  007474                     
  2938                           ;main.c: 512:                             for (i = 0; i < 3000; i++) {
  2939  007474  0E00               	movlw	0
  2940  007476  6E2F               	movwf	(main@i+1)^0,c
  2941  007478  0E00               	movlw	0
  2942  00747A  6E2E               	movwf	main@i^0,c
  2943  00747C                     l4028:
  2944                           
  2945                           ;main.c: 513:                                 ssdDigit(0, 2);
  2946  00747C  0E02               	movlw	2
  2947  00747E  6E01               	movwf	ssdDigit@pos^0,c
  2948  007480  0E00               	movlw	0
  2949  007482  EC66  F02E         	call	_ssdDigit
  2950                           
  2951                           ;main.c: 514:                                 ssdDigit(7, 3);
  2952  007486  0E03               	movlw	3
  2953  007488  6E01               	movwf	ssdDigit@pos^0,c
  2954  00748A  0E07               	movlw	7
  2955  00748C  EC66  F02E         	call	_ssdDigit
  2956  007490                     
  2957                           ;main.c: 515:                                 ssdUpdate();
  2958  007490  EC45  F02F         	call	_ssdUpdate	;wreg free
  2959  007494                     
  2960                           ;main.c: 516:                                 atraso_ms(2);
  2961  007494  0E00               	movlw	0
  2962  007496  6E02               	movwf	(atraso_ms@valor+1)^0,c
  2963  007498  0E02               	movlw	2
  2964  00749A  6E01               	movwf	atraso_ms@valor^0,c
  2965  00749C  ECA1  F02D         	call	_atraso_ms	;wreg free
  2966  0074A0                     
  2967                           ;main.c: 517:                             }
  2968  0074A0  4A2E               	infsnz	main@i^0,f,c
  2969  0074A2  2A2F               	incf	(main@i+1)^0,f,c
  2970  0074A4  0EB8               	movlw	184
  2971  0074A6  5C2E               	subwf	main@i^0,w,c
  2972  0074A8  0E0B               	movlw	11
  2973  0074AA  582F               	subwfb	(main@i+1)^0,w,c
  2974  0074AC  A0D8               	btfss	status,0,c
  2975  0074AE  EF5B  F03A         	goto	u2461
  2976  0074B2  EF5D  F03A         	goto	u2460
  2977  0074B6                     u2461:
  2978  0074B6  EF3E  F03A         	goto	l4028
  2979  0074BA                     u2460:
  2980  0074BA                     
  2981                           ;main.c: 518:                             desligaDisplays();
  2982  0074BA  ECE8  F02D         	call	_desligaDisplays	;wreg free
  2983  0074BE                     l4040:
  2984                           
  2985                           ;main.c: 521:                                 kpDebounce();
  2986  0074BE  ECED  F02F         	call	_kpDebounce	;wreg free
  2987  0074C2                     
  2988                           ;main.c: 522:                                 if (kpRead() != tecla) {
  2989  0074C2  EC2D  F02D         	call	_kpRead	;wreg free
  2990  0074C6  5030               	movf	main@tecla^0,w,c
  2991  0074C8  1801               	xorwf	?_kpRead^0,w,c
  2992  0074CA  E109               	bnz	u2470
  2993  0074CC  5031               	movf	(main@tecla+1)^0,w,c
  2994  0074CE  1802               	xorwf	(?_kpRead+1)^0,w,c
  2995  0074D0  B4D8               	btfsc	status,2,c
  2996  0074D2  EF6D  F03A         	goto	u2471
  2997  0074D6  EF6F  F03A         	goto	u2470
  2998  0074DA                     u2471:
  2999  0074DA  EF5F  F03A         	goto	l4040
  3000  0074DE                     u2470:
  3001  0074DE                     
  3002                           ;main.c: 523:                                     tecla = kpRead();
  3003  0074DE  EC2D  F02D         	call	_kpRead	;wreg free
  3004  0074E2  C001  F030         	movff	?_kpRead,main@tecla
  3005  0074E6  C002  F031         	movff	?_kpRead+1,main@tecla+1
  3006  0074EA                     
  3007                           ;main.c: 524:                                     if (((tecla) & (1<<(4)))) {
  3008  0074EA  A830               	btfss	main@tecla^0,4,c
  3009  0074EC  EF7A  F03A         	goto	u2481
  3010  0074F0  EF7C  F03A         	goto	u2480
  3011  0074F4                     u2481:
  3012  0074F4  EF5F  F03A         	goto	l4040
  3013  0074F8                     u2480:
  3014  0074F8                     
  3015                           ;main.c: 525:                                         lcd_cmd(0x01);
  3016  0074F8  0E01               	movlw	1
  3017  0074FA  EC5C  F02D         	call	_lcd_cmd
  3018                           
  3019                           ;main.c: 526:                                         lcdPosition(0, 0);
  3020  0074FE  0E00               	movlw	0
  3021  007500  6E09               	movwf	lcdPosition@coluna^0,c
  3022  007502  0E00               	movlw	0
  3023  007504  EC92  F02E         	call	_lcdPosition
  3024  007508                     
  3025                           ;main.c: 527:                                         lcd_str("Carregando...");
  3026  007508  0E44               	movlw	low STR_20
  3027  00750A  6E07               	movwf	lcd_str@str^0,c
  3028  00750C  0E7F               	movlw	high STR_20
  3029  00750E  6E08               	movwf	(lcd_str@str+1)^0,c
  3030  007510  ECC0  F02D         	call	_lcd_str	;wreg free
  3031  007514                     
  3032                           ;main.c: 528:                                         atraso_ms(5000);
  3033  007514  0E13               	movlw	19
  3034  007516  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3035  007518  0E88               	movlw	136
  3036  00751A  6E01               	movwf	atraso_ms@valor^0,c
  3037  00751C  ECA1  F02D         	call	_atraso_ms	;wreg free
  3038  007520                     
  3039                           ;main.c: 529:                                         lcd_cmd(0x01);
  3040  007520  0E01               	movlw	1
  3041  007522  EC5C  F02D         	call	_lcd_cmd
  3042  007526                     
  3043                           ;main.c: 530:                                         lcdPosition(0, 0);
  3044  007526  0E00               	movlw	0
  3045  007528  6E09               	movwf	lcdPosition@coluna^0,c
  3046  00752A  0E00               	movlw	0
  3047  00752C  EC92  F02E         	call	_lcdPosition
  3048                           
  3049                           ;main.c: 531:                                         lcd_str("Aprovado!");
  3050  007530  0E9C               	movlw	low STR_21
  3051  007532  6E07               	movwf	lcd_str@str^0,c
  3052  007534  0E7F               	movlw	high STR_21
  3053  007536  6E08               	movwf	(lcd_str@str+1)^0,c
  3054  007538  ECC0  F02D         	call	_lcd_str	;wreg free
  3055  00753C                     
  3056                           ;main.c: 532:                                         ligaRele1();
  3057  00753C  EC16  F02D         	call	_ligaRele1	;wreg free
  3058  007540                     
  3059                           ;main.c: 533:                                         ligaRele2();
  3060  007540  EC19  F02D         	call	_ligaRele2	;wreg free
  3061  007544                     
  3062                           ;main.c: 534:                                         atraso_ms(5000);
  3063  007544  0E13               	movlw	19
  3064  007546  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3065  007548  0E88               	movlw	136
  3066  00754A  6E01               	movwf	atraso_ms@valor^0,c
  3067  00754C  ECA1  F02D         	call	_atraso_ms	;wreg free
  3068  007550                     
  3069                           ;main.c: 535:                                         desligaRele1();
  3070  007550  EC10  F02D         	call	_desligaRele1	;wreg free
  3071  007554                     
  3072                           ;main.c: 536:                                         desligaRele2();
  3073  007554  EC13  F02D         	call	_desligaRele2	;wreg free
  3074  007558                     
  3075                           ;main.c: 537:                                         lcd_cmd(0x01);
  3076  007558  0E01               	movlw	1
  3077  00755A  EC5C  F02D         	call	_lcd_cmd
  3078  00755E                     
  3079                           ;main.c: 538:                                         lcdPosition(0, 0);
  3080  00755E  0E00               	movlw	0
  3081  007560  6E09               	movwf	lcdPosition@coluna^0,c
  3082  007562  0E00               	movlw	0
  3083  007564  EC92  F02E         	call	_lcdPosition
  3084  007568                     
  3085                           ;main.c: 539:                                         lcd_str("Volte sempre!");
  3086  007568  0E36               	movlw	low STR_22
  3087  00756A  6E07               	movwf	lcd_str@str^0,c
  3088  00756C  0E7F               	movlw	high STR_22
  3089  00756E  6E08               	movwf	(lcd_str@str+1)^0,c
  3090  007570  ECC0  F02D         	call	_lcd_str	;wreg free
  3091                           
  3092                           ;main.c: 540:                                         lcdPosition(2, 0);
  3093  007574  0E00               	movlw	0
  3094  007576  6E09               	movwf	lcdPosition@coluna^0,c
  3095  007578  0E02               	movlw	2
  3096  00757A  EC92  F02E         	call	_lcdPosition
  3097  00757E                     
  3098                           ;main.c: 541:                                         lcd_str("Outro pedido");
  3099  00757E  0E6E               	movlw	low STR_23
  3100  007580  6E07               	movwf	lcd_str@str^0,c
  3101  007582  0E7F               	movlw	high STR_23
  3102  007584  6E08               	movwf	(lcd_str@str+1)^0,c
  3103  007586  ECC0  F02D         	call	_lcd_str	;wreg free
  3104  00758A                     
  3105                           ;main.c: 542:                                         lcdPosition(3, 0);
  3106  00758A  0E00               	movlw	0
  3107  00758C  6E09               	movwf	lcdPosition@coluna^0,c
  3108  00758E  0E03               	movlw	3
  3109  007590  EC92  F02E         	call	_lcdPosition
  3110                           
  3111                           ;main.c: 543:                                         lcd_str("no Reset");
  3112  007594  0ED5               	movlw	low STR_24
  3113  007596  6E07               	movwf	lcd_str@str^0,c
  3114  007598  0E7F               	movlw	high STR_24
  3115  00759A  6E08               	movwf	(lcd_str@str+1)^0,c
  3116  00759C  ECC0  F02D         	call	_lcd_str	;wreg free
  3117  0075A0  EF5F  F03A         	goto	l4040
  3118  0075A4                     l126:
  3119                           
  3120                           ;main.c: 548:                         if (((tecla) & (1<<(7)))) {
  3121  0075A4  AE30               	btfss	main@tecla^0,7,c
  3122  0075A6  EFD7  F03A         	goto	u2491
  3123  0075AA  EFD9  F03A         	goto	u2490
  3124  0075AE                     u2491:
  3125  0075AE  EFAF  F03B         	goto	l133
  3126  0075B2                     u2490:
  3127  0075B2                     
  3128                           ;main.c: 549:                             lcd_cmd(0x01);
  3129  0075B2  0E01               	movlw	1
  3130  0075B4  EC5C  F02D         	call	_lcd_cmd
  3131                           
  3132                           ;main.c: 550:                             lcdPosition(0, 0);
  3133  0075B8  0E00               	movlw	0
  3134  0075BA  6E09               	movwf	lcdPosition@coluna^0,c
  3135  0075BC  0E00               	movlw	0
  3136  0075BE  EC92  F02E         	call	_lcdPosition
  3137  0075C2                     
  3138                           ;main.c: 551:                             lcd_str("Seu copo esta");
  3139  0075C2  0E52               	movlw	low STR_16
  3140  0075C4  6E07               	movwf	lcd_str@str^0,c
  3141  0075C6  0E7F               	movlw	high STR_16
  3142  0075C8  6E08               	movwf	(lcd_str@str+1)^0,c
  3143  0075CA  ECC0  F02D         	call	_lcd_str	;wreg free
  3144  0075CE                     
  3145                           ;main.c: 552:                             lcdPosition(1, 0);
  3146  0075CE  0E00               	movlw	0
  3147  0075D0  6E09               	movwf	lcdPosition@coluna^0,c
  3148  0075D2  0E01               	movlw	1
  3149  0075D4  EC92  F02E         	call	_lcdPosition
  3150                           
  3151                           ;main.c: 553:                             lcd_str("enchendo!");
  3152  0075D8  0EA6               	movlw	low STR_17
  3153  0075DA  6E07               	movwf	lcd_str@str^0,c
  3154  0075DC  0E7F               	movlw	high STR_17
  3155  0075DE  6E08               	movwf	(lcd_str@str+1)^0,c
  3156  0075E0  ECC0  F02D         	call	_lcd_str	;wreg free
  3157  0075E4                     
  3158                           ;main.c: 554:                             ligarCooler();
  3159  0075E4  EC24  F02D         	call	_ligarCooler	;wreg free
  3160  0075E8                     
  3161                           ;main.c: 555:                             atraso_ms(5000);
  3162  0075E8  0E13               	movlw	19
  3163  0075EA  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3164  0075EC  0E88               	movlw	136
  3165  0075EE  6E01               	movwf	atraso_ms@valor^0,c
  3166  0075F0  ECA1  F02D         	call	_atraso_ms	;wreg free
  3167  0075F4                     
  3168                           ;main.c: 556:                             desligarCooler();
  3169  0075F4  EC1C  F02D         	call	_desligarCooler	;wreg free
  3170  0075F8                     
  3171                           ;main.c: 557:                             lcd_cmd(0x01);
  3172  0075F8  0E01               	movlw	1
  3173  0075FA  EC5C  F02D         	call	_lcd_cmd
  3174  0075FE                     
  3175                           ;main.c: 558:                             lcdPosition(0, 0);
  3176  0075FE  0E00               	movlw	0
  3177  007600  6E09               	movwf	lcdPosition@coluna^0,c
  3178  007602  0E00               	movlw	0
  3179  007604  EC92  F02E         	call	_lcdPosition
  3180  007608                     
  3181                           ;main.c: 559:                             lcd_str("Valor no display");
  3182  007608  0E15               	movlw	low STR_18
  3183  00760A  6E07               	movwf	lcd_str@str^0,c
  3184  00760C  0E7F               	movlw	high STR_18
  3185  00760E  6E08               	movwf	(lcd_str@str+1)^0,c
  3186  007610  ECC0  F02D         	call	_lcd_str	;wreg free
  3187                           
  3188                           ;main.c: 560:                             lcdPosition(2, 0);
  3189  007614  0E00               	movlw	0
  3190  007616  6E09               	movwf	lcdPosition@coluna^0,c
  3191  007618  0E02               	movlw	2
  3192  00761A  EC92  F02E         	call	_lcdPosition
  3193  00761E                     
  3194                           ;main.c: 561:                             lcd_str("0- Pagar");
  3195  00761E  0EBA               	movlw	low STR_19
  3196  007620  6E07               	movwf	lcd_str@str^0,c
  3197  007622  0E7F               	movlw	high STR_19
  3198  007624  6E08               	movwf	(lcd_str@str+1)^0,c
  3199  007626  ECC0  F02D         	call	_lcd_str	;wreg free
  3200  00762A                     
  3201                           ;main.c: 562:                             ssdInit();
  3202  00762A  EC3B  F02E         	call	_ssdInit	;wreg free
  3203  00762E                     
  3204                           ;main.c: 563:                             for (i = 0; i < 3000; i++) {
  3205  00762E  0E00               	movlw	0
  3206  007630  6E2F               	movwf	(main@i+1)^0,c
  3207  007632  0E00               	movlw	0
  3208  007634  6E2E               	movwf	main@i^0,c
  3209  007636                     l4106:
  3210                           
  3211                           ;main.c: 564:                                 ssdDigit(1, 2);
  3212  007636  0E02               	movlw	2
  3213  007638  6E01               	movwf	ssdDigit@pos^0,c
  3214  00763A  0E01               	movlw	1
  3215  00763C  EC66  F02E         	call	_ssdDigit
  3216                           
  3217                           ;main.c: 565:                                 ssdDigit(0, 3);
  3218  007640  0E03               	movlw	3
  3219  007642  6E01               	movwf	ssdDigit@pos^0,c
  3220  007644  0E00               	movlw	0
  3221  007646  EC66  F02E         	call	_ssdDigit
  3222  00764A                     
  3223                           ;main.c: 566:                                 ssdUpdate();
  3224  00764A  EC45  F02F         	call	_ssdUpdate	;wreg free
  3225  00764E                     
  3226                           ;main.c: 567:                                 atraso_ms(2);
  3227  00764E  0E00               	movlw	0
  3228  007650  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3229  007652  0E02               	movlw	2
  3230  007654  6E01               	movwf	atraso_ms@valor^0,c
  3231  007656  ECA1  F02D         	call	_atraso_ms	;wreg free
  3232  00765A                     
  3233                           ;main.c: 568:                             }
  3234  00765A  4A2E               	infsnz	main@i^0,f,c
  3235  00765C  2A2F               	incf	(main@i+1)^0,f,c
  3236  00765E  0EB8               	movlw	184
  3237  007660  5C2E               	subwf	main@i^0,w,c
  3238  007662  0E0B               	movlw	11
  3239  007664  582F               	subwfb	(main@i+1)^0,w,c
  3240  007666  A0D8               	btfss	status,0,c
  3241  007668  EF38  F03B         	goto	u2501
  3242  00766C  EF3A  F03B         	goto	u2500
  3243  007670                     u2501:
  3244  007670  EF1B  F03B         	goto	l4106
  3245  007674                     u2500:
  3246  007674                     
  3247                           ;main.c: 569:                             desligaDisplays();
  3248  007674  ECE8  F02D         	call	_desligaDisplays	;wreg free
  3249  007678                     l4118:
  3250                           
  3251                           ;main.c: 572:                                 kpDebounce();
  3252  007678  ECED  F02F         	call	_kpDebounce	;wreg free
  3253  00767C                     
  3254                           ;main.c: 573:                                 if (kpRead() != tecla) {
  3255  00767C  EC2D  F02D         	call	_kpRead	;wreg free
  3256  007680  5030               	movf	main@tecla^0,w,c
  3257  007682  1801               	xorwf	?_kpRead^0,w,c
  3258  007684  E109               	bnz	u2510
  3259  007686  5031               	movf	(main@tecla+1)^0,w,c
  3260  007688  1802               	xorwf	(?_kpRead+1)^0,w,c
  3261  00768A  B4D8               	btfsc	status,2,c
  3262  00768C  EF4A  F03B         	goto	u2511
  3263  007690  EF4C  F03B         	goto	u2510
  3264  007694                     u2511:
  3265  007694  EF3C  F03B         	goto	l4118
  3266  007698                     u2510:
  3267  007698                     
  3268                           ;main.c: 574:                                     tecla = kpRead();
  3269  007698  EC2D  F02D         	call	_kpRead	;wreg free
  3270  00769C  C001  F030         	movff	?_kpRead,main@tecla
  3271  0076A0  C002  F031         	movff	?_kpRead+1,main@tecla+1
  3272  0076A4                     
  3273                           ;main.c: 575:                                     if (((tecla) & (1<<(4)))) {
  3274  0076A4  A830               	btfss	main@tecla^0,4,c
  3275  0076A6  EF57  F03B         	goto	u2521
  3276  0076AA  EF59  F03B         	goto	u2520
  3277  0076AE                     u2521:
  3278  0076AE  EF3C  F03B         	goto	l4118
  3279  0076B2                     u2520:
  3280  0076B2                     
  3281                           ;main.c: 576:                                         lcd_cmd(0x01);
  3282  0076B2  0E01               	movlw	1
  3283  0076B4  EC5C  F02D         	call	_lcd_cmd
  3284                           
  3285                           ;main.c: 577:                                         lcdPosition(0, 0);
  3286  0076B8  0E00               	movlw	0
  3287  0076BA  6E09               	movwf	lcdPosition@coluna^0,c
  3288  0076BC  0E00               	movlw	0
  3289  0076BE  EC92  F02E         	call	_lcdPosition
  3290  0076C2                     
  3291                           ;main.c: 578:                                         lcd_str("Carregando...");
  3292  0076C2  0E44               	movlw	low STR_20
  3293  0076C4  6E07               	movwf	lcd_str@str^0,c
  3294  0076C6  0E7F               	movlw	high STR_20
  3295  0076C8  6E08               	movwf	(lcd_str@str+1)^0,c
  3296  0076CA  ECC0  F02D         	call	_lcd_str	;wreg free
  3297  0076CE                     
  3298                           ;main.c: 579:                                         atraso_ms(5000);
  3299  0076CE  0E13               	movlw	19
  3300  0076D0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3301  0076D2  0E88               	movlw	136
  3302  0076D4  6E01               	movwf	atraso_ms@valor^0,c
  3303  0076D6  ECA1  F02D         	call	_atraso_ms	;wreg free
  3304  0076DA                     
  3305                           ;main.c: 580:                                         lcd_cmd(0x01);
  3306  0076DA  0E01               	movlw	1
  3307  0076DC  EC5C  F02D         	call	_lcd_cmd
  3308  0076E0                     
  3309                           ;main.c: 581:                                         lcdPosition(0, 0);
  3310  0076E0  0E00               	movlw	0
  3311  0076E2  6E09               	movwf	lcdPosition@coluna^0,c
  3312  0076E4  0E00               	movlw	0
  3313  0076E6  EC92  F02E         	call	_lcdPosition
  3314                           
  3315                           ;main.c: 582:                                         lcd_str("Aprovado!");
  3316  0076EA  0E9C               	movlw	low STR_21
  3317  0076EC  6E07               	movwf	lcd_str@str^0,c
  3318  0076EE  0E7F               	movlw	high STR_21
  3319  0076F0  6E08               	movwf	(lcd_str@str+1)^0,c
  3320  0076F2  ECC0  F02D         	call	_lcd_str	;wreg free
  3321  0076F6                     
  3322                           ;main.c: 583:                                         ligaRele1();
  3323  0076F6  EC16  F02D         	call	_ligaRele1	;wreg free
  3324  0076FA                     
  3325                           ;main.c: 584:                                         ligaRele2();
  3326  0076FA  EC19  F02D         	call	_ligaRele2	;wreg free
  3327  0076FE                     
  3328                           ;main.c: 585:                                         atraso_ms(5000);
  3329  0076FE  0E13               	movlw	19
  3330  007700  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3331  007702  0E88               	movlw	136
  3332  007704  6E01               	movwf	atraso_ms@valor^0,c
  3333  007706  ECA1  F02D         	call	_atraso_ms	;wreg free
  3334  00770A                     
  3335                           ;main.c: 586:                                         desligaRele1();
  3336  00770A  EC10  F02D         	call	_desligaRele1	;wreg free
  3337  00770E                     
  3338                           ;main.c: 587:                                         desligaRele2();
  3339  00770E  EC13  F02D         	call	_desligaRele2	;wreg free
  3340  007712                     
  3341                           ;main.c: 588:                                         lcd_cmd(0x01);
  3342  007712  0E01               	movlw	1
  3343  007714  EC5C  F02D         	call	_lcd_cmd
  3344  007718                     
  3345                           ;main.c: 589:                                         lcdPosition(0, 0);
  3346  007718  0E00               	movlw	0
  3347  00771A  6E09               	movwf	lcdPosition@coluna^0,c
  3348  00771C  0E00               	movlw	0
  3349  00771E  EC92  F02E         	call	_lcdPosition
  3350  007722                     
  3351                           ;main.c: 590:                                         lcd_str("Volte sempre!");
  3352  007722  0E36               	movlw	low STR_22
  3353  007724  6E07               	movwf	lcd_str@str^0,c
  3354  007726  0E7F               	movlw	high STR_22
  3355  007728  6E08               	movwf	(lcd_str@str+1)^0,c
  3356  00772A  ECC0  F02D         	call	_lcd_str	;wreg free
  3357                           
  3358                           ;main.c: 591:                                         lcdPosition(2, 0);
  3359  00772E  0E00               	movlw	0
  3360  007730  6E09               	movwf	lcdPosition@coluna^0,c
  3361  007732  0E02               	movlw	2
  3362  007734  EC92  F02E         	call	_lcdPosition
  3363  007738                     
  3364                           ;main.c: 592:                                         lcd_str("Outro pedido");
  3365  007738  0E6E               	movlw	low STR_23
  3366  00773A  6E07               	movwf	lcd_str@str^0,c
  3367  00773C  0E7F               	movlw	high STR_23
  3368  00773E  6E08               	movwf	(lcd_str@str+1)^0,c
  3369  007740  ECC0  F02D         	call	_lcd_str	;wreg free
  3370  007744                     
  3371                           ;main.c: 593:                                         lcdPosition(3, 0);
  3372  007744  0E00               	movlw	0
  3373  007746  6E09               	movwf	lcdPosition@coluna^0,c
  3374  007748  0E03               	movlw	3
  3375  00774A  EC92  F02E         	call	_lcdPosition
  3376                           
  3377                           ;main.c: 594:                                         lcd_str("no Reset");
  3378  00774E  0ED5               	movlw	low STR_24
  3379  007750  6E07               	movwf	lcd_str@str^0,c
  3380  007752  0E7F               	movlw	high STR_24
  3381  007754  6E08               	movwf	(lcd_str@str+1)^0,c
  3382  007756  ECC0  F02D         	call	_lcd_str	;wreg free
  3383  00775A  EF3C  F03B         	goto	l4118
  3384  00775E                     l133:
  3385                           
  3386                           ;main.c: 599:                         if (((tecla) & (1<<(11)))) {
  3387  00775E  A631               	btfss	(main@tecla+1)^0,3,c
  3388  007760  EFB4  F03B         	goto	u2531
  3389  007764  EFB6  F03B         	goto	u2530
  3390  007768                     u2531:
  3391  007768  EFDF  F039         	goto	l3992
  3392  00776C                     u2530:
  3393  00776C                     
  3394                           ;main.c: 600:                             lcd_cmd(0x01);
  3395  00776C  0E01               	movlw	1
  3396  00776E  EC5C  F02D         	call	_lcd_cmd
  3397                           
  3398                           ;main.c: 601:                             lcdPosition(0, 0);
  3399  007772  0E00               	movlw	0
  3400  007774  6E09               	movwf	lcdPosition@coluna^0,c
  3401  007776  0E00               	movlw	0
  3402  007778  EC92  F02E         	call	_lcdPosition
  3403  00777C                     
  3404                           ;main.c: 602:                             lcd_str("Seu copo esta");
  3405  00777C  0E52               	movlw	low STR_16
  3406  00777E  6E07               	movwf	lcd_str@str^0,c
  3407  007780  0E7F               	movlw	high STR_16
  3408  007782  6E08               	movwf	(lcd_str@str+1)^0,c
  3409  007784  ECC0  F02D         	call	_lcd_str	;wreg free
  3410  007788                     
  3411                           ;main.c: 603:                             lcdPosition(1, 0);
  3412  007788  0E00               	movlw	0
  3413  00778A  6E09               	movwf	lcdPosition@coluna^0,c
  3414  00778C  0E01               	movlw	1
  3415  00778E  EC92  F02E         	call	_lcdPosition
  3416                           
  3417                           ;main.c: 604:                             lcd_str("enchendo!");
  3418  007792  0EA6               	movlw	low STR_17
  3419  007794  6E07               	movwf	lcd_str@str^0,c
  3420  007796  0E7F               	movlw	high STR_17
  3421  007798  6E08               	movwf	(lcd_str@str+1)^0,c
  3422  00779A  ECC0  F02D         	call	_lcd_str	;wreg free
  3423  00779E                     
  3424                           ;main.c: 605:                             ligarCooler();
  3425  00779E  EC24  F02D         	call	_ligarCooler	;wreg free
  3426  0077A2                     
  3427                           ;main.c: 606:                             atraso_ms(5000);
  3428  0077A2  0E13               	movlw	19
  3429  0077A4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3430  0077A6  0E88               	movlw	136
  3431  0077A8  6E01               	movwf	atraso_ms@valor^0,c
  3432  0077AA  ECA1  F02D         	call	_atraso_ms	;wreg free
  3433  0077AE                     
  3434                           ;main.c: 607:                             desligarCooler();
  3435  0077AE  EC1C  F02D         	call	_desligarCooler	;wreg free
  3436  0077B2                     
  3437                           ;main.c: 608:                             lcd_cmd(0x01);
  3438  0077B2  0E01               	movlw	1
  3439  0077B4  EC5C  F02D         	call	_lcd_cmd
  3440  0077B8                     
  3441                           ;main.c: 609:                             lcdPosition(0, 0);
  3442  0077B8  0E00               	movlw	0
  3443  0077BA  6E09               	movwf	lcdPosition@coluna^0,c
  3444  0077BC  0E00               	movlw	0
  3445  0077BE  EC92  F02E         	call	_lcdPosition
  3446  0077C2                     
  3447                           ;main.c: 610:                             lcd_str("Valor no display");
  3448  0077C2  0E15               	movlw	low STR_18
  3449  0077C4  6E07               	movwf	lcd_str@str^0,c
  3450  0077C6  0E7F               	movlw	high STR_18
  3451  0077C8  6E08               	movwf	(lcd_str@str+1)^0,c
  3452  0077CA  ECC0  F02D         	call	_lcd_str	;wreg free
  3453                           
  3454                           ;main.c: 611:                             lcdPosition(2, 0);
  3455  0077CE  0E00               	movlw	0
  3456  0077D0  6E09               	movwf	lcdPosition@coluna^0,c
  3457  0077D2  0E02               	movlw	2
  3458  0077D4  EC92  F02E         	call	_lcdPosition
  3459  0077D8                     
  3460                           ;main.c: 612:                             lcd_str("0- Pagar");
  3461  0077D8  0EBA               	movlw	low STR_19
  3462  0077DA  6E07               	movwf	lcd_str@str^0,c
  3463  0077DC  0E7F               	movlw	high STR_19
  3464  0077DE  6E08               	movwf	(lcd_str@str+1)^0,c
  3465  0077E0  ECC0  F02D         	call	_lcd_str	;wreg free
  3466  0077E4                     
  3467                           ;main.c: 613:                             ssdInit();
  3468  0077E4  EC3B  F02E         	call	_ssdInit	;wreg free
  3469  0077E8                     
  3470                           ;main.c: 614:                             for (i = 0; i < 3000; i++) {
  3471  0077E8  0E00               	movlw	0
  3472  0077EA  6E2F               	movwf	(main@i+1)^0,c
  3473  0077EC  0E00               	movlw	0
  3474  0077EE  6E2E               	movwf	main@i^0,c
  3475  0077F0                     l4184:
  3476                           
  3477                           ;main.c: 615:                                 ssdDigit(1, 2);
  3478  0077F0  0E02               	movlw	2
  3479  0077F2  6E01               	movwf	ssdDigit@pos^0,c
  3480  0077F4  0E01               	movlw	1
  3481  0077F6  EC66  F02E         	call	_ssdDigit
  3482                           
  3483                           ;main.c: 616:                                 ssdDigit(2, 3);
  3484  0077FA  0E03               	movlw	3
  3485  0077FC  6E01               	movwf	ssdDigit@pos^0,c
  3486  0077FE  0E02               	movlw	2
  3487  007800  EC66  F02E         	call	_ssdDigit
  3488  007804                     
  3489                           ;main.c: 617:                                 ssdUpdate();
  3490  007804  EC45  F02F         	call	_ssdUpdate	;wreg free
  3491  007808                     
  3492                           ;main.c: 618:                                 atraso_ms(2);
  3493  007808  0E00               	movlw	0
  3494  00780A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3495  00780C  0E02               	movlw	2
  3496  00780E  6E01               	movwf	atraso_ms@valor^0,c
  3497  007810  ECA1  F02D         	call	_atraso_ms	;wreg free
  3498  007814                     
  3499                           ;main.c: 619:                             }
  3500  007814  4A2E               	infsnz	main@i^0,f,c
  3501  007816  2A2F               	incf	(main@i+1)^0,f,c
  3502  007818  0EB8               	movlw	184
  3503  00781A  5C2E               	subwf	main@i^0,w,c
  3504  00781C  0E0B               	movlw	11
  3505  00781E  582F               	subwfb	(main@i+1)^0,w,c
  3506  007820  A0D8               	btfss	status,0,c
  3507  007822  EF15  F03C         	goto	u2541
  3508  007826  EF17  F03C         	goto	u2540
  3509  00782A                     u2541:
  3510  00782A  EFF8  F03B         	goto	l4184
  3511  00782E                     u2540:
  3512  00782E                     
  3513                           ;main.c: 620:                             desligaDisplays();
  3514  00782E  ECE8  F02D         	call	_desligaDisplays	;wreg free
  3515  007832                     l4196:
  3516                           
  3517                           ;main.c: 623:                                 kpDebounce();
  3518  007832  ECED  F02F         	call	_kpDebounce	;wreg free
  3519  007836                     
  3520                           ;main.c: 624:                                 if (kpRead() != tecla) {
  3521  007836  EC2D  F02D         	call	_kpRead	;wreg free
  3522  00783A  5030               	movf	main@tecla^0,w,c
  3523  00783C  1801               	xorwf	?_kpRead^0,w,c
  3524  00783E  E109               	bnz	u2550
  3525  007840  5031               	movf	(main@tecla+1)^0,w,c
  3526  007842  1802               	xorwf	(?_kpRead+1)^0,w,c
  3527  007844  B4D8               	btfsc	status,2,c
  3528  007846  EF27  F03C         	goto	u2551
  3529  00784A  EF29  F03C         	goto	u2550
  3530  00784E                     u2551:
  3531  00784E  EF19  F03C         	goto	l4196
  3532  007852                     u2550:
  3533  007852                     
  3534                           ;main.c: 625:                                     tecla = kpRead();
  3535  007852  EC2D  F02D         	call	_kpRead	;wreg free
  3536  007856  C001  F030         	movff	?_kpRead,main@tecla
  3537  00785A  C002  F031         	movff	?_kpRead+1,main@tecla+1
  3538  00785E                     
  3539                           ;main.c: 626:                                     if (((tecla) & (1<<(4)))) {
  3540  00785E  A830               	btfss	main@tecla^0,4,c
  3541  007860  EF34  F03C         	goto	u2561
  3542  007864  EF36  F03C         	goto	u2560
  3543  007868                     u2561:
  3544  007868  EF19  F03C         	goto	l4196
  3545  00786C                     u2560:
  3546  00786C                     
  3547                           ;main.c: 627:                                         lcd_cmd(0x01);
  3548  00786C  0E01               	movlw	1
  3549  00786E  EC5C  F02D         	call	_lcd_cmd
  3550                           
  3551                           ;main.c: 628:                                         lcdPosition(0, 0);
  3552  007872  0E00               	movlw	0
  3553  007874  6E09               	movwf	lcdPosition@coluna^0,c
  3554  007876  0E00               	movlw	0
  3555  007878  EC92  F02E         	call	_lcdPosition
  3556  00787C                     
  3557                           ;main.c: 629:                                         lcd_str("Carregando...");
  3558  00787C  0E44               	movlw	low STR_20
  3559  00787E  6E07               	movwf	lcd_str@str^0,c
  3560  007880  0E7F               	movlw	high STR_20
  3561  007882  6E08               	movwf	(lcd_str@str+1)^0,c
  3562  007884  ECC0  F02D         	call	_lcd_str	;wreg free
  3563  007888                     
  3564                           ;main.c: 630:                                         atraso_ms(5000);
  3565  007888  0E13               	movlw	19
  3566  00788A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3567  00788C  0E88               	movlw	136
  3568  00788E  6E01               	movwf	atraso_ms@valor^0,c
  3569  007890  ECA1  F02D         	call	_atraso_ms	;wreg free
  3570  007894                     
  3571                           ;main.c: 631:                                         lcd_cmd(0x01);
  3572  007894  0E01               	movlw	1
  3573  007896  EC5C  F02D         	call	_lcd_cmd
  3574  00789A                     
  3575                           ;main.c: 632:                                         lcdPosition(0, 0);
  3576  00789A  0E00               	movlw	0
  3577  00789C  6E09               	movwf	lcdPosition@coluna^0,c
  3578  00789E  0E00               	movlw	0
  3579  0078A0  EC92  F02E         	call	_lcdPosition
  3580                           
  3581                           ;main.c: 633:                                         lcd_str("Aprovado!");
  3582  0078A4  0E9C               	movlw	low STR_21
  3583  0078A6  6E07               	movwf	lcd_str@str^0,c
  3584  0078A8  0E7F               	movlw	high STR_21
  3585  0078AA  6E08               	movwf	(lcd_str@str+1)^0,c
  3586  0078AC  ECC0  F02D         	call	_lcd_str	;wreg free
  3587  0078B0                     
  3588                           ;main.c: 634:                                         ligaRele1();
  3589  0078B0  EC16  F02D         	call	_ligaRele1	;wreg free
  3590  0078B4                     
  3591                           ;main.c: 635:                                         ligaRele2();
  3592  0078B4  EC19  F02D         	call	_ligaRele2	;wreg free
  3593  0078B8                     
  3594                           ;main.c: 636:                                         atraso_ms(5000);
  3595  0078B8  0E13               	movlw	19
  3596  0078BA  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3597  0078BC  0E88               	movlw	136
  3598  0078BE  6E01               	movwf	atraso_ms@valor^0,c
  3599  0078C0  ECA1  F02D         	call	_atraso_ms	;wreg free
  3600  0078C4                     
  3601                           ;main.c: 637:                                         desligaRele1();
  3602  0078C4  EC10  F02D         	call	_desligaRele1	;wreg free
  3603  0078C8                     
  3604                           ;main.c: 638:                                         desligaRele2();
  3605  0078C8  EC13  F02D         	call	_desligaRele2	;wreg free
  3606  0078CC                     
  3607                           ;main.c: 639:                                         lcd_cmd(0x01);
  3608  0078CC  0E01               	movlw	1
  3609  0078CE  EC5C  F02D         	call	_lcd_cmd
  3610  0078D2                     
  3611                           ;main.c: 640:                                         lcdPosition(0, 0);
  3612  0078D2  0E00               	movlw	0
  3613  0078D4  6E09               	movwf	lcdPosition@coluna^0,c
  3614  0078D6  0E00               	movlw	0
  3615  0078D8  EC92  F02E         	call	_lcdPosition
  3616  0078DC                     
  3617                           ;main.c: 641:                                         lcd_str("Volte sempre!");
  3618  0078DC  0E36               	movlw	low STR_22
  3619  0078DE  6E07               	movwf	lcd_str@str^0,c
  3620  0078E0  0E7F               	movlw	high STR_22
  3621  0078E2  6E08               	movwf	(lcd_str@str+1)^0,c
  3622  0078E4  ECC0  F02D         	call	_lcd_str	;wreg free
  3623                           
  3624                           ;main.c: 642:                                         lcdPosition(2, 0);
  3625  0078E8  0E00               	movlw	0
  3626  0078EA  6E09               	movwf	lcdPosition@coluna^0,c
  3627  0078EC  0E02               	movlw	2
  3628  0078EE  EC92  F02E         	call	_lcdPosition
  3629  0078F2                     
  3630                           ;main.c: 643:                                         lcd_str("Outro pedido");
  3631  0078F2  0E6E               	movlw	low STR_23
  3632  0078F4  6E07               	movwf	lcd_str@str^0,c
  3633  0078F6  0E7F               	movlw	high STR_23
  3634  0078F8  6E08               	movwf	(lcd_str@str+1)^0,c
  3635  0078FA  ECC0  F02D         	call	_lcd_str	;wreg free
  3636  0078FE                     
  3637                           ;main.c: 644:                                         lcdPosition(3, 0);
  3638  0078FE  0E00               	movlw	0
  3639  007900  6E09               	movwf	lcdPosition@coluna^0,c
  3640  007902  0E03               	movlw	3
  3641  007904  EC92  F02E         	call	_lcdPosition
  3642                           
  3643                           ;main.c: 645:                                         lcd_str("no Reset");
  3644  007908  0ED5               	movlw	low STR_24
  3645  00790A  6E07               	movwf	lcd_str@str^0,c
  3646  00790C  0E7F               	movlw	high STR_24
  3647  00790E  6E08               	movwf	(lcd_str@str+1)^0,c
  3648  007910  ECC0  F02D         	call	_lcd_str	;wreg free
  3649  007914  EF19  F03C         	goto	l4196
  3650  007918                     l123:
  3651                           
  3652                           ;main.c: 653:             if (((tecla) & (1<<(2)))) {
  3653  007918  A430               	btfss	main@tecla^0,2,c
  3654  00791A  EF91  F03C         	goto	u2571
  3655  00791E  EF93  F03C         	goto	u2570
  3656  007922                     u2571:
  3657  007922  EFCD  F033         	goto	l3464
  3658  007926                     u2570:
  3659  007926                     
  3660                           ;main.c: 654:                 lcd_cmd(0x01);
  3661  007926  0E01               	movlw	1
  3662  007928  EC5C  F02D         	call	_lcd_cmd
  3663                           
  3664                           ;main.c: 655:                 lcdPosition(0, 0);
  3665  00792C  0E00               	movlw	0
  3666  00792E  6E09               	movwf	lcdPosition@coluna^0,c
  3667  007930  0E00               	movlw	0
  3668  007932  EC92  F02E         	call	_lcdPosition
  3669  007936                     
  3670                           ;main.c: 656:                 lcd_str("Ipa");
  3671  007936  0EFA               	movlw	low (STR_11+3)
  3672  007938  6E07               	movwf	lcd_str@str^0,c
  3673  00793A  0E7F               	movlw	high (STR_11+3)
  3674  00793C  6E08               	movwf	(lcd_str@str+1)^0,c
  3675  00793E  ECC0  F02D         	call	_lcd_str	;wreg free
  3676  007942                     
  3677                           ;main.c: 657:                 lcdPosition(1, 0);
  3678  007942  0E00               	movlw	0
  3679  007944  6E09               	movwf	lcdPosition@coluna^0,c
  3680  007946  0E01               	movlw	1
  3681  007948  EC92  F02E         	call	_lcdPosition
  3682                           
  3683                           ;main.c: 658:                 lcd_str("1- 300ml    R$7");
  3684  00794C  0E26               	movlw	low STR_13
  3685  00794E  6E07               	movwf	lcd_str@str^0,c
  3686  007950  0E7F               	movlw	high STR_13
  3687  007952  6E08               	movwf	(lcd_str@str+1)^0,c
  3688  007954  ECC0  F02D         	call	_lcd_str	;wreg free
  3689  007958                     
  3690                           ;main.c: 659:                 lcdPosition(2, 0);
  3691  007958  0E00               	movlw	0
  3692  00795A  6E09               	movwf	lcdPosition@coluna^0,c
  3693  00795C  0E02               	movlw	2
  3694  00795E  EC92  F02E         	call	_lcdPosition
  3695  007962                     
  3696                           ;main.c: 660:                 lcd_str("2- 500ml    R$10");
  3697  007962  0EF3               	movlw	low STR_14
  3698  007964  6E07               	movwf	lcd_str@str^0,c
  3699  007966  0E7E               	movlw	high STR_14
  3700  007968  6E08               	movwf	(lcd_str@str+1)^0,c
  3701  00796A  ECC0  F02D         	call	_lcd_str	;wreg free
  3702                           
  3703                           ;main.c: 661:                 lcdPosition(3, 0);
  3704  00796E  0E00               	movlw	0
  3705  007970  6E09               	movwf	lcdPosition@coluna^0,c
  3706  007972  0E03               	movlw	3
  3707  007974  EC92  F02E         	call	_lcdPosition
  3708  007978                     
  3709                           ;main.c: 662:                 lcd_str("3- 700ml    R$12");
  3710  007978  0E04               	movlw	low STR_15
  3711  00797A  6E07               	movwf	lcd_str@str^0,c
  3712  00797C  0E7F               	movlw	high STR_15
  3713  00797E  6E08               	movwf	(lcd_str@str+1)^0,c
  3714  007980  ECC0  F02D         	call	_lcd_str	;wreg free
  3715  007984                     l4246:
  3716                           
  3717                           ;main.c: 664:                     kpDebounce();
  3718  007984  ECED  F02F         	call	_kpDebounce	;wreg free
  3719  007988                     
  3720                           ;main.c: 665:                     if (kpRead() != tecla) {
  3721  007988  EC2D  F02D         	call	_kpRead	;wreg free
  3722  00798C  5030               	movf	main@tecla^0,w,c
  3723  00798E  1801               	xorwf	?_kpRead^0,w,c
  3724  007990  E109               	bnz	u2580
  3725  007992  5031               	movf	(main@tecla+1)^0,w,c
  3726  007994  1802               	xorwf	(?_kpRead+1)^0,w,c
  3727  007996  B4D8               	btfsc	status,2,c
  3728  007998  EFD0  F03C         	goto	u2581
  3729  00799C  EFD2  F03C         	goto	u2580
  3730  0079A0                     u2581:
  3731  0079A0  EFC2  F03C         	goto	l4246
  3732  0079A4                     u2580:
  3733  0079A4                     
  3734                           ;main.c: 666:                         tecla = kpRead();
  3735  0079A4  EC2D  F02D         	call	_kpRead	;wreg free
  3736  0079A8  C001  F030         	movff	?_kpRead,main@tecla
  3737  0079AC  C002  F031         	movff	?_kpRead+1,main@tecla+1
  3738  0079B0                     
  3739                           ;main.c: 667:                         if (((tecla) & (1<<(3)))) {
  3740  0079B0  A630               	btfss	main@tecla^0,3,c
  3741  0079B2  EFDD  F03C         	goto	u2591
  3742  0079B6  EFDF  F03C         	goto	u2590
  3743  0079BA                     u2591:
  3744  0079BA  EFB5  F03D         	goto	l151
  3745  0079BE                     u2590:
  3746  0079BE                     
  3747                           ;main.c: 668:                             lcd_cmd(0x01);
  3748  0079BE  0E01               	movlw	1
  3749  0079C0  EC5C  F02D         	call	_lcd_cmd
  3750                           
  3751                           ;main.c: 669:                             lcdPosition(0, 0);
  3752  0079C4  0E00               	movlw	0
  3753  0079C6  6E09               	movwf	lcdPosition@coluna^0,c
  3754  0079C8  0E00               	movlw	0
  3755  0079CA  EC92  F02E         	call	_lcdPosition
  3756  0079CE                     
  3757                           ;main.c: 670:                             lcd_str("Seu copo esta");
  3758  0079CE  0E52               	movlw	low STR_16
  3759  0079D0  6E07               	movwf	lcd_str@str^0,c
  3760  0079D2  0E7F               	movlw	high STR_16
  3761  0079D4  6E08               	movwf	(lcd_str@str+1)^0,c
  3762  0079D6  ECC0  F02D         	call	_lcd_str	;wreg free
  3763  0079DA                     
  3764                           ;main.c: 671:                             lcdPosition(1, 0);
  3765  0079DA  0E00               	movlw	0
  3766  0079DC  6E09               	movwf	lcdPosition@coluna^0,c
  3767  0079DE  0E01               	movlw	1
  3768  0079E0  EC92  F02E         	call	_lcdPosition
  3769                           
  3770                           ;main.c: 672:                             lcd_str("enchendo!");
  3771  0079E4  0EA6               	movlw	low STR_17
  3772  0079E6  6E07               	movwf	lcd_str@str^0,c
  3773  0079E8  0E7F               	movlw	high STR_17
  3774  0079EA  6E08               	movwf	(lcd_str@str+1)^0,c
  3775  0079EC  ECC0  F02D         	call	_lcd_str	;wreg free
  3776  0079F0                     
  3777                           ;main.c: 673:                             ligarCooler();
  3778  0079F0  EC24  F02D         	call	_ligarCooler	;wreg free
  3779  0079F4                     
  3780                           ;main.c: 674:                             atraso_ms(5000);
  3781  0079F4  0E13               	movlw	19
  3782  0079F6  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3783  0079F8  0E88               	movlw	136
  3784  0079FA  6E01               	movwf	atraso_ms@valor^0,c
  3785  0079FC  ECA1  F02D         	call	_atraso_ms	;wreg free
  3786  007A00                     
  3787                           ;main.c: 675:                             desligarCooler();
  3788  007A00  EC1C  F02D         	call	_desligarCooler	;wreg free
  3789  007A04                     
  3790                           ;main.c: 676:                             lcd_cmd(0x01);
  3791  007A04  0E01               	movlw	1
  3792  007A06  EC5C  F02D         	call	_lcd_cmd
  3793  007A0A                     
  3794                           ;main.c: 677:                             lcdPosition(0, 0);
  3795  007A0A  0E00               	movlw	0
  3796  007A0C  6E09               	movwf	lcdPosition@coluna^0,c
  3797  007A0E  0E00               	movlw	0
  3798  007A10  EC92  F02E         	call	_lcdPosition
  3799  007A14                     
  3800                           ;main.c: 678:                             lcd_str("Valor no display");
  3801  007A14  0E15               	movlw	low STR_18
  3802  007A16  6E07               	movwf	lcd_str@str^0,c
  3803  007A18  0E7F               	movlw	high STR_18
  3804  007A1A  6E08               	movwf	(lcd_str@str+1)^0,c
  3805  007A1C  ECC0  F02D         	call	_lcd_str	;wreg free
  3806                           
  3807                           ;main.c: 679:                             lcdPosition(2, 0);
  3808  007A20  0E00               	movlw	0
  3809  007A22  6E09               	movwf	lcdPosition@coluna^0,c
  3810  007A24  0E02               	movlw	2
  3811  007A26  EC92  F02E         	call	_lcdPosition
  3812  007A2A                     
  3813                           ;main.c: 680:                             lcd_str("0- Pagar");
  3814  007A2A  0EBA               	movlw	low STR_19
  3815  007A2C  6E07               	movwf	lcd_str@str^0,c
  3816  007A2E  0E7F               	movlw	high STR_19
  3817  007A30  6E08               	movwf	(lcd_str@str+1)^0,c
  3818  007A32  ECC0  F02D         	call	_lcd_str	;wreg free
  3819  007A36                     
  3820                           ;main.c: 681:                             ssdInit();
  3821  007A36  EC3B  F02E         	call	_ssdInit	;wreg free
  3822  007A3A                     
  3823                           ;main.c: 682:                             for (i = 0; i < 3000; i++) {
  3824  007A3A  0E00               	movlw	0
  3825  007A3C  6E2F               	movwf	(main@i+1)^0,c
  3826  007A3E  0E00               	movlw	0
  3827  007A40  6E2E               	movwf	main@i^0,c
  3828  007A42                     l4282:
  3829                           
  3830                           ;main.c: 683:                                 ssdDigit(0, 2);
  3831  007A42  0E02               	movlw	2
  3832  007A44  6E01               	movwf	ssdDigit@pos^0,c
  3833  007A46  0E00               	movlw	0
  3834  007A48  EC66  F02E         	call	_ssdDigit
  3835                           
  3836                           ;main.c: 684:                                 ssdDigit(7, 3);
  3837  007A4C  0E03               	movlw	3
  3838  007A4E  6E01               	movwf	ssdDigit@pos^0,c
  3839  007A50  0E07               	movlw	7
  3840  007A52  EC66  F02E         	call	_ssdDigit
  3841  007A56                     
  3842                           ;main.c: 685:                                 ssdUpdate();
  3843  007A56  EC45  F02F         	call	_ssdUpdate	;wreg free
  3844  007A5A                     
  3845                           ;main.c: 686:                                 atraso_ms(2);
  3846  007A5A  0E00               	movlw	0
  3847  007A5C  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3848  007A5E  0E02               	movlw	2
  3849  007A60  6E01               	movwf	atraso_ms@valor^0,c
  3850  007A62  ECA1  F02D         	call	_atraso_ms	;wreg free
  3851  007A66                     
  3852                           ;main.c: 687:                             }
  3853  007A66  4A2E               	infsnz	main@i^0,f,c
  3854  007A68  2A2F               	incf	(main@i+1)^0,f,c
  3855  007A6A  0EB8               	movlw	184
  3856  007A6C  5C2E               	subwf	main@i^0,w,c
  3857  007A6E  0E0B               	movlw	11
  3858  007A70  582F               	subwfb	(main@i+1)^0,w,c
  3859  007A72  A0D8               	btfss	status,0,c
  3860  007A74  EF3E  F03D         	goto	u2601
  3861  007A78  EF40  F03D         	goto	u2600
  3862  007A7C                     u2601:
  3863  007A7C  EF21  F03D         	goto	l4282
  3864  007A80                     u2600:
  3865  007A80                     
  3866                           ;main.c: 688:                             desligaDisplays();
  3867  007A80  ECE8  F02D         	call	_desligaDisplays	;wreg free
  3868  007A84                     l4294:
  3869                           
  3870                           ;main.c: 691:                                 kpDebounce();
  3871  007A84  ECED  F02F         	call	_kpDebounce	;wreg free
  3872  007A88                     
  3873                           ;main.c: 692:                                 if (kpRead() != tecla) {
  3874  007A88  EC2D  F02D         	call	_kpRead	;wreg free
  3875  007A8C  5030               	movf	main@tecla^0,w,c
  3876  007A8E  1801               	xorwf	?_kpRead^0,w,c
  3877  007A90  E109               	bnz	u2610
  3878  007A92  5031               	movf	(main@tecla+1)^0,w,c
  3879  007A94  1802               	xorwf	(?_kpRead+1)^0,w,c
  3880  007A96  B4D8               	btfsc	status,2,c
  3881  007A98  EF50  F03D         	goto	u2611
  3882  007A9C  EF52  F03D         	goto	u2610
  3883  007AA0                     u2611:
  3884  007AA0  EF42  F03D         	goto	l4294
  3885  007AA4                     u2610:
  3886  007AA4                     
  3887                           ;main.c: 693:                                     tecla = kpRead();
  3888  007AA4  EC2D  F02D         	call	_kpRead	;wreg free
  3889  007AA8  C001  F030         	movff	?_kpRead,main@tecla
  3890  007AAC  C002  F031         	movff	?_kpRead+1,main@tecla+1
  3891  007AB0                     
  3892                           ;main.c: 694:                                     if (((tecla) & (1<<(4)))) {
  3893  007AB0  A830               	btfss	main@tecla^0,4,c
  3894  007AB2  EF5D  F03D         	goto	u2621
  3895  007AB6  EF5F  F03D         	goto	u2620
  3896  007ABA                     u2621:
  3897  007ABA  EF42  F03D         	goto	l4294
  3898  007ABE                     u2620:
  3899  007ABE                     
  3900                           ;main.c: 695:                                         lcd_cmd(0x01);
  3901  007ABE  0E01               	movlw	1
  3902  007AC0  EC5C  F02D         	call	_lcd_cmd
  3903                           
  3904                           ;main.c: 696:                                         lcdPosition(0, 0);
  3905  007AC4  0E00               	movlw	0
  3906  007AC6  6E09               	movwf	lcdPosition@coluna^0,c
  3907  007AC8  0E00               	movlw	0
  3908  007ACA  EC92  F02E         	call	_lcdPosition
  3909  007ACE                     
  3910                           ;main.c: 697:                                         lcd_str("Carregando...");
  3911  007ACE  0E44               	movlw	low STR_20
  3912  007AD0  6E07               	movwf	lcd_str@str^0,c
  3913  007AD2  0E7F               	movlw	high STR_20
  3914  007AD4  6E08               	movwf	(lcd_str@str+1)^0,c
  3915  007AD6  ECC0  F02D         	call	_lcd_str	;wreg free
  3916  007ADA                     
  3917                           ;main.c: 698:                                         atraso_ms(5000);
  3918  007ADA  0E13               	movlw	19
  3919  007ADC  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3920  007ADE  0E88               	movlw	136
  3921  007AE0  6E01               	movwf	atraso_ms@valor^0,c
  3922  007AE2  ECA1  F02D         	call	_atraso_ms	;wreg free
  3923  007AE6                     
  3924                           ;main.c: 699:                                         lcd_cmd(0x01);
  3925  007AE6  0E01               	movlw	1
  3926  007AE8  EC5C  F02D         	call	_lcd_cmd
  3927  007AEC                     
  3928                           ;main.c: 700:                                         lcdPosition(0, 0);
  3929  007AEC  0E00               	movlw	0
  3930  007AEE  6E09               	movwf	lcdPosition@coluna^0,c
  3931  007AF0  0E00               	movlw	0
  3932  007AF2  EC92  F02E         	call	_lcdPosition
  3933                           
  3934                           ;main.c: 701:                                         lcd_str("Aprovado!");
  3935  007AF6  0E9C               	movlw	low STR_21
  3936  007AF8  6E07               	movwf	lcd_str@str^0,c
  3937  007AFA  0E7F               	movlw	high STR_21
  3938  007AFC  6E08               	movwf	(lcd_str@str+1)^0,c
  3939  007AFE  ECC0  F02D         	call	_lcd_str	;wreg free
  3940  007B02                     
  3941                           ;main.c: 702:                                         ligaRele1();
  3942  007B02  EC16  F02D         	call	_ligaRele1	;wreg free
  3943  007B06                     
  3944                           ;main.c: 703:                                         ligaRele2();
  3945  007B06  EC19  F02D         	call	_ligaRele2	;wreg free
  3946  007B0A                     
  3947                           ;main.c: 704:                                         atraso_ms(5000);
  3948  007B0A  0E13               	movlw	19
  3949  007B0C  6E02               	movwf	(atraso_ms@valor+1)^0,c
  3950  007B0E  0E88               	movlw	136
  3951  007B10  6E01               	movwf	atraso_ms@valor^0,c
  3952  007B12  ECA1  F02D         	call	_atraso_ms	;wreg free
  3953  007B16                     
  3954                           ;main.c: 705:                                         desligaRele1();
  3955  007B16  EC10  F02D         	call	_desligaRele1	;wreg free
  3956  007B1A                     
  3957                           ;main.c: 706:                                         desligaRele2();
  3958  007B1A  EC13  F02D         	call	_desligaRele2	;wreg free
  3959  007B1E                     
  3960                           ;main.c: 707:                                         lcd_cmd(0x01);
  3961  007B1E  0E01               	movlw	1
  3962  007B20  EC5C  F02D         	call	_lcd_cmd
  3963  007B24                     
  3964                           ;main.c: 708:                                         lcdPosition(0, 0);
  3965  007B24  0E00               	movlw	0
  3966  007B26  6E09               	movwf	lcdPosition@coluna^0,c
  3967  007B28  0E00               	movlw	0
  3968  007B2A  EC92  F02E         	call	_lcdPosition
  3969  007B2E                     
  3970                           ;main.c: 709:                                         lcd_str("Volte sempre!");
  3971  007B2E  0E36               	movlw	low STR_22
  3972  007B30  6E07               	movwf	lcd_str@str^0,c
  3973  007B32  0E7F               	movlw	high STR_22
  3974  007B34  6E08               	movwf	(lcd_str@str+1)^0,c
  3975  007B36  ECC0  F02D         	call	_lcd_str	;wreg free
  3976                           
  3977                           ;main.c: 710:                                         lcdPosition(2, 0);
  3978  007B3A  0E00               	movlw	0
  3979  007B3C  6E09               	movwf	lcdPosition@coluna^0,c
  3980  007B3E  0E02               	movlw	2
  3981  007B40  EC92  F02E         	call	_lcdPosition
  3982  007B44                     
  3983                           ;main.c: 711:                                         lcd_str("Outro pedido");
  3984  007B44  0E6E               	movlw	low STR_23
  3985  007B46  6E07               	movwf	lcd_str@str^0,c
  3986  007B48  0E7F               	movlw	high STR_23
  3987  007B4A  6E08               	movwf	(lcd_str@str+1)^0,c
  3988  007B4C  ECC0  F02D         	call	_lcd_str	;wreg free
  3989  007B50                     
  3990                           ;main.c: 712:                                         lcdPosition(3, 0);
  3991  007B50  0E00               	movlw	0
  3992  007B52  6E09               	movwf	lcdPosition@coluna^0,c
  3993  007B54  0E03               	movlw	3
  3994  007B56  EC92  F02E         	call	_lcdPosition
  3995                           
  3996                           ;main.c: 713:                                         lcd_str("no Reset");
  3997  007B5A  0ED5               	movlw	low STR_24
  3998  007B5C  6E07               	movwf	lcd_str@str^0,c
  3999  007B5E  0E7F               	movlw	high STR_24
  4000  007B60  6E08               	movwf	(lcd_str@str+1)^0,c
  4001  007B62  ECC0  F02D         	call	_lcd_str	;wreg free
  4002  007B66  EF42  F03D         	goto	l4294
  4003  007B6A                     l151:
  4004                           
  4005                           ;main.c: 718:                         if (((tecla) & (1<<(7)))) {
  4006  007B6A  AE30               	btfss	main@tecla^0,7,c
  4007  007B6C  EFBA  F03D         	goto	u2631
  4008  007B70  EFBC  F03D         	goto	u2630
  4009  007B74                     u2631:
  4010  007B74  EF92  F03E         	goto	l158
  4011  007B78                     u2630:
  4012  007B78                     
  4013                           ;main.c: 719:                             lcd_cmd(0x01);
  4014  007B78  0E01               	movlw	1
  4015  007B7A  EC5C  F02D         	call	_lcd_cmd
  4016                           
  4017                           ;main.c: 720:                             lcdPosition(0, 0);
  4018  007B7E  0E00               	movlw	0
  4019  007B80  6E09               	movwf	lcdPosition@coluna^0,c
  4020  007B82  0E00               	movlw	0
  4021  007B84  EC92  F02E         	call	_lcdPosition
  4022  007B88                     
  4023                           ;main.c: 721:                             lcd_str("Seu copo esta");
  4024  007B88  0E52               	movlw	low STR_16
  4025  007B8A  6E07               	movwf	lcd_str@str^0,c
  4026  007B8C  0E7F               	movlw	high STR_16
  4027  007B8E  6E08               	movwf	(lcd_str@str+1)^0,c
  4028  007B90  ECC0  F02D         	call	_lcd_str	;wreg free
  4029  007B94                     
  4030                           ;main.c: 722:                             lcdPosition(1, 0);
  4031  007B94  0E00               	movlw	0
  4032  007B96  6E09               	movwf	lcdPosition@coluna^0,c
  4033  007B98  0E01               	movlw	1
  4034  007B9A  EC92  F02E         	call	_lcdPosition
  4035                           
  4036                           ;main.c: 723:                             lcd_str("enchendo!");
  4037  007B9E  0EA6               	movlw	low STR_17
  4038  007BA0  6E07               	movwf	lcd_str@str^0,c
  4039  007BA2  0E7F               	movlw	high STR_17
  4040  007BA4  6E08               	movwf	(lcd_str@str+1)^0,c
  4041  007BA6  ECC0  F02D         	call	_lcd_str	;wreg free
  4042  007BAA                     
  4043                           ;main.c: 724:                             ligarCooler();
  4044  007BAA  EC24  F02D         	call	_ligarCooler	;wreg free
  4045  007BAE                     
  4046                           ;main.c: 725:                             atraso_ms(5000);
  4047  007BAE  0E13               	movlw	19
  4048  007BB0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4049  007BB2  0E88               	movlw	136
  4050  007BB4  6E01               	movwf	atraso_ms@valor^0,c
  4051  007BB6  ECA1  F02D         	call	_atraso_ms	;wreg free
  4052  007BBA                     
  4053                           ;main.c: 726:                             desligarCooler();
  4054  007BBA  EC1C  F02D         	call	_desligarCooler	;wreg free
  4055  007BBE                     
  4056                           ;main.c: 727:                             lcd_cmd(0x01);
  4057  007BBE  0E01               	movlw	1
  4058  007BC0  EC5C  F02D         	call	_lcd_cmd
  4059  007BC4                     
  4060                           ;main.c: 728:                             lcdPosition(0, 0);
  4061  007BC4  0E00               	movlw	0
  4062  007BC6  6E09               	movwf	lcdPosition@coluna^0,c
  4063  007BC8  0E00               	movlw	0
  4064  007BCA  EC92  F02E         	call	_lcdPosition
  4065  007BCE                     
  4066                           ;main.c: 729:                             lcd_str("Valor no display");
  4067  007BCE  0E15               	movlw	low STR_18
  4068  007BD0  6E07               	movwf	lcd_str@str^0,c
  4069  007BD2  0E7F               	movlw	high STR_18
  4070  007BD4  6E08               	movwf	(lcd_str@str+1)^0,c
  4071  007BD6  ECC0  F02D         	call	_lcd_str	;wreg free
  4072                           
  4073                           ;main.c: 730:                             lcdPosition(2, 0);
  4074  007BDA  0E00               	movlw	0
  4075  007BDC  6E09               	movwf	lcdPosition@coluna^0,c
  4076  007BDE  0E02               	movlw	2
  4077  007BE0  EC92  F02E         	call	_lcdPosition
  4078  007BE4                     
  4079                           ;main.c: 731:                             lcd_str("0- Pagar");
  4080  007BE4  0EBA               	movlw	low STR_19
  4081  007BE6  6E07               	movwf	lcd_str@str^0,c
  4082  007BE8  0E7F               	movlw	high STR_19
  4083  007BEA  6E08               	movwf	(lcd_str@str+1)^0,c
  4084  007BEC  ECC0  F02D         	call	_lcd_str	;wreg free
  4085  007BF0                     
  4086                           ;main.c: 732:                             ssdInit();
  4087  007BF0  EC3B  F02E         	call	_ssdInit	;wreg free
  4088  007BF4                     
  4089                           ;main.c: 733:                             for (i = 0; i < 3000; i++) {
  4090  007BF4  0E00               	movlw	0
  4091  007BF6  6E2F               	movwf	(main@i+1)^0,c
  4092  007BF8  0E00               	movlw	0
  4093  007BFA  6E2E               	movwf	main@i^0,c
  4094  007BFC                     l4360:
  4095                           
  4096                           ;main.c: 734:                                 ssdDigit(1, 2);
  4097  007BFC  0E02               	movlw	2
  4098  007BFE  6E01               	movwf	ssdDigit@pos^0,c
  4099  007C00  0E01               	movlw	1
  4100  007C02  EC66  F02E         	call	_ssdDigit
  4101                           
  4102                           ;main.c: 735:                                 ssdDigit(0, 3);
  4103  007C06  0E03               	movlw	3
  4104  007C08  6E01               	movwf	ssdDigit@pos^0,c
  4105  007C0A  0E00               	movlw	0
  4106  007C0C  EC66  F02E         	call	_ssdDigit
  4107  007C10                     
  4108                           ;main.c: 736:                                 ssdUpdate();
  4109  007C10  EC45  F02F         	call	_ssdUpdate	;wreg free
  4110  007C14                     
  4111                           ;main.c: 737:                                 atraso_ms(2);
  4112  007C14  0E00               	movlw	0
  4113  007C16  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4114  007C18  0E02               	movlw	2
  4115  007C1A  6E01               	movwf	atraso_ms@valor^0,c
  4116  007C1C  ECA1  F02D         	call	_atraso_ms	;wreg free
  4117  007C20                     
  4118                           ;main.c: 738:                             }
  4119  007C20  4A2E               	infsnz	main@i^0,f,c
  4120  007C22  2A2F               	incf	(main@i+1)^0,f,c
  4121  007C24  0EB8               	movlw	184
  4122  007C26  5C2E               	subwf	main@i^0,w,c
  4123  007C28  0E0B               	movlw	11
  4124  007C2A  582F               	subwfb	(main@i+1)^0,w,c
  4125  007C2C  A0D8               	btfss	status,0,c
  4126  007C2E  EF1B  F03E         	goto	u2641
  4127  007C32  EF1D  F03E         	goto	u2640
  4128  007C36                     u2641:
  4129  007C36  EFFE  F03D         	goto	l4360
  4130  007C3A                     u2640:
  4131  007C3A                     
  4132                           ;main.c: 739:                             desligaDisplays();
  4133  007C3A  ECE8  F02D         	call	_desligaDisplays	;wreg free
  4134  007C3E                     l4372:
  4135                           
  4136                           ;main.c: 742:                                 kpDebounce();
  4137  007C3E  ECED  F02F         	call	_kpDebounce	;wreg free
  4138  007C42                     
  4139                           ;main.c: 743:                                 if (kpRead() != tecla) {
  4140  007C42  EC2D  F02D         	call	_kpRead	;wreg free
  4141  007C46  5030               	movf	main@tecla^0,w,c
  4142  007C48  1801               	xorwf	?_kpRead^0,w,c
  4143  007C4A  E109               	bnz	u2650
  4144  007C4C  5031               	movf	(main@tecla+1)^0,w,c
  4145  007C4E  1802               	xorwf	(?_kpRead+1)^0,w,c
  4146  007C50  B4D8               	btfsc	status,2,c
  4147  007C52  EF2D  F03E         	goto	u2651
  4148  007C56  EF2F  F03E         	goto	u2650
  4149  007C5A                     u2651:
  4150  007C5A  EF1F  F03E         	goto	l4372
  4151  007C5E                     u2650:
  4152  007C5E                     
  4153                           ;main.c: 744:                                     tecla = kpRead();
  4154  007C5E  EC2D  F02D         	call	_kpRead	;wreg free
  4155  007C62  C001  F030         	movff	?_kpRead,main@tecla
  4156  007C66  C002  F031         	movff	?_kpRead+1,main@tecla+1
  4157  007C6A                     
  4158                           ;main.c: 745:                                     if (((tecla) & (1<<(4)))) {
  4159  007C6A  A830               	btfss	main@tecla^0,4,c
  4160  007C6C  EF3A  F03E         	goto	u2661
  4161  007C70  EF3C  F03E         	goto	u2660
  4162  007C74                     u2661:
  4163  007C74  EF1F  F03E         	goto	l4372
  4164  007C78                     u2660:
  4165  007C78                     
  4166                           ;main.c: 746:                                         lcd_cmd(0x01);
  4167  007C78  0E01               	movlw	1
  4168  007C7A  EC5C  F02D         	call	_lcd_cmd
  4169                           
  4170                           ;main.c: 747:                                         lcdPosition(0, 0);
  4171  007C7E  0E00               	movlw	0
  4172  007C80  6E09               	movwf	lcdPosition@coluna^0,c
  4173  007C82  0E00               	movlw	0
  4174  007C84  EC92  F02E         	call	_lcdPosition
  4175  007C88                     
  4176                           ;main.c: 748:                                         lcd_str("Carregando...");
  4177  007C88  0E44               	movlw	low STR_20
  4178  007C8A  6E07               	movwf	lcd_str@str^0,c
  4179  007C8C  0E7F               	movlw	high STR_20
  4180  007C8E  6E08               	movwf	(lcd_str@str+1)^0,c
  4181  007C90  ECC0  F02D         	call	_lcd_str	;wreg free
  4182  007C94                     
  4183                           ;main.c: 749:                                         atraso_ms(5000);
  4184  007C94  0E13               	movlw	19
  4185  007C96  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4186  007C98  0E88               	movlw	136
  4187  007C9A  6E01               	movwf	atraso_ms@valor^0,c
  4188  007C9C  ECA1  F02D         	call	_atraso_ms	;wreg free
  4189  007CA0                     
  4190                           ;main.c: 750:                                         lcd_cmd(0x01);
  4191  007CA0  0E01               	movlw	1
  4192  007CA2  EC5C  F02D         	call	_lcd_cmd
  4193  007CA6                     
  4194                           ;main.c: 751:                                         lcdPosition(0, 0);
  4195  007CA6  0E00               	movlw	0
  4196  007CA8  6E09               	movwf	lcdPosition@coluna^0,c
  4197  007CAA  0E00               	movlw	0
  4198  007CAC  EC92  F02E         	call	_lcdPosition
  4199                           
  4200                           ;main.c: 752:                                         lcd_str("Aprovado!");
  4201  007CB0  0E9C               	movlw	low STR_21
  4202  007CB2  6E07               	movwf	lcd_str@str^0,c
  4203  007CB4  0E7F               	movlw	high STR_21
  4204  007CB6  6E08               	movwf	(lcd_str@str+1)^0,c
  4205  007CB8  ECC0  F02D         	call	_lcd_str	;wreg free
  4206  007CBC                     
  4207                           ;main.c: 753:                                         ligaRele1();
  4208  007CBC  EC16  F02D         	call	_ligaRele1	;wreg free
  4209  007CC0                     
  4210                           ;main.c: 754:                                         ligaRele2();
  4211  007CC0  EC19  F02D         	call	_ligaRele2	;wreg free
  4212  007CC4                     
  4213                           ;main.c: 755:                                         atraso_ms(5000);
  4214  007CC4  0E13               	movlw	19
  4215  007CC6  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4216  007CC8  0E88               	movlw	136
  4217  007CCA  6E01               	movwf	atraso_ms@valor^0,c
  4218  007CCC  ECA1  F02D         	call	_atraso_ms	;wreg free
  4219  007CD0                     
  4220                           ;main.c: 756:                                         desligaRele1();
  4221  007CD0  EC10  F02D         	call	_desligaRele1	;wreg free
  4222  007CD4                     
  4223                           ;main.c: 757:                                         desligaRele2();
  4224  007CD4  EC13  F02D         	call	_desligaRele2	;wreg free
  4225  007CD8                     
  4226                           ;main.c: 758:                                         lcd_cmd(0x01);
  4227  007CD8  0E01               	movlw	1
  4228  007CDA  EC5C  F02D         	call	_lcd_cmd
  4229  007CDE                     
  4230                           ;main.c: 759:                                         lcdPosition(0, 0);
  4231  007CDE  0E00               	movlw	0
  4232  007CE0  6E09               	movwf	lcdPosition@coluna^0,c
  4233  007CE2  0E00               	movlw	0
  4234  007CE4  EC92  F02E         	call	_lcdPosition
  4235  007CE8                     
  4236                           ;main.c: 760:                                         lcd_str("Volte sempre!");
  4237  007CE8  0E36               	movlw	low STR_22
  4238  007CEA  6E07               	movwf	lcd_str@str^0,c
  4239  007CEC  0E7F               	movlw	high STR_22
  4240  007CEE  6E08               	movwf	(lcd_str@str+1)^0,c
  4241  007CF0  ECC0  F02D         	call	_lcd_str	;wreg free
  4242                           
  4243                           ;main.c: 761:                                         lcdPosition(2, 0);
  4244  007CF4  0E00               	movlw	0
  4245  007CF6  6E09               	movwf	lcdPosition@coluna^0,c
  4246  007CF8  0E02               	movlw	2
  4247  007CFA  EC92  F02E         	call	_lcdPosition
  4248  007CFE                     
  4249                           ;main.c: 762:                                         lcd_str("Outro pedido");
  4250  007CFE  0E6E               	movlw	low STR_23
  4251  007D00  6E07               	movwf	lcd_str@str^0,c
  4252  007D02  0E7F               	movlw	high STR_23
  4253  007D04  6E08               	movwf	(lcd_str@str+1)^0,c
  4254  007D06  ECC0  F02D         	call	_lcd_str	;wreg free
  4255  007D0A                     
  4256                           ;main.c: 763:                                         lcdPosition(3, 0);
  4257  007D0A  0E00               	movlw	0
  4258  007D0C  6E09               	movwf	lcdPosition@coluna^0,c
  4259  007D0E  0E03               	movlw	3
  4260  007D10  EC92  F02E         	call	_lcdPosition
  4261                           
  4262                           ;main.c: 764:                                         lcd_str("no Reset");
  4263  007D14  0ED5               	movlw	low STR_24
  4264  007D16  6E07               	movwf	lcd_str@str^0,c
  4265  007D18  0E7F               	movlw	high STR_24
  4266  007D1A  6E08               	movwf	(lcd_str@str+1)^0,c
  4267  007D1C  ECC0  F02D         	call	_lcd_str	;wreg free
  4268  007D20  EF1F  F03E         	goto	l4372
  4269  007D24                     l158:
  4270                           
  4271                           ;main.c: 769:                         if (((tecla) & (1<<(2)))) {
  4272  007D24  A430               	btfss	main@tecla^0,2,c
  4273  007D26  EF97  F03E         	goto	u2671
  4274  007D2A  EF99  F03E         	goto	u2670
  4275  007D2E                     u2671:
  4276  007D2E  EFC2  F03C         	goto	l4246
  4277  007D32                     u2670:
  4278  007D32                     
  4279                           ;main.c: 770:                             lcd_cmd(0x01);
  4280  007D32  0E01               	movlw	1
  4281  007D34  EC5C  F02D         	call	_lcd_cmd
  4282                           
  4283                           ;main.c: 771:                             lcdPosition(0, 0);
  4284  007D38  0E00               	movlw	0
  4285  007D3A  6E09               	movwf	lcdPosition@coluna^0,c
  4286  007D3C  0E00               	movlw	0
  4287  007D3E  EC92  F02E         	call	_lcdPosition
  4288  007D42                     
  4289                           ;main.c: 772:                             lcd_str("Seu copo esta");
  4290  007D42  0E52               	movlw	low STR_16
  4291  007D44  6E07               	movwf	lcd_str@str^0,c
  4292  007D46  0E7F               	movlw	high STR_16
  4293  007D48  6E08               	movwf	(lcd_str@str+1)^0,c
  4294  007D4A  ECC0  F02D         	call	_lcd_str	;wreg free
  4295  007D4E                     
  4296                           ;main.c: 773:                             lcdPosition(1, 0);
  4297  007D4E  0E00               	movlw	0
  4298  007D50  6E09               	movwf	lcdPosition@coluna^0,c
  4299  007D52  0E01               	movlw	1
  4300  007D54  EC92  F02E         	call	_lcdPosition
  4301                           
  4302                           ;main.c: 774:                             lcd_str("enchendo!");
  4303  007D58  0EA6               	movlw	low STR_17
  4304  007D5A  6E07               	movwf	lcd_str@str^0,c
  4305  007D5C  0E7F               	movlw	high STR_17
  4306  007D5E  6E08               	movwf	(lcd_str@str+1)^0,c
  4307  007D60  ECC0  F02D         	call	_lcd_str	;wreg free
  4308  007D64                     
  4309                           ;main.c: 775:                             ligarCooler();
  4310  007D64  EC24  F02D         	call	_ligarCooler	;wreg free
  4311  007D68                     
  4312                           ;main.c: 776:                             atraso_ms(5000);
  4313  007D68  0E13               	movlw	19
  4314  007D6A  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4315  007D6C  0E88               	movlw	136
  4316  007D6E  6E01               	movwf	atraso_ms@valor^0,c
  4317  007D70  ECA1  F02D         	call	_atraso_ms	;wreg free
  4318  007D74                     
  4319                           ;main.c: 777:                             desligarCooler();
  4320  007D74  EC1C  F02D         	call	_desligarCooler	;wreg free
  4321  007D78                     
  4322                           ;main.c: 778:                             lcd_cmd(0x01);
  4323  007D78  0E01               	movlw	1
  4324  007D7A  EC5C  F02D         	call	_lcd_cmd
  4325  007D7E                     
  4326                           ;main.c: 779:                             lcdPosition(0, 0);
  4327  007D7E  0E00               	movlw	0
  4328  007D80  6E09               	movwf	lcdPosition@coluna^0,c
  4329  007D82  0E00               	movlw	0
  4330  007D84  EC92  F02E         	call	_lcdPosition
  4331  007D88                     
  4332                           ;main.c: 780:                             lcd_str("Valor no display");
  4333  007D88  0E15               	movlw	low STR_18
  4334  007D8A  6E07               	movwf	lcd_str@str^0,c
  4335  007D8C  0E7F               	movlw	high STR_18
  4336  007D8E  6E08               	movwf	(lcd_str@str+1)^0,c
  4337  007D90  ECC0  F02D         	call	_lcd_str	;wreg free
  4338                           
  4339                           ;main.c: 781:                             lcdPosition(2, 0);
  4340  007D94  0E00               	movlw	0
  4341  007D96  6E09               	movwf	lcdPosition@coluna^0,c
  4342  007D98  0E02               	movlw	2
  4343  007D9A  EC92  F02E         	call	_lcdPosition
  4344  007D9E                     
  4345                           ;main.c: 782:                             lcd_str("0- Pagar");
  4346  007D9E  0EBA               	movlw	low STR_19
  4347  007DA0  6E07               	movwf	lcd_str@str^0,c
  4348  007DA2  0E7F               	movlw	high STR_19
  4349  007DA4  6E08               	movwf	(lcd_str@str+1)^0,c
  4350  007DA6  ECC0  F02D         	call	_lcd_str	;wreg free
  4351  007DAA                     
  4352                           ;main.c: 783:                             ssdInit();
  4353  007DAA  EC3B  F02E         	call	_ssdInit	;wreg free
  4354  007DAE                     
  4355                           ;main.c: 784:                             for (i = 0; i < 3000; i++) {
  4356  007DAE  0E00               	movlw	0
  4357  007DB0  6E2F               	movwf	(main@i+1)^0,c
  4358  007DB2  0E00               	movlw	0
  4359  007DB4  6E2E               	movwf	main@i^0,c
  4360  007DB6                     l4438:
  4361                           
  4362                           ;main.c: 785:                                 ssdDigit(1, 2);
  4363  007DB6  0E02               	movlw	2
  4364  007DB8  6E01               	movwf	ssdDigit@pos^0,c
  4365  007DBA  0E01               	movlw	1
  4366  007DBC  EC66  F02E         	call	_ssdDigit
  4367                           
  4368                           ;main.c: 786:                                 ssdDigit(2, 3);
  4369  007DC0  0E03               	movlw	3
  4370  007DC2  6E01               	movwf	ssdDigit@pos^0,c
  4371  007DC4  0E02               	movlw	2
  4372  007DC6  EC66  F02E         	call	_ssdDigit
  4373  007DCA                     
  4374                           ;main.c: 787:                                 ssdUpdate();
  4375  007DCA  EC45  F02F         	call	_ssdUpdate	;wreg free
  4376  007DCE                     
  4377                           ;main.c: 788:                                 atraso_ms(2);
  4378  007DCE  0E00               	movlw	0
  4379  007DD0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4380  007DD2  0E02               	movlw	2
  4381  007DD4  6E01               	movwf	atraso_ms@valor^0,c
  4382  007DD6  ECA1  F02D         	call	_atraso_ms	;wreg free
  4383  007DDA                     
  4384                           ;main.c: 789:                             }
  4385  007DDA  4A2E               	infsnz	main@i^0,f,c
  4386  007DDC  2A2F               	incf	(main@i+1)^0,f,c
  4387  007DDE  0EB8               	movlw	184
  4388  007DE0  5C2E               	subwf	main@i^0,w,c
  4389  007DE2  0E0B               	movlw	11
  4390  007DE4  582F               	subwfb	(main@i+1)^0,w,c
  4391  007DE6  A0D8               	btfss	status,0,c
  4392  007DE8  EFF8  F03E         	goto	u2681
  4393  007DEC  EFFA  F03E         	goto	u2680
  4394  007DF0                     u2681:
  4395  007DF0  EFDB  F03E         	goto	l4438
  4396  007DF4                     u2680:
  4397  007DF4                     
  4398                           ;main.c: 790:                             desligaDisplays();
  4399  007DF4  ECE8  F02D         	call	_desligaDisplays	;wreg free
  4400  007DF8                     l4450:
  4401                           
  4402                           ;main.c: 793:                                 kpDebounce();
  4403  007DF8  ECED  F02F         	call	_kpDebounce	;wreg free
  4404  007DFC                     
  4405                           ;main.c: 794:                                 if (kpRead() != tecla) {
  4406  007DFC  EC2D  F02D         	call	_kpRead	;wreg free
  4407  007E00  5030               	movf	main@tecla^0,w,c
  4408  007E02  1801               	xorwf	?_kpRead^0,w,c
  4409  007E04  E109               	bnz	u2690
  4410  007E06  5031               	movf	(main@tecla+1)^0,w,c
  4411  007E08  1802               	xorwf	(?_kpRead+1)^0,w,c
  4412  007E0A  B4D8               	btfsc	status,2,c
  4413  007E0C  EF0A  F03F         	goto	u2691
  4414  007E10  EF0C  F03F         	goto	u2690
  4415  007E14                     u2691:
  4416  007E14  EFFC  F03E         	goto	l4450
  4417  007E18                     u2690:
  4418  007E18                     
  4419                           ;main.c: 795:                                     tecla = kpRead();
  4420  007E18  EC2D  F02D         	call	_kpRead	;wreg free
  4421  007E1C  C001  F030         	movff	?_kpRead,main@tecla
  4422  007E20  C002  F031         	movff	?_kpRead+1,main@tecla+1
  4423  007E24                     
  4424                           ;main.c: 796:                                     if (((tecla) & (1<<(4)))) {
  4425  007E24  A830               	btfss	main@tecla^0,4,c
  4426  007E26  EF17  F03F         	goto	u2701
  4427  007E2A  EF19  F03F         	goto	u2700
  4428  007E2E                     u2701:
  4429  007E2E  EFFC  F03E         	goto	l4450
  4430  007E32                     u2700:
  4431  007E32                     
  4432                           ;main.c: 797:                                         lcd_cmd(0x01);
  4433  007E32  0E01               	movlw	1
  4434  007E34  EC5C  F02D         	call	_lcd_cmd
  4435                           
  4436                           ;main.c: 798:                                         lcdPosition(0, 0);
  4437  007E38  0E00               	movlw	0
  4438  007E3A  6E09               	movwf	lcdPosition@coluna^0,c
  4439  007E3C  0E00               	movlw	0
  4440  007E3E  EC92  F02E         	call	_lcdPosition
  4441  007E42                     
  4442                           ;main.c: 799:                                         lcd_str("Carregando...");
  4443  007E42  0E44               	movlw	low STR_20
  4444  007E44  6E07               	movwf	lcd_str@str^0,c
  4445  007E46  0E7F               	movlw	high STR_20
  4446  007E48  6E08               	movwf	(lcd_str@str+1)^0,c
  4447  007E4A  ECC0  F02D         	call	_lcd_str	;wreg free
  4448  007E4E                     
  4449                           ;main.c: 800:                                         atraso_ms(5000);
  4450  007E4E  0E13               	movlw	19
  4451  007E50  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4452  007E52  0E88               	movlw	136
  4453  007E54  6E01               	movwf	atraso_ms@valor^0,c
  4454  007E56  ECA1  F02D         	call	_atraso_ms	;wreg free
  4455  007E5A                     
  4456                           ;main.c: 801:                                         lcd_cmd(0x01);
  4457  007E5A  0E01               	movlw	1
  4458  007E5C  EC5C  F02D         	call	_lcd_cmd
  4459  007E60                     
  4460                           ;main.c: 802:                                         lcdPosition(0, 0);
  4461  007E60  0E00               	movlw	0
  4462  007E62  6E09               	movwf	lcdPosition@coluna^0,c
  4463  007E64  0E00               	movlw	0
  4464  007E66  EC92  F02E         	call	_lcdPosition
  4465                           
  4466                           ;main.c: 803:                                         lcd_str("Aprovado!");
  4467  007E6A  0E9C               	movlw	low STR_21
  4468  007E6C  6E07               	movwf	lcd_str@str^0,c
  4469  007E6E  0E7F               	movlw	high STR_21
  4470  007E70  6E08               	movwf	(lcd_str@str+1)^0,c
  4471  007E72  ECC0  F02D         	call	_lcd_str	;wreg free
  4472  007E76                     
  4473                           ;main.c: 804:                                         ligaRele1();
  4474  007E76  EC16  F02D         	call	_ligaRele1	;wreg free
  4475  007E7A                     
  4476                           ;main.c: 805:                                         ligaRele2();
  4477  007E7A  EC19  F02D         	call	_ligaRele2	;wreg free
  4478  007E7E                     
  4479                           ;main.c: 806:                                         atraso_ms(5000);
  4480  007E7E  0E13               	movlw	19
  4481  007E80  6E02               	movwf	(atraso_ms@valor+1)^0,c
  4482  007E82  0E88               	movlw	136
  4483  007E84  6E01               	movwf	atraso_ms@valor^0,c
  4484  007E86  ECA1  F02D         	call	_atraso_ms	;wreg free
  4485  007E8A                     
  4486                           ;main.c: 807:                                         desligaRele1();
  4487  007E8A  EC10  F02D         	call	_desligaRele1	;wreg free
  4488  007E8E                     
  4489                           ;main.c: 808:                                         desligaRele2();
  4490  007E8E  EC13  F02D         	call	_desligaRele2	;wreg free
  4491  007E92                     
  4492                           ;main.c: 809:                                         lcd_cmd(0x01);
  4493  007E92  0E01               	movlw	1
  4494  007E94  EC5C  F02D         	call	_lcd_cmd
  4495  007E98                     
  4496                           ;main.c: 810:                                         lcdPosition(0, 0);
  4497  007E98  0E00               	movlw	0
  4498  007E9A  6E09               	movwf	lcdPosition@coluna^0,c
  4499  007E9C  0E00               	movlw	0
  4500  007E9E  EC92  F02E         	call	_lcdPosition
  4501  007EA2                     
  4502                           ;main.c: 811:                                         lcd_str("Volte sempre!");
  4503  007EA2  0E36               	movlw	low STR_22
  4504  007EA4  6E07               	movwf	lcd_str@str^0,c
  4505  007EA6  0E7F               	movlw	high STR_22
  4506  007EA8  6E08               	movwf	(lcd_str@str+1)^0,c
  4507  007EAA  ECC0  F02D         	call	_lcd_str	;wreg free
  4508                           
  4509                           ;main.c: 812:                                         lcdPosition(2, 0);
  4510  007EAE  0E00               	movlw	0
  4511  007EB0  6E09               	movwf	lcdPosition@coluna^0,c
  4512  007EB2  0E02               	movlw	2
  4513  007EB4  EC92  F02E         	call	_lcdPosition
  4514  007EB8                     
  4515                           ;main.c: 813:                                         lcd_str("Outro pedido");
  4516  007EB8  0E6E               	movlw	low STR_23
  4517  007EBA  6E07               	movwf	lcd_str@str^0,c
  4518  007EBC  0E7F               	movlw	high STR_23
  4519  007EBE  6E08               	movwf	(lcd_str@str+1)^0,c
  4520  007EC0  ECC0  F02D         	call	_lcd_str	;wreg free
  4521  007EC4                     
  4522                           ;main.c: 814:                                         lcdPosition(3, 0);
  4523  007EC4  0E00               	movlw	0
  4524  007EC6  6E09               	movwf	lcdPosition@coluna^0,c
  4525  007EC8  0E03               	movlw	3
  4526  007ECA  EC92  F02E         	call	_lcdPosition
  4527                           
  4528                           ;main.c: 815:                                         lcd_str("no Reset");
  4529  007ECE  0ED5               	movlw	low STR_24
  4530  007ED0  6E07               	movwf	lcd_str@str^0,c
  4531  007ED2  0E7F               	movlw	high STR_24
  4532  007ED4  6E08               	movwf	(lcd_str@str+1)^0,c
  4533  007ED6  ECC0  F02D         	call	_lcd_str	;wreg free
  4534  007EDA  EFFC  F03E         	goto	l4450
  4535  007EDE  EF00  F000         	goto	start
  4536  007EE2                     __end_of_main:
  4537                           	callstack 0
  4538                           
  4539 ;; *************** function _ssdUpdate *****************
  4540 ;; Defined at:
  4541 ;;		line 54 in file "ssd.c"
  4542 ;; Parameters:    Size  Location     Type
  4543 ;;		None
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;		None
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1    wreg      void 
  4548 ;; Registers used:
  4549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4555 ;;      Params:         0       0       0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0
  4557 ;;      Temps:          2       0       0       0       0       0       0
  4558 ;;      Totals:         2       0       0       0       0       0       0
  4559 ;;Total ram usage:        2 bytes
  4560 ;; Hardware stack levels used: 1
  4561 ;; Hardware stack levels required when called: 1
  4562 ;; This function calls:
  4563 ;;		_digitalWrite
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text1
  4570  005E8A                     __ptext1:
  4571                           	callstack 0
  4572  005E8A                     _ssdUpdate:
  4573                           	callstack 29
  4574  005E8A                     
  4575                           ;ssd.c: 58:     TRISD= 0x00;
  4576  005E8A  0E00               	movlw	0
  4577  005E8C  6E95               	movwf	149,c	;volatile
  4578  005E8E                     
  4579                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  4580  005E8E  0E00               	movlw	0
  4581  005E90  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4582  005E92  0E02               	movlw	2
  4583  005E94  6E01               	movwf	digitalWrite@pin^0,c
  4584  005E96  0E00               	movlw	0
  4585  005E98  6E04               	movwf	(digitalWrite@value+1)^0,c
  4586  005E9A  0E00               	movlw	0
  4587  005E9C  6E03               	movwf	digitalWrite@value^0,c
  4588  005E9E  ECAA  F030         	call	_digitalWrite	;wreg free
  4589  005EA2                     
  4590                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  4591  005EA2  0E00               	movlw	0
  4592  005EA4  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4593  005EA6  0E03               	movlw	3
  4594  005EA8  6E01               	movwf	digitalWrite@pin^0,c
  4595  005EAA  0E00               	movlw	0
  4596  005EAC  6E04               	movwf	(digitalWrite@value+1)^0,c
  4597  005EAE  0E00               	movlw	0
  4598  005EB0  6E03               	movwf	digitalWrite@value^0,c
  4599  005EB2  ECAA  F030         	call	_digitalWrite	;wreg free
  4600  005EB6                     
  4601                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  4602  005EB6  0E00               	movlw	0
  4603  005EB8  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4604  005EBA  0E04               	movlw	4
  4605  005EBC  6E01               	movwf	digitalWrite@pin^0,c
  4606  005EBE  0E00               	movlw	0
  4607  005EC0  6E04               	movwf	(digitalWrite@value+1)^0,c
  4608  005EC2  0E00               	movlw	0
  4609  005EC4  6E03               	movwf	digitalWrite@value^0,c
  4610  005EC6  ECAA  F030         	call	_digitalWrite	;wreg free
  4611  005ECA                     
  4612                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  4613  005ECA  0E00               	movlw	0
  4614  005ECC  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4615  005ECE  0E05               	movlw	5
  4616  005ED0  6E01               	movwf	digitalWrite@pin^0,c
  4617  005ED2  0E00               	movlw	0
  4618  005ED4  6E04               	movwf	(digitalWrite@value+1)^0,c
  4619  005ED6  0E00               	movlw	0
  4620  005ED8  6E03               	movwf	digitalWrite@value^0,c
  4621  005EDA  ECAA  F030         	call	_digitalWrite	;wreg free
  4622                           
  4623                           ;ssd.c: 66:     PORTD = 0x00;
  4624  005EDE  0E00               	movlw	0
  4625  005EE0  6E83               	movwf	131,c	;volatile
  4626                           
  4627                           ;ssd.c: 69:     switch (display)
  4628  005EE2  EFCF  F02F         	goto	l3396
  4629  005EE6                     l3368:
  4630                           
  4631                           ;ssd.c: 72:             PORTD = valor[v0];
  4632  005EE6  0EE3               	movlw	low _valor@ssd$F975
  4633  005EE8  245B               	addwf	_v0^0,w,c
  4634  005EEA  6EF6               	movwf	tblptrl,c
  4635  005EEC  6AF7               	clrf	tblptrh,c
  4636  005EEE  0E7E               	movlw	high _valor@ssd$F975
  4637  005EF0  22F7               	addwfc	tblptrh,f,c
  4638  005EF2                     	if	0	;There are less than 3 active tblptr bytes
  4639  005EF2                     	endif
  4640  005EF2  0008               	tblrd		*
  4641  005EF4  CFF5 FF83          	movff	tablat,3971	;volatile
  4642  005EF8                     
  4643                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  4644  005EF8  0E00               	movlw	0
  4645  005EFA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4646  005EFC  0E02               	movlw	2
  4647  005EFE  6E01               	movwf	digitalWrite@pin^0,c
  4648  005F00  0E00               	movlw	0
  4649  005F02  6E04               	movwf	(digitalWrite@value+1)^0,c
  4650  005F04  0E01               	movlw	1
  4651  005F06  6E03               	movwf	digitalWrite@value^0,c
  4652  005F08  ECAA  F030         	call	_digitalWrite	;wreg free
  4653  005F0C                     
  4654                           ;ssd.c: 74:             display = 1;
  4655  005F0C  0E01               	movlw	1
  4656  005F0E  6E5C               	movwf	_display^0,c
  4657                           
  4658                           ;ssd.c: 75:             break;
  4659  005F10  EFEC  F02F         	goto	l557
  4660  005F14                     l3374:
  4661                           
  4662                           ;ssd.c: 78:             PORTD = valor[v1];
  4663  005F14  0EE3               	movlw	low _valor@ssd$F975
  4664  005F16  245A               	addwf	_v1^0,w,c
  4665  005F18  6EF6               	movwf	tblptrl,c
  4666  005F1A  6AF7               	clrf	tblptrh,c
  4667  005F1C  0E7E               	movlw	high _valor@ssd$F975
  4668  005F1E  22F7               	addwfc	tblptrh,f,c
  4669  005F20                     	if	0	;There are less than 3 active tblptr bytes
  4670  005F20                     	endif
  4671  005F20  0008               	tblrd		*
  4672  005F22  CFF5 FF83          	movff	tablat,3971	;volatile
  4673  005F26                     
  4674                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  4675  005F26  0E00               	movlw	0
  4676  005F28  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4677  005F2A  0E03               	movlw	3
  4678  005F2C  6E01               	movwf	digitalWrite@pin^0,c
  4679  005F2E  0E00               	movlw	0
  4680  005F30  6E04               	movwf	(digitalWrite@value+1)^0,c
  4681  005F32  0E01               	movlw	1
  4682  005F34  6E03               	movwf	digitalWrite@value^0,c
  4683  005F36  ECAA  F030         	call	_digitalWrite	;wreg free
  4684  005F3A                     
  4685                           ;ssd.c: 80:             display = 2;
  4686  005F3A  0E02               	movlw	2
  4687  005F3C  6E5C               	movwf	_display^0,c
  4688                           
  4689                           ;ssd.c: 81:             break;
  4690  005F3E  EFEC  F02F         	goto	l557
  4691  005F42                     l3380:
  4692                           
  4693                           ;ssd.c: 84:             PORTD = valor[v2];
  4694  005F42  0EE3               	movlw	low _valor@ssd$F975
  4695  005F44  2459               	addwf	_v2^0,w,c
  4696  005F46  6EF6               	movwf	tblptrl,c
  4697  005F48  6AF7               	clrf	tblptrh,c
  4698  005F4A  0E7E               	movlw	high _valor@ssd$F975
  4699  005F4C  22F7               	addwfc	tblptrh,f,c
  4700  005F4E                     	if	0	;There are less than 3 active tblptr bytes
  4701  005F4E                     	endif
  4702  005F4E  0008               	tblrd		*
  4703  005F50  CFF5 FF83          	movff	tablat,3971	;volatile
  4704  005F54                     
  4705                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  4706  005F54  0E00               	movlw	0
  4707  005F56  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4708  005F58  0E04               	movlw	4
  4709  005F5A  6E01               	movwf	digitalWrite@pin^0,c
  4710  005F5C  0E00               	movlw	0
  4711  005F5E  6E04               	movwf	(digitalWrite@value+1)^0,c
  4712  005F60  0E01               	movlw	1
  4713  005F62  6E03               	movwf	digitalWrite@value^0,c
  4714  005F64  ECAA  F030         	call	_digitalWrite	;wreg free
  4715  005F68                     
  4716                           ;ssd.c: 86:             display = 3;
  4717  005F68  0E03               	movlw	3
  4718  005F6A  6E5C               	movwf	_display^0,c
  4719                           
  4720                           ;ssd.c: 87:             break;
  4721  005F6C  EFEC  F02F         	goto	l557
  4722  005F70                     l3386:
  4723                           
  4724                           ;ssd.c: 90:             PORTD = valor[v3];
  4725  005F70  0EE3               	movlw	low _valor@ssd$F975
  4726  005F72  2458               	addwf	_v3^0,w,c
  4727  005F74  6EF6               	movwf	tblptrl,c
  4728  005F76  6AF7               	clrf	tblptrh,c
  4729  005F78  0E7E               	movlw	high _valor@ssd$F975
  4730  005F7A  22F7               	addwfc	tblptrh,f,c
  4731  005F7C                     	if	0	;There are less than 3 active tblptr bytes
  4732  005F7C                     	endif
  4733  005F7C  0008               	tblrd		*
  4734  005F7E  CFF5 FF83          	movff	tablat,3971	;volatile
  4735  005F82                     
  4736                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  4737  005F82  0E00               	movlw	0
  4738  005F84  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4739  005F86  0E05               	movlw	5
  4740  005F88  6E01               	movwf	digitalWrite@pin^0,c
  4741  005F8A  0E00               	movlw	0
  4742  005F8C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4743  005F8E  0E01               	movlw	1
  4744  005F90  6E03               	movwf	digitalWrite@value^0,c
  4745  005F92  ECAA  F030         	call	_digitalWrite	;wreg free
  4746  005F96                     l3390:
  4747                           
  4748                           ;ssd.c: 92:             display = 0;
  4749  005F96  0E00               	movlw	0
  4750  005F98  6E5C               	movwf	_display^0,c
  4751                           
  4752                           ;ssd.c: 93:             break;
  4753  005F9A  EFEC  F02F         	goto	l557
  4754  005F9E                     l3396:
  4755  005F9E  505C               	movf	_display^0,w,c
  4756  005FA0  6E07               	movwf	??_ssdUpdate^0,c
  4757  005FA2  6A08               	clrf	(??_ssdUpdate+1)^0,c
  4758                           
  4759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4760                           ; Switch size 1, requested type "simple"
  4761                           ; Number of cases is 1, Range of values is 0 to 0
  4762                           ; switch strategies available:
  4763                           ; Name         Instructions Cycles
  4764                           ; simple_byte            4     3 (average)
  4765                           ;	Chosen strategy is simple_byte
  4766  005FA4  5008               	movf	(??_ssdUpdate+1)^0,w,c
  4767  005FA6  0A00               	xorlw	0	; case 0
  4768  005FA8  B4D8               	btfsc	status,2,c
  4769  005FAA  EFD9  F02F         	goto	l4504
  4770  005FAE  EFCB  F02F         	goto	l3390
  4771  005FB2                     l4504:
  4772                           
  4773                           ; Switch size 1, requested type "simple"
  4774                           ; Number of cases is 4, Range of values is 0 to 3
  4775                           ; switch strategies available:
  4776                           ; Name         Instructions Cycles
  4777                           ; simple_byte           13     7 (average)
  4778                           ;	Chosen strategy is simple_byte
  4779  005FB2  5007               	movf	??_ssdUpdate^0,w,c
  4780  005FB4  0A00               	xorlw	0	; case 0
  4781  005FB6  B4D8               	btfsc	status,2,c
  4782  005FB8  EF73  F02F         	goto	l3368
  4783  005FBC  0A01               	xorlw	1	; case 1
  4784  005FBE  B4D8               	btfsc	status,2,c
  4785  005FC0  EF8A  F02F         	goto	l3374
  4786  005FC4  0A03               	xorlw	3	; case 2
  4787  005FC6  B4D8               	btfsc	status,2,c
  4788  005FC8  EFA1  F02F         	goto	l3380
  4789  005FCC  0A01               	xorlw	1	; case 3
  4790  005FCE  B4D8               	btfsc	status,2,c
  4791  005FD0  EFB8  F02F         	goto	l3386
  4792  005FD4  EFCB  F02F         	goto	l3390
  4793  005FD8                     l557:
  4794  005FD8  0012               	return		;funcret
  4795  005FDA                     __end_of_ssdUpdate:
  4796                           	callstack 0
  4797                           
  4798 ;; *************** function _ssdInit *****************
  4799 ;; Defined at:
  4800 ;;		line 101 in file "ssd.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;		None
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;		None
  4805 ;; Return value:  Size  Location     Type
  4806 ;;                  1    wreg      void 
  4807 ;; Registers used:
  4808 ;;		wreg, status,2, status,0, cstack
  4809 ;; Tracked objects:
  4810 ;;		On entry : 0/0
  4811 ;;		On exit  : 0/0
  4812 ;;		Unchanged: 0/0
  4813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4814 ;;      Params:         0       0       0       0       0       0       0
  4815 ;;      Locals:         0       0       0       0       0       0       0
  4816 ;;      Temps:          0       0       0       0       0       0       0
  4817 ;;      Totals:         0       0       0       0       0       0       0
  4818 ;;Total ram usage:        0 bytes
  4819 ;; Hardware stack levels used: 1
  4820 ;; Hardware stack levels required when called: 1
  4821 ;; This function calls:
  4822 ;;		_pinMode
  4823 ;; This function is called by:
  4824 ;;		_main
  4825 ;; This function uses a non-reentrant model
  4826 ;;
  4827                           
  4828                           	psect	text2
  4829  005C76                     __ptext2:
  4830                           	callstack 0
  4831  005C76                     _ssdInit:
  4832                           	callstack 29
  4833  005C76                     
  4834                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  4835  005C76  0E00               	movlw	0
  4836  005C78  6E02               	movwf	(pinMode@pin+1)^0,c
  4837  005C7A  0E02               	movlw	2
  4838  005C7C  6E01               	movwf	pinMode@pin^0,c
  4839  005C7E  0E00               	movlw	0
  4840  005C80  6E04               	movwf	(pinMode@type+1)^0,c
  4841  005C82  0E00               	movlw	0
  4842  005C84  6E03               	movwf	pinMode@type^0,c
  4843  005C86  ECD1  F031         	call	_pinMode	;wreg free
  4844                           
  4845                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  4846  005C8A  0E00               	movlw	0
  4847  005C8C  6E02               	movwf	(pinMode@pin+1)^0,c
  4848  005C8E  0E03               	movlw	3
  4849  005C90  6E01               	movwf	pinMode@pin^0,c
  4850  005C92  0E00               	movlw	0
  4851  005C94  6E04               	movwf	(pinMode@type+1)^0,c
  4852  005C96  0E00               	movlw	0
  4853  005C98  6E03               	movwf	pinMode@type^0,c
  4854  005C9A  ECD1  F031         	call	_pinMode	;wreg free
  4855                           
  4856                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  4857  005C9E  0E00               	movlw	0
  4858  005CA0  6E02               	movwf	(pinMode@pin+1)^0,c
  4859  005CA2  0E04               	movlw	4
  4860  005CA4  6E01               	movwf	pinMode@pin^0,c
  4861  005CA6  0E00               	movlw	0
  4862  005CA8  6E04               	movwf	(pinMode@type+1)^0,c
  4863  005CAA  0E00               	movlw	0
  4864  005CAC  6E03               	movwf	pinMode@type^0,c
  4865  005CAE  ECD1  F031         	call	_pinMode	;wreg free
  4866                           
  4867                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  4868  005CB2  0E00               	movlw	0
  4869  005CB4  6E02               	movwf	(pinMode@pin+1)^0,c
  4870  005CB6  0E05               	movlw	5
  4871  005CB8  6E01               	movwf	pinMode@pin^0,c
  4872  005CBA  0E00               	movlw	0
  4873  005CBC  6E04               	movwf	(pinMode@type+1)^0,c
  4874  005CBE  0E00               	movlw	0
  4875  005CC0  6E03               	movwf	pinMode@type^0,c
  4876  005CC2  ECD1  F031         	call	_pinMode	;wreg free
  4877  005CC6                     
  4878                           ;ssd.c: 109:     TRISD = 0x00;
  4879  005CC6  0E00               	movlw	0
  4880  005CC8  6E95               	movwf	149,c	;volatile
  4881  005CCA  0012               	return		;funcret
  4882  005CCC                     __end_of_ssdInit:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _ssdDigit *****************
  4886 ;; Defined at:
  4887 ;;		line 38 in file "ssd.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  val             1    wreg     unsigned char 
  4890 ;;  pos             1    0[COMRAM] unsigned char 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;  val             1    1[COMRAM] unsigned char 
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  1    wreg      void 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4902 ;;      Params:         1       0       0       0       0       0       0
  4903 ;;      Locals:         1       0       0       0       0       0       0
  4904 ;;      Temps:          0       0       0       0       0       0       0
  4905 ;;      Totals:         2       0       0       0       0       0       0
  4906 ;;Total ram usage:        2 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text3
  4916  005CCC                     __ptext3:
  4917                           	callstack 0
  4918  005CCC                     _ssdDigit:
  4919                           	callstack 30
  4920                           
  4921                           ;incstack = 0
  4922                           ;ssdDigit@val stored from wreg
  4923  005CCC  6E02               	movwf	ssdDigit@val^0,c
  4924  005CCE                     
  4925                           ;ssd.c: 39:     if (pos == 0) {
  4926  005CCE  5001               	movf	ssdDigit@pos^0,w,c
  4927  005CD0  A4D8               	btfss	status,2,c
  4928  005CD2  EF6D  F02E         	goto	u2081
  4929  005CD6  EF6F  F02E         	goto	u2080
  4930  005CDA                     u2081:
  4931  005CDA  EF71  F02E         	goto	l3346
  4932  005CDE                     u2080:
  4933  005CDE                     
  4934                           ;ssd.c: 40:         v0 = val;
  4935  005CDE  C002  F05B         	movff	ssdDigit@val,_v0
  4936  005CE2                     l3346:
  4937                           
  4938                           ;ssd.c: 42:     if (pos == 1) {
  4939  005CE2  0401               	decf	ssdDigit@pos^0,w,c
  4940  005CE4  A4D8               	btfss	status,2,c
  4941  005CE6  EF77  F02E         	goto	u2091
  4942  005CEA  EF79  F02E         	goto	u2090
  4943  005CEE                     u2091:
  4944  005CEE  EF7B  F02E         	goto	l3350
  4945  005CF2                     u2090:
  4946  005CF2                     
  4947                           ;ssd.c: 43:         v1 = val;
  4948  005CF2  C002  F05A         	movff	ssdDigit@val,_v1
  4949  005CF6                     l3350:
  4950                           
  4951                           ;ssd.c: 45:     if (pos == 2) {
  4952  005CF6  0E02               	movlw	2
  4953  005CF8  1801               	xorwf	ssdDigit@pos^0,w,c
  4954  005CFA  A4D8               	btfss	status,2,c
  4955  005CFC  EF82  F02E         	goto	u2101
  4956  005D00  EF84  F02E         	goto	u2100
  4957  005D04                     u2101:
  4958  005D04  EF86  F02E         	goto	l3354
  4959  005D08                     u2100:
  4960  005D08                     
  4961                           ;ssd.c: 46:         v2 = val;
  4962  005D08  C002  F059         	movff	ssdDigit@val,_v2
  4963  005D0C                     l3354:
  4964                           
  4965                           ;ssd.c: 48:     if (pos == 3) {
  4966  005D0C  0E03               	movlw	3
  4967  005D0E  1801               	xorwf	ssdDigit@pos^0,w,c
  4968  005D10  A4D8               	btfss	status,2,c
  4969  005D12  EF8D  F02E         	goto	u2111
  4970  005D16  EF8F  F02E         	goto	u2110
  4971  005D1A                     u2111:
  4972  005D1A  EF91  F02E         	goto	l547
  4973  005D1E                     u2110:
  4974  005D1E                     
  4975                           ;ssd.c: 49:         v3 = val;
  4976  005D1E  C002  F058         	movff	ssdDigit@val,_v3
  4977  005D22                     l547:
  4978  005D22  0012               	return		;funcret
  4979  005D24                     __end_of_ssdDigit:
  4980                           	callstack 0
  4981                           
  4982 ;; *************** function _ligarCooler *****************
  4983 ;; Defined at:
  4984 ;;		line 37 in file "main.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		wreg, status,2, status,0
  4993 ;; Tracked objects:
  4994 ;;		On entry : 0/0
  4995 ;;		On exit  : 0/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4998 ;;      Params:         0       0       0       0       0       0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used: 1
  5004 ;; This function calls:
  5005 ;;		Nothing
  5006 ;; This function is called by:
  5007 ;;		_main
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           	psect	text4
  5012  005A48                     __ptext4:
  5013                           	callstack 0
  5014  005A48                     _ligarCooler:
  5015                           	callstack 30
  5016  005A48                     
  5017                           ;main.c: 38:     (*(volatile __near unsigned char*)0xF94) = 0x01;
  5018  005A48  0E01               	movlw	1
  5019  005A4A  6E94               	movwf	148,c	;volatile
  5020  005A4C                     
  5021                           ;main.c: 39:     (((*(volatile __near unsigned char*)0xF82)) |= (1<<(2)));
  5022  005A4C  8482               	bsf	130,2,c	;volatile
  5023  005A4E  0012               	return		;funcret
  5024  005A50                     __end_of_ligarCooler:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _ligaRele2 *****************
  5028 ;; Defined at:
  5029 ;;		line 64 in file "main.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		None
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5043 ;;      Params:         0       0       0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text5
  5057  005A32                     __ptext5:
  5058                           	callstack 0
  5059  005A32                     _ligaRele2:
  5060                           	callstack 30
  5061  005A32                     
  5062                           ;main.c: 65:     TRISEbits.TRISE0 = 0;
  5063  005A32  9096               	bcf	150,0,c	;volatile
  5064                           
  5065                           ;main.c: 66:     PORTEbits.RE0 = 1;
  5066  005A34  8084               	bsf	132,0,c	;volatile
  5067  005A36  0012               	return		;funcret
  5068  005A38                     __end_of_ligaRele2:
  5069                           	callstack 0
  5070                           
  5071 ;; *************** function _ligaRele1 *****************
  5072 ;; Defined at:
  5073 ;;		line 54 in file "main.c"
  5074 ;; Parameters:    Size  Location     Type
  5075 ;;		None
  5076 ;; Auto vars:     Size  Location     Type
  5077 ;;		None
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  1    wreg      void 
  5080 ;; Registers used:
  5081 ;;		None
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5087 ;;      Params:         0       0       0       0       0       0       0
  5088 ;;      Locals:         0       0       0       0       0       0       0
  5089 ;;      Temps:          0       0       0       0       0       0       0
  5090 ;;      Totals:         0       0       0       0       0       0       0
  5091 ;;Total ram usage:        0 bytes
  5092 ;; Hardware stack levels used: 1
  5093 ;; This function calls:
  5094 ;;		Nothing
  5095 ;; This function is called by:
  5096 ;;		_main
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text6
  5101  005A2C                     __ptext6:
  5102                           	callstack 0
  5103  005A2C                     _ligaRele1:
  5104                           	callstack 30
  5105  005A2C                     
  5106                           ;main.c: 55:     TRISCbits.TRISC0 = 0;
  5107  005A2C  9094               	bcf	148,0,c	;volatile
  5108                           
  5109                           ;main.c: 56:     PORTCbits.RC0 = 1;
  5110  005A2E  8082               	bsf	130,0,c	;volatile
  5111  005A30  0012               	return		;funcret
  5112  005A32                     __end_of_ligaRele1:
  5113                           	callstack 0
  5114                           
  5115 ;; *************** function _lcd_str *****************
  5116 ;; Defined at:
  5117 ;;		line 76 in file "lcd.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  str             2    6[COMRAM] PTR const unsigned char 
  5120 ;;		 -> STR_135(9), STR_134(13), STR_133(14), STR_132(10), 
  5121 ;;		 -> STR_131(14), STR_130(9), STR_129(17), STR_128(10), 
  5122 ;;		 -> STR_127(14), STR_126(9), STR_125(13), STR_124(14), 
  5123 ;;		 -> STR_123(10), STR_122(14), STR_121(9), STR_120(17), 
  5124 ;;		 -> STR_119(10), STR_118(14), STR_117(9), STR_116(13), 
  5125 ;;		 -> STR_115(14), STR_114(10), STR_113(14), STR_112(9), 
  5126 ;;		 -> STR_111(17), STR_110(10), STR_109(14), STR_108(17), 
  5127 ;;		 -> STR_107(17), STR_106(16), STR_105(4), STR_104(9), 
  5128 ;;		 -> STR_103(13), STR_102(14), STR_101(10), STR_100(14), 
  5129 ;;		 -> STR_99(9), STR_98(17), STR_97(10), STR_96(14), 
  5130 ;;		 -> STR_95(9), STR_94(13), STR_93(14), STR_92(10), 
  5131 ;;		 -> STR_91(14), STR_90(9), STR_89(17), STR_88(10), 
  5132 ;;		 -> STR_87(14), STR_86(9), STR_85(13), STR_84(14), 
  5133 ;;		 -> STR_83(10), STR_82(14), STR_81(9), STR_80(17), 
  5134 ;;		 -> STR_79(10), STR_78(14), STR_77(17), STR_76(17), 
  5135 ;;		 -> STR_75(16), STR_74(6), STR_73(9), STR_72(13), 
  5136 ;;		 -> STR_71(14), STR_70(10), STR_69(14), STR_68(9), 
  5137 ;;		 -> STR_67(17), STR_66(10), STR_65(14), STR_64(9), 
  5138 ;;		 -> STR_63(13), STR_62(14), STR_61(10), STR_60(14), 
  5139 ;;		 -> STR_59(9), STR_58(17), STR_57(10), STR_56(14), 
  5140 ;;		 -> STR_55(9), STR_54(13), STR_53(14), STR_52(10), 
  5141 ;;		 -> STR_51(14), STR_50(9), STR_49(17), STR_48(10), 
  5142 ;;		 -> STR_47(14), STR_46(17), STR_45(17), STR_44(16), 
  5143 ;;		 -> STR_43(6), STR_42(9), STR_41(13), STR_40(14), 
  5144 ;;		 -> STR_39(10), STR_38(14), STR_37(9), STR_36(17), 
  5145 ;;		 -> STR_35(10), STR_34(14), STR_33(9), STR_32(13), 
  5146 ;;		 -> STR_31(14), STR_30(10), STR_29(14), STR_28(9), 
  5147 ;;		 -> STR_27(17), STR_26(10), STR_25(14), STR_24(9), 
  5148 ;;		 -> STR_23(13), STR_22(14), STR_21(10), STR_20(14), 
  5149 ;;		 -> STR_19(9), STR_18(17), STR_17(10), STR_16(14), 
  5150 ;;		 -> STR_15(17), STR_14(17), STR_13(16), STR_12(7), 
  5151 ;;		 -> STR_11(7), STR_10(9), STR_9(9), STR_8(10), 
  5152 ;;		 -> STR_7(11), STR_6(9), STR_5(14), STR_4(8), 
  5153 ;;		 -> STR_3(11), STR_2(8), STR_1(11), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  i               1   10[COMRAM] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5165 ;;      Params:         2       0       0       0       0       0       0
  5166 ;;      Locals:         1       0       0       0       0       0       0
  5167 ;;      Temps:          2       0       0       0       0       0       0
  5168 ;;      Totals:         5       0       0       0       0       0       0
  5169 ;;Total ram usage:        5 bytes
  5170 ;; Hardware stack levels used: 1
  5171 ;; Hardware stack levels required when called: 2
  5172 ;; This function calls:
  5173 ;;		_lcd_dat
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text7
  5180  005B80                     __ptext7:
  5181                           	callstack 0
  5182  005B80                     _lcd_str:
  5183                           	callstack 28
  5184  005B80                     
  5185                           ;lcd.c: 76: void lcd_str(const char* str);lcd.c: 77: {;lcd.c: 78:  unsigned char i=0;
  5186  005B80  0E00               	movlw	0
  5187  005B82  6E0B               	movwf	lcd_str@i^0,c
  5188                           
  5189                           ;lcd.c: 80:  while(str[i] != 0 )
  5190  005B84  EFD3  F02D         	goto	l3324
  5191  005B88                     l3320:
  5192                           
  5193                           ;lcd.c: 81:  {;lcd.c: 82:    lcd_dat(str[i]);
  5194  005B88  500B               	movf	lcd_str@i^0,w,c
  5195  005B8A  2407               	addwf	lcd_str@str^0,w,c
  5196  005B8C  6E09               	movwf	??_lcd_str^0,c
  5197  005B8E  0E00               	movlw	0
  5198  005B90  2008               	addwfc	(lcd_str@str+1)^0,w,c
  5199  005B92  6E0A               	movwf	(??_lcd_str+1)^0,c
  5200  005B94  C009  FFF6         	movff	??_lcd_str,tblptrl
  5201  005B98  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  5202  005B9C                     	if	0	;tblptru may be non-zero
  5203  005B9C                     	endif
  5204  005B9C                     	if	0	;tblptru may be non-zero
  5205  005B9C                     	endif
  5206  005B9C  0008               	tblrd		*
  5207  005B9E  50F5               	movf	tablat,w,c
  5208  005BA0  EC71  F02D         	call	_lcd_dat
  5209  005BA4                     
  5210                           ;lcd.c: 83:    i++;
  5211  005BA4  2A0B               	incf	lcd_str@i^0,f,c
  5212  005BA6                     l3324:
  5213                           
  5214                           ;lcd.c: 80:  while(str[i] != 0 )
  5215  005BA6  500B               	movf	lcd_str@i^0,w,c
  5216  005BA8  2407               	addwf	lcd_str@str^0,w,c
  5217  005BAA  6E09               	movwf	??_lcd_str^0,c
  5218  005BAC  0E00               	movlw	0
  5219  005BAE  2008               	addwfc	(lcd_str@str+1)^0,w,c
  5220  005BB0  6E0A               	movwf	(??_lcd_str+1)^0,c
  5221  005BB2  C009  FFF6         	movff	??_lcd_str,tblptrl
  5222  005BB6  C00A  FFF7         	movff	??_lcd_str+1,tblptrh
  5223  005BBA                     	if	0	;tblptru may be non-zero
  5224  005BBA                     	endif
  5225  005BBA                     	if	0	;tblptru may be non-zero
  5226  005BBA                     	endif
  5227  005BBA  0008               	tblrd		*
  5228  005BBC  50F5               	movf	tablat,w,c
  5229  005BBE  0900               	iorlw	0
  5230  005BC0  A4D8               	btfss	status,2,c
  5231  005BC2  EFE5  F02D         	goto	u2071
  5232  005BC6  EFE7  F02D         	goto	u2070
  5233  005BCA                     u2071:
  5234  005BCA  EFC4  F02D         	goto	l3320
  5235  005BCE                     u2070:
  5236  005BCE  0012               	return		;funcret
  5237  005BD0                     __end_of_lcd_str:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _lcd_dat *****************
  5241 ;; Defined at:
  5242 ;;		line 46 in file "lcd.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  val             1    wreg     unsigned char 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;  val             1    5[COMRAM] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         0       0       0       0       0       0       0
  5257 ;;      Locals:         1       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0
  5259 ;;      Totals:         1       0       0       0       0       0       0
  5260 ;;Total ram usage:        1 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 1
  5263 ;; This function calls:
  5264 ;;		_atraso_ms
  5265 ;;		_lcd_wr
  5266 ;; This function is called by:
  5267 ;;		_lcd_str
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text8
  5272  005AE2                     __ptext8:
  5273                           	callstack 0
  5274  005AE2                     _lcd_dat:
  5275                           	callstack 28
  5276                           
  5277                           ;incstack = 0
  5278                           ;lcd_dat@val stored from wreg
  5279  005AE2  6E06               	movwf	lcd_dat@val^0,c
  5280  005AE4                     
  5281                           ;lcd.c: 46: void lcd_dat(unsigned char val);lcd.c: 47: {;lcd.c: 48:  PORTEbits.RE1=1;
  5282  005AE4  8284               	bsf	132,1,c	;volatile
  5283  005AE6                     
  5284                           ;lcd.c: 49:         lcd_wr(val);
  5285  005AE6  5006               	movf	lcd_dat@val^0,w,c
  5286  005AE8  EC20  F02D         	call	_lcd_wr
  5287  005AEC                     
  5288                           ;lcd.c: 50:         PORTEbits.RE2=1;
  5289  005AEC  8484               	bsf	132,2,c	;volatile
  5290  005AEE                     
  5291                           ;lcd.c: 51:         atraso_ms(3);
  5292  005AEE  0E00               	movlw	0
  5293  005AF0  6E02               	movwf	(atraso_ms@valor+1)^0,c
  5294  005AF2  0E03               	movlw	3
  5295  005AF4  6E01               	movwf	atraso_ms@valor^0,c
  5296  005AF6  ECA1  F02D         	call	_atraso_ms	;wreg free
  5297  005AFA                     
  5298                           ;lcd.c: 52:         PORTEbits.RE1=0;
  5299  005AFA  9284               	bcf	132,1,c	;volatile
  5300  005AFC                     
  5301                           ;lcd.c: 53:         atraso_ms(3);
  5302  005AFC  0E00               	movlw	0
  5303  005AFE  6E02               	movwf	(atraso_ms@valor+1)^0,c
  5304  005B00  0E03               	movlw	3
  5305  005B02  6E01               	movwf	atraso_ms@valor^0,c
  5306  005B04  ECA1  F02D         	call	_atraso_ms	;wreg free
  5307  005B08                     
  5308                           ;lcd.c: 54:  PORTEbits.RE1=1;
  5309  005B08  8284               	bsf	132,1,c	;volatile
  5310  005B0A  0012               	return		;funcret
  5311  005B0C                     __end_of_lcd_dat:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _lcd_cmd *****************
  5315 ;; Defined at:
  5316 ;;		line 35 in file "lcd.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  val             1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  val             1    5[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2, status,0, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5330 ;;      Params:         0       0       0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0
  5333 ;;      Totals:         1       0       0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 1
  5337 ;; This function calls:
  5338 ;;		_atraso_ms
  5339 ;;		_lcd_wr
  5340 ;; This function is called by:
  5341 ;;		_main
  5342 ;;		_lcd_init
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text9
  5347  005AB8                     __ptext9:
  5348                           	callstack 0
  5349  005AB8                     _lcd_cmd:
  5350                           	callstack 29
  5351                           
  5352                           ;incstack = 0
  5353                           ;lcd_cmd@val stored from wreg
  5354  005AB8  6E06               	movwf	lcd_cmd@val^0,c
  5355  005ABA                     
  5356                           ;lcd.c: 35: void lcd_cmd(unsigned char val);lcd.c: 36: {;lcd.c: 37:  PORTEbits.RE1=1;
  5357  005ABA  8284               	bsf	132,1,c	;volatile
  5358  005ABC                     
  5359                           ;lcd.c: 38:         lcd_wr(val);
  5360  005ABC  5006               	movf	lcd_cmd@val^0,w,c
  5361  005ABE  EC20  F02D         	call	_lcd_wr
  5362  005AC2                     
  5363                           ;lcd.c: 39:         PORTEbits.RE2=0;
  5364  005AC2  9484               	bcf	132,2,c	;volatile
  5365  005AC4                     
  5366                           ;lcd.c: 40:         atraso_ms(3);
  5367  005AC4  0E00               	movlw	0
  5368  005AC6  6E02               	movwf	(atraso_ms@valor+1)^0,c
  5369  005AC8  0E03               	movlw	3
  5370  005ACA  6E01               	movwf	atraso_ms@valor^0,c
  5371  005ACC  ECA1  F02D         	call	_atraso_ms	;wreg free
  5372  005AD0                     
  5373                           ;lcd.c: 41:         PORTEbits.RE1=0;
  5374  005AD0  9284               	bcf	132,1,c	;volatile
  5375  005AD2                     
  5376                           ;lcd.c: 42:         atraso_ms(3);
  5377  005AD2  0E00               	movlw	0
  5378  005AD4  6E02               	movwf	(atraso_ms@valor+1)^0,c
  5379  005AD6  0E03               	movlw	3
  5380  005AD8  6E01               	movwf	atraso_ms@valor^0,c
  5381  005ADA  ECA1  F02D         	call	_atraso_ms	;wreg free
  5382  005ADE                     
  5383                           ;lcd.c: 43:  PORTEbits.RE1=1;
  5384  005ADE  8284               	bsf	132,1,c	;volatile
  5385  005AE0  0012               	return		;funcret
  5386  005AE2                     __end_of_lcd_cmd:
  5387                           	callstack 0
  5388                           
  5389 ;; *************** function _lcd_wr *****************
  5390 ;; Defined at:
  5391 ;;		line 30 in file "lcd.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  val             1    wreg     unsigned char 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;  val             1    0[COMRAM] unsigned char 
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  1    wreg      void 
  5398 ;; Registers used:
  5399 ;;		wreg
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5405 ;;      Params:         0       0       0       0       0       0       0
  5406 ;;      Locals:         1       0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0
  5408 ;;      Totals:         1       0       0       0       0       0       0
  5409 ;;Total ram usage:        1 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_lcd_cmd
  5415 ;;		_lcd_dat
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text10
  5420  005A40                     __ptext10:
  5421                           	callstack 0
  5422  005A40                     _lcd_wr:
  5423                           	callstack 28
  5424                           
  5425                           ;incstack = 0
  5426                           ;lcd_wr@val stored from wreg
  5427  005A40  6E01               	movwf	lcd_wr@val^0,c
  5428  005A42                     
  5429                           ;lcd.c: 30: void lcd_wr(unsigned char val);lcd.c: 31: {;lcd.c: 32:   PORTD=val;
  5430  005A42  C001  FF83         	movff	lcd_wr@val,3971	;volatile
  5431  005A46  0012               	return		;funcret
  5432  005A48                     __end_of_lcd_wr:
  5433                           	callstack 0
  5434                           
  5435 ;; *************** function _atraso_ms *****************
  5436 ;; Defined at:
  5437 ;;		line 26 in file "atraso.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;  valor           2    0[COMRAM] unsigned int 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  i               2    2[COMRAM] unsigned int 
  5442 ;;  j               1    4[COMRAM] unsigned char 
  5443 ;; Return value:  Size  Location     Type
  5444 ;;                  1    wreg      void 
  5445 ;; Registers used:
  5446 ;;		wreg, status,2, status,0
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5452 ;;      Params:         2       0       0       0       0       0       0
  5453 ;;      Locals:         3       0       0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0       0       0
  5455 ;;      Totals:         5       0       0       0       0       0       0
  5456 ;;Total ram usage:        5 bytes
  5457 ;; Hardware stack levels used: 1
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;;		_lcd_cmd
  5463 ;;		_lcd_dat
  5464 ;;		_lcd_init
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text11
  5469  005B42                     __ptext11:
  5470                           	callstack 0
  5471  005B42                     _atraso_ms:
  5472                           	callstack 28
  5473  005B42                     
  5474                           ;atraso.c: 26: void atraso_ms(unsigned int valor);atraso.c: 27: {;atraso.c: 28: unsigned
      +                           int i;;atraso.c: 29: unsigned char j;;atraso.c: 31:  for (i =0; i< valor; i++)
  5475  005B42  0E00               	movlw	0
  5476  005B44  6E04               	movwf	(atraso_ms@i+1)^0,c
  5477  005B46  0E00               	movlw	0
  5478  005B48  6E03               	movwf	atraso_ms@i^0,c
  5479  005B4A  EFB4  F02D         	goto	l3168
  5480  005B4E                     l3156:
  5481                           
  5482                           ;atraso.c: 32:  {;atraso.c: 34:   for (j =0 ; j < 200; j++)
  5483  005B4E  0E00               	movlw	0
  5484  005B50  6E05               	movwf	atraso_ms@j^0,c
  5485  005B52                     l3162:
  5486                           
  5487                           ;atraso.c: 35:    {;atraso.c: 38:    }
  5488  005B52  2A05               	incf	atraso_ms@j^0,f,c
  5489  005B54  0EC7               	movlw	199
  5490  005B56  6405               	cpfsgt	atraso_ms@j^0,c
  5491  005B58  EFB0  F02D         	goto	u1791
  5492  005B5C  EFB2  F02D         	goto	u1790
  5493  005B60                     u1791:
  5494  005B60  EFA9  F02D         	goto	l3162
  5495  005B64                     u1790:
  5496  005B64                     
  5497                           ;atraso.c: 39:  }
  5498  005B64  4A03               	infsnz	atraso_ms@i^0,f,c
  5499  005B66  2A04               	incf	(atraso_ms@i+1)^0,f,c
  5500  005B68                     l3168:
  5501  005B68  5001               	movf	atraso_ms@valor^0,w,c
  5502  005B6A  5C03               	subwf	atraso_ms@i^0,w,c
  5503  005B6C  5002               	movf	(atraso_ms@valor+1)^0,w,c
  5504  005B6E  5804               	subwfb	(atraso_ms@i+1)^0,w,c
  5505  005B70  A0D8               	btfss	status,0,c
  5506  005B72  EFBD  F02D         	goto	u1801
  5507  005B76  EFBF  F02D         	goto	u1800
  5508  005B7A                     u1801:
  5509  005B7A  EFA7  F02D         	goto	l3156
  5510  005B7E                     u1800:
  5511  005B7E  0012               	return		;funcret
  5512  005B80                     __end_of_atraso_ms:
  5513                           	callstack 0
  5514                           
  5515 ;; *************** function _lcdPosition *****************
  5516 ;; Defined at:
  5517 ;;		line 22 in file "main.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  linha           1    wreg     unsigned char 
  5520 ;;  coluna          1    8[COMRAM] unsigned char 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  linha           1    9[COMRAM] unsigned char 
  5523 ;; Return value:  Size  Location     Type
  5524 ;;                  1    wreg      void 
  5525 ;; Registers used:
  5526 ;;		wreg, status,2, status,0, cstack
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5532 ;;      Params:         1       0       0       0       0       0       0
  5533 ;;      Locals:         1       0       0       0       0       0       0
  5534 ;;      Temps:          0       0       0       0       0       0       0
  5535 ;;      Totals:         2       0       0       0       0       0       0
  5536 ;;Total ram usage:        2 bytes
  5537 ;; Hardware stack levels used: 1
  5538 ;; Hardware stack levels required when called: 3
  5539 ;; This function calls:
  5540 ;;		_lcdCommand
  5541 ;; This function is called by:
  5542 ;;		_main
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text12
  5547  005D24                     __ptext12:
  5548                           	callstack 0
  5549  005D24                     _lcdPosition:
  5550                           	callstack 27
  5551                           
  5552                           ;incstack = 0
  5553                           ;lcdPosition@linha stored from wreg
  5554  005D24  6E0A               	movwf	lcdPosition@linha^0,c
  5555  005D26                     
  5556                           ;main.c: 23:     if (linha == 0) {
  5557  005D26  500A               	movf	lcdPosition@linha^0,w,c
  5558  005D28  A4D8               	btfss	status,2,c
  5559  005D2A  EF99  F02E         	goto	u2031
  5560  005D2E  EF9B  F02E         	goto	u2030
  5561  005D32                     u2031:
  5562  005D32  EFA0  F02E         	goto	l3250
  5563  005D36                     u2030:
  5564  005D36                     
  5565                           ;main.c: 24:         lcdCommand(0x80 + (coluna % 16));
  5566  005D36  5009               	movf	lcdPosition@coluna^0,w,c
  5567  005D38  0B0F               	andlw	15
  5568  005D3A  0F80               	addlw	128
  5569  005D3C  EC06  F02F         	call	_lcdCommand
  5570  005D40                     l3250:
  5571                           
  5572                           ;main.c: 26:     if (linha == 1) {
  5573  005D40  040A               	decf	lcdPosition@linha^0,w,c
  5574  005D42  A4D8               	btfss	status,2,c
  5575  005D44  EFA6  F02E         	goto	u2041
  5576  005D48  EFA8  F02E         	goto	u2040
  5577  005D4C                     u2041:
  5578  005D4C  EFAD  F02E         	goto	l3254
  5579  005D50                     u2040:
  5580  005D50                     
  5581                           ;main.c: 27:         lcdCommand(0xC0 + (coluna % 16));
  5582  005D50  5009               	movf	lcdPosition@coluna^0,w,c
  5583  005D52  0B0F               	andlw	15
  5584  005D54  0FC0               	addlw	192
  5585  005D56  EC06  F02F         	call	_lcdCommand
  5586  005D5A                     l3254:
  5587                           
  5588                           ;main.c: 29:     if (linha == 2) {
  5589  005D5A  0E02               	movlw	2
  5590  005D5C  180A               	xorwf	lcdPosition@linha^0,w,c
  5591  005D5E  A4D8               	btfss	status,2,c
  5592  005D60  EFB4  F02E         	goto	u2051
  5593  005D64  EFB6  F02E         	goto	u2050
  5594  005D68                     u2051:
  5595  005D68  EFBB  F02E         	goto	l3258
  5596  005D6C                     u2050:
  5597  005D6C                     
  5598                           ;main.c: 30:         lcdCommand(0x90 + (coluna % 16));
  5599  005D6C  5009               	movf	lcdPosition@coluna^0,w,c
  5600  005D6E  0B0F               	andlw	15
  5601  005D70  0F90               	addlw	144
  5602  005D72  EC06  F02F         	call	_lcdCommand
  5603  005D76                     l3258:
  5604                           
  5605                           ;main.c: 32:     if (linha == 3) {
  5606  005D76  0E03               	movlw	3
  5607  005D78  180A               	xorwf	lcdPosition@linha^0,w,c
  5608  005D7A  A4D8               	btfss	status,2,c
  5609  005D7C  EFC2  F02E         	goto	u2061
  5610  005D80  EFC4  F02E         	goto	u2060
  5611  005D84                     u2061:
  5612  005D84  EFC9  F02E         	goto	l41
  5613  005D88                     u2060:
  5614  005D88                     
  5615                           ;main.c: 33:         lcdCommand(0xD0 + (coluna % 16));
  5616  005D88  5009               	movf	lcdPosition@coluna^0,w,c
  5617  005D8A  0B0F               	andlw	15
  5618  005D8C  0FD0               	addlw	208
  5619  005D8E  EC06  F02F         	call	_lcdCommand
  5620  005D92                     l41:
  5621  005D92  0012               	return		;funcret
  5622  005D94                     __end_of_lcdPosition:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _lcdInit *****************
  5626 ;; Defined at:
  5627 ;;		line 95 in file "lcdData.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5641 ;;      Params:         0       0       0       0       0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0
  5644 ;;      Totals:         0       0       0       0       0       0       0
  5645 ;;Total ram usage:        0 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 3
  5648 ;; This function calls:
  5649 ;;		_Delay2ms
  5650 ;;		_lcdCommand
  5651 ;;		_pinMode
  5652 ;; This function is called by:
  5653 ;;		_main
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           	psect	text13
  5658  005D94                     __ptext13:
  5659                           	callstack 0
  5660  005D94                     _lcdInit:
  5661                           	callstack 27
  5662  005D94                     
  5663                           ;lcdData.c: 97:     pinMode(PIN_E2, 0);
  5664  005D94  0E00               	movlw	0
  5665  005D96  6E02               	movwf	(pinMode@pin+1)^0,c
  5666  005D98  0E22               	movlw	34
  5667  005D9A  6E01               	movwf	pinMode@pin^0,c
  5668  005D9C  0E00               	movlw	0
  5669  005D9E  6E04               	movwf	(pinMode@type+1)^0,c
  5670  005DA0  0E00               	movlw	0
  5671  005DA2  6E03               	movwf	pinMode@type^0,c
  5672  005DA4  ECD1  F031         	call	_pinMode	;wreg free
  5673                           
  5674                           ;lcdData.c: 98:     pinMode(PIN_E1, 0);
  5675  005DA8  0E00               	movlw	0
  5676  005DAA  6E02               	movwf	(pinMode@pin+1)^0,c
  5677  005DAC  0E21               	movlw	33
  5678  005DAE  6E01               	movwf	pinMode@pin^0,c
  5679  005DB0  0E00               	movlw	0
  5680  005DB2  6E04               	movwf	(pinMode@type+1)^0,c
  5681  005DB4  0E00               	movlw	0
  5682  005DB6  6E03               	movwf	pinMode@type^0,c
  5683  005DB8  ECD1  F031         	call	_pinMode	;wreg free
  5684  005DBC                     
  5685                           ;lcdData.c: 99:  TRISD = 0x00;
  5686  005DBC  0E00               	movlw	0
  5687  005DBE  6E95               	movwf	149,c	;volatile
  5688  005DC0                     
  5689                           ;lcdData.c: 102:  Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  5690  005DC0  EC3E  F02D         	call	_Delay2ms	;wreg free
  5691  005DC4  EC3E  F02D         	call	_Delay2ms	;wreg free
  5692  005DC8  EC3E  F02D         	call	_Delay2ms	;wreg free
  5693  005DCC  EC3E  F02D         	call	_Delay2ms	;wreg free
  5694  005DD0  EC3E  F02D         	call	_Delay2ms	;wreg free
  5695  005DD4                     
  5696                           ;lcdData.c: 104:     lcdCommand(0x38);
  5697  005DD4  0E38               	movlw	56
  5698  005DD6  EC06  F02F         	call	_lcdCommand
  5699  005DDA                     
  5700                           ;lcdData.c: 105:     Delay2ms(); Delay2ms();
  5701  005DDA  EC3E  F02D         	call	_Delay2ms	;wreg free
  5702  005DDE  EC3E  F02D         	call	_Delay2ms	;wreg free
  5703  005DE2                     
  5704                           ;lcdData.c: 106:     lcdCommand(0x38);
  5705  005DE2  0E38               	movlw	56
  5706  005DE4  EC06  F02F         	call	_lcdCommand
  5707  005DE8                     
  5708                           ;lcdData.c: 107:     Delay2ms();
  5709  005DE8  EC3E  F02D         	call	_Delay2ms	;wreg free
  5710  005DEC                     
  5711                           ;lcdData.c: 108:     lcdCommand(0x38);
  5712  005DEC  0E38               	movlw	56
  5713  005DEE  EC06  F02F         	call	_lcdCommand
  5714  005DF2                     
  5715                           ;lcdData.c: 110:     lcdCommand(0x38);
  5716  005DF2  0E38               	movlw	56
  5717  005DF4  EC06  F02F         	call	_lcdCommand
  5718  005DF8                     
  5719                           ;lcdData.c: 111:     lcdCommand(0x06);
  5720  005DF8  0E06               	movlw	6
  5721  005DFA  EC06  F02F         	call	_lcdCommand
  5722  005DFE                     
  5723                           ;lcdData.c: 114:     lcdCommand(0x0C);
  5724  005DFE  0E0C               	movlw	12
  5725  005E00  EC06  F02F         	call	_lcdCommand
  5726  005E04                     
  5727                           ;lcdData.c: 115:     lcdCommand(0x01);
  5728  005E04  0E01               	movlw	1
  5729  005E06  EC06  F02F         	call	_lcdCommand
  5730  005E0A  0012               	return		;funcret
  5731  005E0C                     __end_of_lcdInit:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function _pinMode *****************
  5735 ;; Defined at:
  5736 ;;		line 54 in file "io.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  pin             2    0[COMRAM] int 
  5739 ;;  type            2    2[COMRAM] int 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;		None
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  1    wreg      void 
  5744 ;; Registers used:
  5745 ;;		wreg, status,2, status,0
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5751 ;;      Params:         4       0       0       0       0       0       0
  5752 ;;      Locals:         0       0       0       0       0       0       0
  5753 ;;      Temps:          2       0       0       0       0       0       0
  5754 ;;      Totals:         6       0       0       0       0       0       0
  5755 ;;Total ram usage:        6 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; This function calls:
  5758 ;;		Nothing
  5759 ;; This function is called by:
  5760 ;;		_lcdInit
  5761 ;;		_ssdInit
  5762 ;;		_adcInit
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text14
  5767  0063A2                     __ptext14:
  5768                           	callstack 0
  5769  0063A2                     _pinMode:
  5770                           	callstack 29
  5771  0063A2                     
  5772                           ;io.c: 56:     if(pin <8){
  5773  0063A2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5774  0063A4  EFDF  F031         	goto	u1830
  5775  0063A8  5002               	movf	(pinMode@pin+1)^0,w,c
  5776  0063AA  E107               	bnz	u1831
  5777  0063AC  0E08               	movlw	8
  5778  0063AE  5C01               	subwf	pinMode@pin^0,w,c
  5779  0063B0  B0D8               	btfsc	status,0,c
  5780  0063B2  EFDD  F031         	goto	u1831
  5781  0063B6  EFDF  F031         	goto	u1830
  5782  0063BA                     u1831:
  5783  0063BA  EF09  F032         	goto	l3200
  5784  0063BE                     u1830:
  5785  0063BE                     
  5786                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5787  0063BE  5003               	movf	pinMode@type^0,w,c
  5788  0063C0  1004               	iorwf	(pinMode@type+1)^0,w,c
  5789  0063C2  B4D8               	btfsc	status,2,c
  5790  0063C4  EFE6  F031         	goto	u1841
  5791  0063C8  EFE8  F031         	goto	u1840
  5792  0063CC                     u1841:
  5793  0063CC  EFF8  F031         	goto	l3198
  5794  0063D0                     u1840:
  5795  0063D0  C001  F005         	movff	pinMode@pin,??_pinMode
  5796  0063D4  0E01               	movlw	1
  5797  0063D6  6E06               	movwf	(??_pinMode+1)^0,c
  5798  0063D8  2A05               	incf	??_pinMode^0,f,c
  5799  0063DA  EFF1  F031         	goto	u1854
  5800  0063DE                     u1855:
  5801  0063DE  90D8               	bcf	status,0,c
  5802  0063E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5803  0063E2                     u1854:
  5804  0063E2  2E05               	decfsz	??_pinMode^0,f,c
  5805  0063E4  EFEF  F031         	goto	u1855
  5806  0063E8  5006               	movf	(??_pinMode+1)^0,w,c
  5807  0063EA  1292               	iorwf	146,f,c	;volatile
  5808  0063EC  EFF7  F032         	goto	l278
  5809  0063F0                     l3198:
  5810  0063F0  C001  F005         	movff	pinMode@pin,??_pinMode
  5811  0063F4  0E01               	movlw	1
  5812  0063F6  6E06               	movwf	(??_pinMode+1)^0,c
  5813  0063F8  2A05               	incf	??_pinMode^0,f,c
  5814  0063FA  EF01  F032         	goto	u1864
  5815  0063FE                     u1865:
  5816  0063FE  90D8               	bcf	status,0,c
  5817  006400  3606               	rlcf	(??_pinMode+1)^0,f,c
  5818  006402                     u1864:
  5819  006402  2E05               	decfsz	??_pinMode^0,f,c
  5820  006404  EFFF  F031         	goto	u1865
  5821  006408  5006               	movf	(??_pinMode+1)^0,w,c
  5822  00640A  0AFF               	xorlw	255
  5823  00640C  1692               	andwf	146,f,c	;volatile
  5824  00640E  EFF7  F032         	goto	l278
  5825  006412                     l3200:
  5826  006412  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5827  006414  EF17  F032         	goto	u1870
  5828  006418  5002               	movf	(pinMode@pin+1)^0,w,c
  5829  00641A  E107               	bnz	u1871
  5830  00641C  0E10               	movlw	16
  5831  00641E  5C01               	subwf	pinMode@pin^0,w,c
  5832  006420  B0D8               	btfsc	status,0,c
  5833  006422  EF15  F032         	goto	u1871
  5834  006426  EF17  F032         	goto	u1870
  5835  00642A                     u1871:
  5836  00642A  EF45  F032         	goto	l3208
  5837  00642E                     u1870:
  5838  00642E                     
  5839                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5840  00642E  5003               	movf	pinMode@type^0,w,c
  5841  006430  1004               	iorwf	(pinMode@type+1)^0,w,c
  5842  006432  B4D8               	btfsc	status,2,c
  5843  006434  EF1E  F032         	goto	u1881
  5844  006438  EF20  F032         	goto	u1880
  5845  00643C                     u1881:
  5846  00643C  EF32  F032         	goto	l3206
  5847  006440                     u1880:
  5848  006440  C001  F005         	movff	pinMode@pin,??_pinMode
  5849  006444  0EF8               	movlw	-8
  5850  006446  2605               	addwf	??_pinMode^0,f,c
  5851  006448  0E01               	movlw	1
  5852  00644A  6E06               	movwf	(??_pinMode+1)^0,c
  5853  00644C  2A05               	incf	??_pinMode^0,f,c
  5854  00644E  EF2B  F032         	goto	u1894
  5855  006452                     u1895:
  5856  006452  90D8               	bcf	status,0,c
  5857  006454  3606               	rlcf	(??_pinMode+1)^0,f,c
  5858  006456                     u1894:
  5859  006456  2E05               	decfsz	??_pinMode^0,f,c
  5860  006458  EF29  F032         	goto	u1895
  5861  00645C  5006               	movf	(??_pinMode+1)^0,w,c
  5862  00645E  1293               	iorwf	147,f,c	;volatile
  5863  006460  EFF7  F032         	goto	l278
  5864  006464                     l3206:
  5865  006464  C001  F005         	movff	pinMode@pin,??_pinMode
  5866  006468  0EF8               	movlw	-8
  5867  00646A  2605               	addwf	??_pinMode^0,f,c
  5868  00646C  0E01               	movlw	1
  5869  00646E  6E06               	movwf	(??_pinMode+1)^0,c
  5870  006470  2A05               	incf	??_pinMode^0,f,c
  5871  006472  EF3D  F032         	goto	u1904
  5872  006476                     u1905:
  5873  006476  90D8               	bcf	status,0,c
  5874  006478  3606               	rlcf	(??_pinMode+1)^0,f,c
  5875  00647A                     u1904:
  5876  00647A  2E05               	decfsz	??_pinMode^0,f,c
  5877  00647C  EF3B  F032         	goto	u1905
  5878  006480  5006               	movf	(??_pinMode+1)^0,w,c
  5879  006482  0AFF               	xorlw	255
  5880  006484  1693               	andwf	147,f,c	;volatile
  5881  006486  EFF7  F032         	goto	l278
  5882  00648A                     l3208:
  5883  00648A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5884  00648C  EF53  F032         	goto	u1910
  5885  006490  5002               	movf	(pinMode@pin+1)^0,w,c
  5886  006492  E107               	bnz	u1911
  5887  006494  0E18               	movlw	24
  5888  006496  5C01               	subwf	pinMode@pin^0,w,c
  5889  006498  B0D8               	btfsc	status,0,c
  5890  00649A  EF51  F032         	goto	u1911
  5891  00649E  EF53  F032         	goto	u1910
  5892  0064A2                     u1911:
  5893  0064A2  EF81  F032         	goto	l3216
  5894  0064A6                     u1910:
  5895  0064A6                     
  5896                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5897  0064A6  5003               	movf	pinMode@type^0,w,c
  5898  0064A8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5899  0064AA  B4D8               	btfsc	status,2,c
  5900  0064AC  EF5A  F032         	goto	u1921
  5901  0064B0  EF5C  F032         	goto	u1920
  5902  0064B4                     u1921:
  5903  0064B4  EF6E  F032         	goto	l3214
  5904  0064B8                     u1920:
  5905  0064B8  C001  F005         	movff	pinMode@pin,??_pinMode
  5906  0064BC  0EF0               	movlw	-16
  5907  0064BE  2605               	addwf	??_pinMode^0,f,c
  5908  0064C0  0E01               	movlw	1
  5909  0064C2  6E06               	movwf	(??_pinMode+1)^0,c
  5910  0064C4  2A05               	incf	??_pinMode^0,f,c
  5911  0064C6  EF67  F032         	goto	u1934
  5912  0064CA                     u1935:
  5913  0064CA  90D8               	bcf	status,0,c
  5914  0064CC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5915  0064CE                     u1934:
  5916  0064CE  2E05               	decfsz	??_pinMode^0,f,c
  5917  0064D0  EF65  F032         	goto	u1935
  5918  0064D4  5006               	movf	(??_pinMode+1)^0,w,c
  5919  0064D6  1294               	iorwf	148,f,c	;volatile
  5920  0064D8  EFF7  F032         	goto	l278
  5921  0064DC                     l3214:
  5922  0064DC  C001  F005         	movff	pinMode@pin,??_pinMode
  5923  0064E0  0EF0               	movlw	-16
  5924  0064E2  2605               	addwf	??_pinMode^0,f,c
  5925  0064E4  0E01               	movlw	1
  5926  0064E6  6E06               	movwf	(??_pinMode+1)^0,c
  5927  0064E8  2A05               	incf	??_pinMode^0,f,c
  5928  0064EA  EF79  F032         	goto	u1944
  5929  0064EE                     u1945:
  5930  0064EE  90D8               	bcf	status,0,c
  5931  0064F0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5932  0064F2                     u1944:
  5933  0064F2  2E05               	decfsz	??_pinMode^0,f,c
  5934  0064F4  EF77  F032         	goto	u1945
  5935  0064F8  5006               	movf	(??_pinMode+1)^0,w,c
  5936  0064FA  0AFF               	xorlw	255
  5937  0064FC  1694               	andwf	148,f,c	;volatile
  5938  0064FE  EFF7  F032         	goto	l278
  5939  006502                     l3216:
  5940  006502  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5941  006504  EF8F  F032         	goto	u1950
  5942  006508  5002               	movf	(pinMode@pin+1)^0,w,c
  5943  00650A  E107               	bnz	u1951
  5944  00650C  0E20               	movlw	32
  5945  00650E  5C01               	subwf	pinMode@pin^0,w,c
  5946  006510  B0D8               	btfsc	status,0,c
  5947  006512  EF8D  F032         	goto	u1951
  5948  006516  EF8F  F032         	goto	u1950
  5949  00651A                     u1951:
  5950  00651A  EFBD  F032         	goto	l3224
  5951  00651E                     u1950:
  5952  00651E                     
  5953                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5954  00651E  5003               	movf	pinMode@type^0,w,c
  5955  006520  1004               	iorwf	(pinMode@type+1)^0,w,c
  5956  006522  B4D8               	btfsc	status,2,c
  5957  006524  EF96  F032         	goto	u1961
  5958  006528  EF98  F032         	goto	u1960
  5959  00652C                     u1961:
  5960  00652C  EFAA  F032         	goto	l3222
  5961  006530                     u1960:
  5962  006530  C001  F005         	movff	pinMode@pin,??_pinMode
  5963  006534  0EE8               	movlw	-24
  5964  006536  2605               	addwf	??_pinMode^0,f,c
  5965  006538  0E01               	movlw	1
  5966  00653A  6E06               	movwf	(??_pinMode+1)^0,c
  5967  00653C  2A05               	incf	??_pinMode^0,f,c
  5968  00653E  EFA3  F032         	goto	u1974
  5969  006542                     u1975:
  5970  006542  90D8               	bcf	status,0,c
  5971  006544  3606               	rlcf	(??_pinMode+1)^0,f,c
  5972  006546                     u1974:
  5973  006546  2E05               	decfsz	??_pinMode^0,f,c
  5974  006548  EFA1  F032         	goto	u1975
  5975  00654C  5006               	movf	(??_pinMode+1)^0,w,c
  5976  00654E  1295               	iorwf	149,f,c	;volatile
  5977  006550  EFF7  F032         	goto	l278
  5978  006554                     l3222:
  5979  006554  C001  F005         	movff	pinMode@pin,??_pinMode
  5980  006558  0EE8               	movlw	-24
  5981  00655A  2605               	addwf	??_pinMode^0,f,c
  5982  00655C  0E01               	movlw	1
  5983  00655E  6E06               	movwf	(??_pinMode+1)^0,c
  5984  006560  2A05               	incf	??_pinMode^0,f,c
  5985  006562  EFB5  F032         	goto	u1984
  5986  006566                     u1985:
  5987  006566  90D8               	bcf	status,0,c
  5988  006568  3606               	rlcf	(??_pinMode+1)^0,f,c
  5989  00656A                     u1984:
  5990  00656A  2E05               	decfsz	??_pinMode^0,f,c
  5991  00656C  EFB3  F032         	goto	u1985
  5992  006570  5006               	movf	(??_pinMode+1)^0,w,c
  5993  006572  0AFF               	xorlw	255
  5994  006574  1695               	andwf	149,f,c	;volatile
  5995  006576  EFF7  F032         	goto	l278
  5996  00657A                     l3224:
  5997  00657A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5998  00657C  EFCB  F032         	goto	u1990
  5999  006580  5002               	movf	(pinMode@pin+1)^0,w,c
  6000  006582  E107               	bnz	u1991
  6001  006584  0E28               	movlw	40
  6002  006586  5C01               	subwf	pinMode@pin^0,w,c
  6003  006588  B0D8               	btfsc	status,0,c
  6004  00658A  EFC9  F032         	goto	u1991
  6005  00658E  EFCB  F032         	goto	u1990
  6006  006592                     u1991:
  6007  006592  EFF7  F032         	goto	l278
  6008  006596                     u1990:
  6009  006596                     
  6010                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  6011  006596  5003               	movf	pinMode@type^0,w,c
  6012  006598  1004               	iorwf	(pinMode@type+1)^0,w,c
  6013  00659A  B4D8               	btfsc	status,2,c
  6014  00659C  EFD2  F032         	goto	u2001
  6015  0065A0  EFD4  F032         	goto	u2000
  6016  0065A4                     u2001:
  6017  0065A4  EFE6  F032         	goto	l3230
  6018  0065A8                     u2000:
  6019  0065A8  C001  F005         	movff	pinMode@pin,??_pinMode
  6020  0065AC  0EE0               	movlw	-32
  6021  0065AE  2605               	addwf	??_pinMode^0,f,c
  6022  0065B0  0E01               	movlw	1
  6023  0065B2  6E06               	movwf	(??_pinMode+1)^0,c
  6024  0065B4  2A05               	incf	??_pinMode^0,f,c
  6025  0065B6  EFDF  F032         	goto	u2014
  6026  0065BA                     u2015:
  6027  0065BA  90D8               	bcf	status,0,c
  6028  0065BC  3606               	rlcf	(??_pinMode+1)^0,f,c
  6029  0065BE                     u2014:
  6030  0065BE  2E05               	decfsz	??_pinMode^0,f,c
  6031  0065C0  EFDD  F032         	goto	u2015
  6032  0065C4  5006               	movf	(??_pinMode+1)^0,w,c
  6033  0065C6  1296               	iorwf	150,f,c	;volatile
  6034  0065C8  EFF7  F032         	goto	l278
  6035  0065CC                     l3230:
  6036  0065CC  C001  F005         	movff	pinMode@pin,??_pinMode
  6037  0065D0  0EE0               	movlw	-32
  6038  0065D2  2605               	addwf	??_pinMode^0,f,c
  6039  0065D4  0E01               	movlw	1
  6040  0065D6  6E06               	movwf	(??_pinMode+1)^0,c
  6041  0065D8  2A05               	incf	??_pinMode^0,f,c
  6042  0065DA  EFF1  F032         	goto	u2024
  6043  0065DE                     u2025:
  6044  0065DE  90D8               	bcf	status,0,c
  6045  0065E0  3606               	rlcf	(??_pinMode+1)^0,f,c
  6046  0065E2                     u2024:
  6047  0065E2  2E05               	decfsz	??_pinMode^0,f,c
  6048  0065E4  EFEF  F032         	goto	u2025
  6049  0065E8  5006               	movf	(??_pinMode+1)^0,w,c
  6050  0065EA  0AFF               	xorlw	255
  6051  0065EC  1696               	andwf	150,f,c	;volatile
  6052  0065EE                     l278:
  6053  0065EE  0012               	return		;funcret
  6054  0065F0                     __end_of_pinMode:
  6055                           	callstack 0
  6056                           
  6057 ;; *************** function _lcdCommand *****************
  6058 ;; Defined at:
  6059 ;;		line 48 in file "lcdData.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  cmd             1    wreg     unsigned char 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  cmd             1    7[COMRAM] unsigned char 
  6064 ;;  old_D           1    6[COMRAM] unsigned char 
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6074 ;;      Params:         0       0       0       0       0       0       0
  6075 ;;      Locals:         2       0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0
  6077 ;;      Totals:         2       0       0       0       0       0       0
  6078 ;;Total ram usage:        2 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 2
  6081 ;; This function calls:
  6082 ;;		_Delay2ms
  6083 ;;		_Delay40us
  6084 ;;		_digitalWrite
  6085 ;; This function is called by:
  6086 ;;		_lcdPosition
  6087 ;;		_main
  6088 ;;		_lcdInit
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text15
  6093  005E0C                     __ptext15:
  6094                           	callstack 0
  6095  005E0C                     _lcdCommand:
  6096                           	callstack 27
  6097                           
  6098                           ;incstack = 0
  6099                           ;lcdCommand@cmd stored from wreg
  6100  005E0C  6E08               	movwf	lcdCommand@cmd^0,c
  6101  005E0E                     
  6102                           ;lcdData.c: 48: void lcdCommand(unsigned char cmd);lcdData.c: 49: {;lcdData.c: 50:     u
      +                          nsigned char old_D;;lcdData.c: 51:     old_D = PORTD;
  6103  005E0E  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  6104  005E12                     
  6105                           ;lcdData.c: 54:     TRISD = 0x00;
  6106  005E12  0E00               	movlw	0
  6107  005E14  6E95               	movwf	149,c	;volatile
  6108  005E16                     
  6109                           ;lcdData.c: 56:  digitalWrite(PIN_E2, 0);
  6110  005E16  0E00               	movlw	0
  6111  005E18  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6112  005E1A  0E22               	movlw	34
  6113  005E1C  6E01               	movwf	digitalWrite@pin^0,c
  6114  005E1E  0E00               	movlw	0
  6115  005E20  6E04               	movwf	(digitalWrite@value+1)^0,c
  6116  005E22  0E00               	movlw	0
  6117  005E24  6E03               	movwf	digitalWrite@value^0,c
  6118  005E26  ECAA  F030         	call	_digitalWrite	;wreg free
  6119  005E2A                     
  6120                           ;lcdData.c: 57:  PORTD = cmd;
  6121  005E2A  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  6122  005E2E                     
  6123                           ;lcdData.c: 59:     digitalWrite(PIN_E1, 1);
  6124  005E2E  0E00               	movlw	0
  6125  005E30  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6126  005E32  0E21               	movlw	33
  6127  005E34  6E01               	movwf	digitalWrite@pin^0,c
  6128  005E36  0E00               	movlw	0
  6129  005E38  6E04               	movwf	(digitalWrite@value+1)^0,c
  6130  005E3A  0E01               	movlw	1
  6131  005E3C  6E03               	movwf	digitalWrite@value^0,c
  6132  005E3E  ECAA  F030         	call	_digitalWrite	;wreg free
  6133  005E42                     
  6134                           ;lcdData.c: 60:  digitalWrite(PIN_E1, 0);
  6135  005E42  0E00               	movlw	0
  6136  005E44  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6137  005E46  0E21               	movlw	33
  6138  005E48  6E01               	movwf	digitalWrite@pin^0,c
  6139  005E4A  0E00               	movlw	0
  6140  005E4C  6E04               	movwf	(digitalWrite@value+1)^0,c
  6141  005E4E  0E00               	movlw	0
  6142  005E50  6E03               	movwf	digitalWrite@value^0,c
  6143  005E52  ECAA  F030         	call	_digitalWrite	;wreg free
  6144  005E56                     
  6145                           ;lcdData.c: 63:     PORTD= old_D;
  6146  005E56  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  6147  005E5A                     
  6148                           ;lcdData.c: 65:     if((cmd == 0x02)||(cmd == 0x01)){
  6149  005E5A  0E02               	movlw	2
  6150  005E5C  1808               	xorwf	lcdCommand@cmd^0,w,c
  6151  005E5E  B4D8               	btfsc	status,2,c
  6152  005E60  EF34  F02F         	goto	u1811
  6153  005E64  EF36  F02F         	goto	u1810
  6154  005E68                     u1811:
  6155  005E68  EF3E  F02F         	goto	l3188
  6156  005E6C                     u1810:
  6157  005E6C  0408               	decf	lcdCommand@cmd^0,w,c
  6158  005E6E  A4D8               	btfss	status,2,c
  6159  005E70  EF3C  F02F         	goto	u1821
  6160  005E74  EF3E  F02F         	goto	u1820
  6161  005E78                     u1821:
  6162  005E78  EF42  F02F         	goto	l3190
  6163  005E7C                     u1820:
  6164  005E7C                     l3188:
  6165                           
  6166                           ;lcdData.c: 66:        Delay2ms();
  6167  005E7C  EC3E  F02D         	call	_Delay2ms	;wreg free
  6168                           
  6169                           ;lcdData.c: 67:     }else{
  6170  005E80  EF44  F02F         	goto	l514
  6171  005E84                     l3190:
  6172                           
  6173                           ;lcdData.c: 68:     Delay40us();
  6174  005E84  EC32  F02D         	call	_Delay40us	;wreg free
  6175  005E88                     l514:
  6176  005E88  0012               	return		;funcret
  6177  005E8A                     __end_of_lcdCommand:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function _Delay2ms *****************
  6181 ;; Defined at:
  6182 ;;		line 37 in file "lcdData.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;		None
  6185 ;; Auto vars:     Size  Location     Type
  6186 ;;  i               1    1[COMRAM] unsigned char 
  6187 ;; Return value:  Size  Location     Type
  6188 ;;                  1    wreg      void 
  6189 ;; Registers used:
  6190 ;;		wreg, status,2, status,0, cstack
  6191 ;; Tracked objects:
  6192 ;;		On entry : 0/0
  6193 ;;		On exit  : 0/0
  6194 ;;		Unchanged: 0/0
  6195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6196 ;;      Params:         0       0       0       0       0       0       0
  6197 ;;      Locals:         1       0       0       0       0       0       0
  6198 ;;      Temps:          0       0       0       0       0       0       0
  6199 ;;      Totals:         1       0       0       0       0       0       0
  6200 ;;Total ram usage:        1 bytes
  6201 ;; Hardware stack levels used: 1
  6202 ;; Hardware stack levels required when called: 1
  6203 ;; This function calls:
  6204 ;;		_Delay40us
  6205 ;; This function is called by:
  6206 ;;		_lcdCommand
  6207 ;;		_lcdInit
  6208 ;; This function uses a non-reentrant model
  6209 ;;
  6210                           
  6211                           	psect	text16
  6212  005A7C                     __ptext16:
  6213                           	callstack 0
  6214  005A7C                     _Delay2ms:
  6215                           	callstack 27
  6216  005A7C                     
  6217                           ;lcdData.c: 39:  unsigned char i;;lcdData.c: 40:  for(i=0; i < 50; i++)
  6218  005A7C  0E00               	movlw	0
  6219  005A7E  6E02               	movwf	Delay2ms@i^0,c
  6220  005A80                     l1310:
  6221                           
  6222                           ;lcdData.c: 41:  {;lcdData.c: 42:   Delay40us();
  6223  005A80  EC32  F02D         	call	_Delay40us	;wreg free
  6224  005A84                     
  6225                           ;lcdData.c: 43:  }
  6226  005A84  2A02               	incf	Delay2ms@i^0,f,c
  6227  005A86  0E31               	movlw	49
  6228  005A88  6402               	cpfsgt	Delay2ms@i^0,c
  6229  005A8A  EF49  F02D         	goto	u241
  6230  005A8E  EF4B  F02D         	goto	u240
  6231  005A92                     u241:
  6232  005A92  EF40  F02D         	goto	l1310
  6233  005A96                     u240:
  6234  005A96  0012               	return		;funcret
  6235  005A98                     __end_of_Delay2ms:
  6236                           	callstack 0
  6237                           
  6238 ;; *************** function _lcdData *****************
  6239 ;; Defined at:
  6240 ;;		line 74 in file "lcdData.c"
  6241 ;; Parameters:    Size  Location     Type
  6242 ;;  valor           1    wreg     unsigned char 
  6243 ;; Auto vars:     Size  Location     Type
  6244 ;;  valor           1    6[COMRAM] unsigned char 
  6245 ;;  old_D           1    7[COMRAM] unsigned char 
  6246 ;; Return value:  Size  Location     Type
  6247 ;;                  1    wreg      void 
  6248 ;; Registers used:
  6249 ;;		wreg, status,2, status,0, cstack
  6250 ;; Tracked objects:
  6251 ;;		On entry : 0/0
  6252 ;;		On exit  : 0/0
  6253 ;;		Unchanged: 0/0
  6254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6255 ;;      Params:         0       0       0       0       0       0       0
  6256 ;;      Locals:         2       0       0       0       0       0       0
  6257 ;;      Temps:          0       0       0       0       0       0       0
  6258 ;;      Totals:         2       0       0       0       0       0       0
  6259 ;;Total ram usage:        2 bytes
  6260 ;; Hardware stack levels used: 1
  6261 ;; Hardware stack levels required when called: 1
  6262 ;; This function calls:
  6263 ;;		_Delay40us
  6264 ;;		_digitalWrite
  6265 ;; This function is called by:
  6266 ;;		_main
  6267 ;; This function uses a non-reentrant model
  6268 ;;
  6269                           
  6270                           	psect	text17
  6271  005C22                     __ptext17:
  6272                           	callstack 0
  6273  005C22                     _lcdData:
  6274                           	callstack 29
  6275                           
  6276                           ;incstack = 0
  6277                           ;lcdData@valor stored from wreg
  6278  005C22  6E07               	movwf	lcdData@valor^0,c
  6279  005C24                     
  6280                           ;lcdData.c: 74: void lcdData(unsigned char valor);lcdData.c: 75: {;lcdData.c: 77:     un
      +                          signed char old_D;;lcdData.c: 78:     old_D = PORTD;
  6281  005C24  CF83 F008          	movff	3971,lcdData@old_D	;volatile
  6282  005C28                     
  6283                           ;lcdData.c: 80:     TRISD = 0x00;
  6284  005C28  0E00               	movlw	0
  6285  005C2A  6E95               	movwf	149,c	;volatile
  6286  005C2C                     
  6287                           ;lcdData.c: 81:  digitalWrite(PIN_E2, 1);
  6288  005C2C  0E00               	movlw	0
  6289  005C2E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6290  005C30  0E22               	movlw	34
  6291  005C32  6E01               	movwf	digitalWrite@pin^0,c
  6292  005C34  0E00               	movlw	0
  6293  005C36  6E04               	movwf	(digitalWrite@value+1)^0,c
  6294  005C38  0E01               	movlw	1
  6295  005C3A  6E03               	movwf	digitalWrite@value^0,c
  6296  005C3C  ECAA  F030         	call	_digitalWrite	;wreg free
  6297  005C40                     
  6298                           ;lcdData.c: 83:  PORTD = valor;
  6299  005C40  C007  FF83         	movff	lcdData@valor,3971	;volatile
  6300  005C44                     
  6301                           ;lcdData.c: 85:     digitalWrite(PIN_E1, 1);
  6302  005C44  0E00               	movlw	0
  6303  005C46  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6304  005C48  0E21               	movlw	33
  6305  005C4A  6E01               	movwf	digitalWrite@pin^0,c
  6306  005C4C  0E00               	movlw	0
  6307  005C4E  6E04               	movwf	(digitalWrite@value+1)^0,c
  6308  005C50  0E01               	movlw	1
  6309  005C52  6E03               	movwf	digitalWrite@value^0,c
  6310  005C54  ECAA  F030         	call	_digitalWrite	;wreg free
  6311  005C58                     
  6312                           ;lcdData.c: 86:  digitalWrite(PIN_E1, 0);
  6313  005C58  0E00               	movlw	0
  6314  005C5A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6315  005C5C  0E21               	movlw	33
  6316  005C5E  6E01               	movwf	digitalWrite@pin^0,c
  6317  005C60  0E00               	movlw	0
  6318  005C62  6E04               	movwf	(digitalWrite@value+1)^0,c
  6319  005C64  0E00               	movlw	0
  6320  005C66  6E03               	movwf	digitalWrite@value^0,c
  6321  005C68  ECAA  F030         	call	_digitalWrite	;wreg free
  6322  005C6C                     
  6323                           ;lcdData.c: 88:     PORTD= old_D;
  6324  005C6C  C008  FF83         	movff	lcdData@old_D,3971	;volatile
  6325  005C70                     
  6326                           ;lcdData.c: 90:  Delay40us();
  6327  005C70  EC32  F02D         	call	_Delay40us	;wreg free
  6328  005C74  0012               	return		;funcret
  6329  005C76                     __end_of_lcdData:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _Delay40us *****************
  6333 ;; Defined at:
  6334 ;;		line 31 in file "lcdData.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;  i               1    0[COMRAM] unsigned char 
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2, status,0
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6348 ;;      Params:         0       0       0       0       0       0       0
  6349 ;;      Locals:         1       0       0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0
  6351 ;;      Totals:         1       0       0       0       0       0       0
  6352 ;;Total ram usage:        1 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; This function calls:
  6355 ;;		Nothing
  6356 ;; This function is called by:
  6357 ;;		_Delay2ms
  6358 ;;		_lcdCommand
  6359 ;;		_lcdData
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text18
  6364  005A64                     __ptext18:
  6365                           	callstack 0
  6366  005A64                     _Delay40us:
  6367                           	callstack 28
  6368  005A64                     
  6369                           ;lcdData.c: 33:  unsigned char i;;lcdData.c: 34:  for(i=0; i < 25; i++);
  6370  005A64  0E00               	movlw	0
  6371  005A66  6E01               	movwf	Delay40us@i^0,c
  6372  005A68                     l1242:
  6373  005A68  2A01               	incf	Delay40us@i^0,f,c
  6374  005A6A  0E18               	movlw	24
  6375  005A6C  6401               	cpfsgt	Delay40us@i^0,c
  6376  005A6E  EF3B  F02D         	goto	u11
  6377  005A72  EF3D  F02D         	goto	u10
  6378  005A76                     u11:
  6379  005A76  EF34  F02D         	goto	l1242
  6380  005A7A                     u10:
  6381  005A7A  0012               	return		;funcret
  6382  005A7C                     __end_of_Delay40us:
  6383                           	callstack 0
  6384                           
  6385 ;; *************** function _kpRead *****************
  6386 ;; Defined at:
  6387 ;;		line 35 in file "keypad.c"
  6388 ;; Parameters:    Size  Location     Type
  6389 ;;		None
  6390 ;; Auto vars:     Size  Location     Type
  6391 ;;		None
  6392 ;; Return value:  Size  Location     Type
  6393 ;;                  2    0[COMRAM] unsigned int 
  6394 ;; Registers used:
  6395 ;;		None
  6396 ;; Tracked objects:
  6397 ;;		On entry : 0/0
  6398 ;;		On exit  : 0/0
  6399 ;;		Unchanged: 0/0
  6400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6401 ;;      Params:         2       0       0       0       0       0       0
  6402 ;;      Locals:         0       0       0       0       0       0       0
  6403 ;;      Temps:          0       0       0       0       0       0       0
  6404 ;;      Totals:         2       0       0       0       0       0       0
  6405 ;;Total ram usage:        2 bytes
  6406 ;; Hardware stack levels used: 1
  6407 ;; This function calls:
  6408 ;;		Nothing
  6409 ;; This function is called by:
  6410 ;;		_main
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text19
  6415  005A5A                     __ptext19:
  6416                           	callstack 0
  6417  005A5A                     _kpRead:
  6418                           	callstack 30
  6419  005A5A                     
  6420                           ;keypad.c: 36:     return valor;
  6421  005A5A  C056  F001         	movff	_valor,?_kpRead
  6422  005A5E  C057  F002         	movff	_valor+1,?_kpRead+1
  6423  005A62  0012               	return		;funcret
  6424  005A64                     __end_of_kpRead:
  6425                           	callstack 0
  6426                           
  6427 ;; *************** function _kpInit *****************
  6428 ;; Defined at:
  6429 ;;		line 87 in file "keypad.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;		None
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6443 ;;      Params:         0       0       0       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0
  6446 ;;      Totals:         0       0       0       0       0       0       0
  6447 ;;Total ram usage:        0 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_main
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           	psect	text20
  6457  005A50                     __ptext20:
  6458                           	callstack 0
  6459  005A50                     _kpInit:
  6460                           	callstack 30
  6461  005A50                     
  6462                           ;keypad.c: 89:     TRISB &= 0x07;
  6463  005A50  0E07               	movlw	7
  6464  005A52  1693               	andwf	147,f,c	;volatile
  6465                           
  6466                           ;keypad.c: 91:     TRISD |= 0x0f;
  6467  005A54  0E0F               	movlw	15
  6468  005A56  1295               	iorwf	149,f,c	;volatile
  6469  005A58  0012               	return		;funcret
  6470  005A5A                     __end_of_kpInit:
  6471                           	callstack 0
  6472                           
  6473 ;; *************** function _kpDebounce *****************
  6474 ;; Defined at:
  6475 ;;		line 39 in file "keypad.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;		None
  6478 ;; Auto vars:     Size  Location     Type
  6479 ;;  k               2    6[COMRAM] int 
  6480 ;;  i               1    9[COMRAM] unsigned char 
  6481 ;;  j               1    8[COMRAM] unsigned char 
  6482 ;;  old_D           1    5[COMRAM] unsigned char 
  6483 ;; Return value:  Size  Location     Type
  6484 ;;                  1    wreg      void 
  6485 ;; Registers used:
  6486 ;;		wreg, status,2, status,0, prodl, prodh
  6487 ;; Tracked objects:
  6488 ;;		On entry : 0/0
  6489 ;;		On exit  : 0/0
  6490 ;;		Unchanged: 0/0
  6491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6492 ;;      Params:         0       0       0       0       0       0       0
  6493 ;;      Locals:         5       0       0       0       0       0       0
  6494 ;;      Temps:          5       0       0       0       0       0       0
  6495 ;;      Totals:        10       0       0       0       0       0       0
  6496 ;;Total ram usage:       10 bytes
  6497 ;; Hardware stack levels used: 1
  6498 ;; This function calls:
  6499 ;;		Nothing
  6500 ;; This function is called by:
  6501 ;;		_main
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           	psect	text21
  6506  005FDA                     __ptext21:
  6507                           	callstack 0
  6508  005FDA                     _kpDebounce:
  6509                           	callstack 30
  6510  005FDA                     
  6511                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  6512  005FDA  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  6513  005FDE                     
  6514                           ;keypad.c: 51:     TRISD |= 0x0f;
  6515  005FDE  0E0F               	movlw	15
  6516  005FE0  1295               	iorwf	149,f,c	;volatile
  6517  005FE2                     
  6518                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  6519  005FE2  0E00               	movlw	0
  6520  005FE4  6E0A               	movwf	kpDebounce@i^0,c
  6521  005FE6                     l1596:
  6522                           
  6523                           ;keypad.c: 55:         TRISB &= 0xF8;
  6524  005FE6  0EF8               	movlw	248
  6525  005FE8  1693               	andwf	147,f,c	;volatile
  6526                           
  6527                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  6528  005FEA  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6529  005FEE  0E01               	movlw	1
  6530  005FF0  6E02               	movwf	(??_kpDebounce+1)^0,c
  6531  005FF2  2A01               	incf	??_kpDebounce^0,f,c
  6532  005FF4  EFFE  F02F         	goto	u604
  6533  005FF8                     u605:
  6534  005FF8  90D8               	bcf	status,0,c
  6535  005FFA  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6536  005FFC                     u604:
  6537  005FFC  2E01               	decfsz	??_kpDebounce^0,f,c
  6538  005FFE  EFFC  F02F         	goto	u605
  6539  006002  5002               	movf	(??_kpDebounce+1)^0,w,c
  6540  006004  1293               	iorwf	147,f,c	;volatile
  6541                           
  6542                           ;keypad.c: 59:         PORTB |= 0x07;
  6543  006006  0E07               	movlw	7
  6544  006008  1281               	iorwf	129,f,c	;volatile
  6545                           
  6546                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  6547  00600A  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  6548  00600E  0E01               	movlw	1
  6549  006010  6E02               	movwf	(??_kpDebounce+1)^0,c
  6550  006012  2A01               	incf	??_kpDebounce^0,f,c
  6551  006014  EF0E  F030         	goto	u614
  6552  006018                     u615:
  6553  006018  90D8               	bcf	status,0,c
  6554  00601A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6555  00601C                     u614:
  6556  00601C  2E01               	decfsz	??_kpDebounce^0,f,c
  6557  00601E  EF0C  F030         	goto	u615
  6558  006022  5002               	movf	(??_kpDebounce+1)^0,w,c
  6559  006024  0AFF               	xorlw	255
  6560  006026  1681               	andwf	129,f,c	;volatile
  6561  006028                     
  6562                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  6563  006028  0E00               	movlw	0
  6564  00602A  6E08               	movwf	(kpDebounce@k+1)^0,c
  6565  00602C  0E00               	movlw	0
  6566  00602E  6E07               	movwf	kpDebounce@k^0,c
  6567  006030                     l1604:
  6568  006030  4A07               	infsnz	kpDebounce@k^0,f,c
  6569  006032  2A08               	incf	(kpDebounce@k+1)^0,f,c
  6570  006034  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  6571  006036  EF26  F030         	goto	u621
  6572  00603A  5008               	movf	(kpDebounce@k+1)^0,w,c
  6573  00603C  E109               	bnz	u620
  6574  00603E  0E0A               	movlw	10
  6575  006040  5C07               	subwf	kpDebounce@k^0,w,c
  6576  006042  A0D8               	btfss	status,0,c
  6577  006044  EF26  F030         	goto	u621
  6578  006048  EF28  F030         	goto	u620
  6579  00604C                     u621:
  6580  00604C  EF18  F030         	goto	l1604
  6581  006050                     u620:
  6582  006050                     
  6583                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  6584  006050  0E00               	movlw	0
  6585  006052  6E09               	movwf	kpDebounce@j^0,c
  6586  006054                     l1614:
  6587                           
  6588                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  6589  006054  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  6590  006058  0E01               	movlw	1
  6591  00605A  6E02               	movwf	(??_kpDebounce+1)^0,c
  6592  00605C  2A01               	incf	??_kpDebounce^0,f,c
  6593  00605E  EF33  F030         	goto	u634
  6594  006062                     u635:
  6595  006062  90D8               	bcf	status,0,c
  6596  006064  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6597  006066                     u634:
  6598  006066  2E01               	decfsz	??_kpDebounce^0,f,c
  6599  006068  EF31  F030         	goto	u635
  6600  00606C  5002               	movf	(??_kpDebounce+1)^0,w,c
  6601  00606E  1483               	andwf	131,w,c	;volatile
  6602  006070  0900               	iorlw	0
  6603  006072  A4D8               	btfss	status,2,c
  6604  006074  EF3E  F030         	goto	u641
  6605  006078  EF40  F030         	goto	u640
  6606  00607C                     u641:
  6607  00607C  EF58  F030         	goto	l1618
  6608  006080                     u640:
  6609  006080                     
  6610                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  6611  006080  500A               	movf	kpDebounce@i^0,w,c
  6612  006082  0D04               	mullw	4
  6613  006084  50F3               	movf	243,w,c
  6614  006086  2409               	addwf	kpDebounce@j^0,w,c
  6615  006088  6E01               	movwf	??_kpDebounce^0,c
  6616  00608A  0E01               	movlw	1
  6617  00608C  6E02               	movwf	(??_kpDebounce+1)^0,c
  6618  00608E  0E00               	movlw	0
  6619  006090  6E03               	movwf	(??_kpDebounce+2)^0,c
  6620  006092  2A01               	incf	??_kpDebounce^0,f,c
  6621  006094  EF4F  F030         	goto	u654
  6622  006098                     u655:
  6623  006098  90D8               	bcf	status,0,c
  6624  00609A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6625  00609C  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6626  00609E                     u654:
  6627  00609E  2E01               	decfsz	??_kpDebounce^0,f,c
  6628  0060A0  EF4C  F030         	goto	u655
  6629  0060A4  5002               	movf	(??_kpDebounce+1)^0,w,c
  6630  0060A6  1254               	iorwf	kpDebounce@valorNovo^0,f,c
  6631  0060A8  5003               	movf	(??_kpDebounce+2)^0,w,c
  6632  0060AA  1255               	iorwf	(kpDebounce@valorNovo+1)^0,f,c
  6633                           
  6634                           ;keypad.c: 69:             } else {
  6635  0060AC  EF72  F030         	goto	l1620
  6636  0060B0                     l1618:
  6637                           
  6638                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  6639  0060B0  500A               	movf	kpDebounce@i^0,w,c
  6640  0060B2  0D04               	mullw	4
  6641  0060B4  50F3               	movf	243,w,c
  6642  0060B6  2409               	addwf	kpDebounce@j^0,w,c
  6643  0060B8  6E01               	movwf	??_kpDebounce^0,c
  6644  0060BA  0E01               	movlw	1
  6645  0060BC  6E02               	movwf	(??_kpDebounce+1)^0,c
  6646  0060BE  0E00               	movlw	0
  6647  0060C0  6E03               	movwf	(??_kpDebounce+2)^0,c
  6648  0060C2  2A01               	incf	??_kpDebounce^0,f,c
  6649  0060C4  EF67  F030         	goto	u664
  6650  0060C8                     u665:
  6651  0060C8  90D8               	bcf	status,0,c
  6652  0060CA  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  6653  0060CC  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  6654  0060CE                     u664:
  6655  0060CE  2E01               	decfsz	??_kpDebounce^0,f,c
  6656  0060D0  EF64  F030         	goto	u665
  6657  0060D4  1C02               	comf	(??_kpDebounce+1)^0,w,c
  6658  0060D6  6E04               	movwf	(??_kpDebounce+3)^0,c
  6659  0060D8  1C03               	comf	(??_kpDebounce+2)^0,w,c
  6660  0060DA  6E05               	movwf	(??_kpDebounce+4)^0,c
  6661  0060DC  5004               	movf	(??_kpDebounce+3)^0,w,c
  6662  0060DE  1654               	andwf	kpDebounce@valorNovo^0,f,c
  6663  0060E0  5005               	movf	(??_kpDebounce+4)^0,w,c
  6664  0060E2  1655               	andwf	(kpDebounce@valorNovo+1)^0,f,c
  6665  0060E4                     l1620:
  6666                           
  6667                           ;keypad.c: 72:         }
  6668  0060E4  2A09               	incf	kpDebounce@j^0,f,c
  6669  0060E6  0E03               	movlw	3
  6670  0060E8  6409               	cpfsgt	kpDebounce@j^0,c
  6671  0060EA  EF79  F030         	goto	u671
  6672  0060EE  EF7B  F030         	goto	u670
  6673  0060F2                     u671:
  6674  0060F2  EF2A  F030         	goto	l1614
  6675  0060F6                     u670:
  6676  0060F6                     
  6677                           ;keypad.c: 73:     }
  6678  0060F6  2A0A               	incf	kpDebounce@i^0,f,c
  6679  0060F8  0E02               	movlw	2
  6680  0060FA  640A               	cpfsgt	kpDebounce@i^0,c
  6681  0060FC  EF82  F030         	goto	u681
  6682  006100  EF84  F030         	goto	u680
  6683  006104                     u681:
  6684  006104  EFF3  F02F         	goto	l1596
  6685  006108                     u680:
  6686  006108                     
  6687                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  6688  006108  5054               	movf	kpDebounce@valorNovo^0,w,c
  6689  00610A  1852               	xorwf	kpDebounce@valorAntigo^0,w,c
  6690  00610C  E107               	bnz	u691
  6691  00610E  5055               	movf	(kpDebounce@valorNovo+1)^0,w,c
  6692  006110  1853               	xorwf	(kpDebounce@valorAntigo+1)^0,w,c
  6693  006112  A4D8               	btfss	status,2,c
  6694  006114  EF8E  F030         	goto	u691
  6695  006118  EF90  F030         	goto	u690
  6696  00611C                     u691:
  6697  00611C  EF93  F030         	goto	l1632
  6698  006120                     u690:
  6699  006120                     
  6700                           ;keypad.c: 75:         tempo--;
  6701  006120  065E               	decf	kpDebounce@tempo^0,f,c
  6702                           
  6703                           ;keypad.c: 76:     } else {
  6704  006122  EF99  F030         	goto	l309
  6705  006126                     l1632:
  6706                           
  6707                           ;keypad.c: 77:         tempo = 10;
  6708  006126  0E0A               	movlw	10
  6709  006128  6E5E               	movwf	kpDebounce@tempo^0,c
  6710  00612A                     
  6711                           ;keypad.c: 78:         valorAntigo = valorNovo;
  6712  00612A  C054  F052         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  6713  00612E  C055  F053         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  6714  006132                     l309:
  6715                           
  6716                           ;keypad.c: 80:     if (tempo == 0) {
  6717  006132  505E               	movf	kpDebounce@tempo^0,w,c
  6718  006134  A4D8               	btfss	status,2,c
  6719  006136  EF9F  F030         	goto	u701
  6720  00613A  EFA1  F030         	goto	u700
  6721  00613E                     u701:
  6722  00613E  EFA5  F030         	goto	l310
  6723  006142                     u700:
  6724  006142                     
  6725                           ;keypad.c: 81:         valor = valorAntigo;
  6726  006142  C052  F056         	movff	kpDebounce@valorAntigo,_valor
  6727  006146  C053  F057         	movff	kpDebounce@valorAntigo+1,_valor+1
  6728  00614A                     l310:
  6729                           
  6730                           ;keypad.c: 83:     PORTD = old_D;
  6731  00614A  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  6732  00614E                     
  6733                           ;keypad.c: 84:     TRISD = 0x00;
  6734  00614E  0E00               	movlw	0
  6735  006150  6E95               	movwf	149,c	;volatile
  6736  006152  0012               	return		;funcret
  6737  006154                     __end_of_kpDebounce:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function _desligarCooler *****************
  6741 ;; Defined at:
  6742 ;;		line 42 in file "main.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6756 ;;      Params:         0       0       0       0       0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0       0       0
  6759 ;;      Totals:         0       0       0       0       0       0       0
  6760 ;;Total ram usage:        0 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_main
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           	psect	text22
  6770  005A38                     __ptext22:
  6771                           	callstack 0
  6772  005A38                     _desligarCooler:
  6773                           	callstack 30
  6774  005A38                     
  6775                           ;main.c: 43:     (*(volatile __near unsigned char*)0xF94) = 0x01;
  6776  005A38  0E01               	movlw	1
  6777  005A3A  6E94               	movwf	148,c	;volatile
  6778  005A3C                     
  6779                           ;main.c: 44:     (((*(volatile __near unsigned char*)0xF82)) &= ~(1<<(2)));
  6780  005A3C  9482               	bcf	130,2,c	;volatile
  6781  005A3E  0012               	return		;funcret
  6782  005A40                     __end_of_desligarCooler:
  6783                           	callstack 0
  6784                           
  6785 ;; *************** function _desligaRele2 *****************
  6786 ;; Defined at:
  6787 ;;		line 69 in file "main.c"
  6788 ;; Parameters:    Size  Location     Type
  6789 ;;		None
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  1    wreg      void 
  6794 ;; Registers used:
  6795 ;;		None
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6801 ;;      Params:         0       0       0       0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0       0       0
  6804 ;;      Totals:         0       0       0       0       0       0       0
  6805 ;;Total ram usage:        0 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_main
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text23
  6815  005A26                     __ptext23:
  6816                           	callstack 0
  6817  005A26                     _desligaRele2:
  6818                           	callstack 30
  6819  005A26                     
  6820                           ;main.c: 70:     TRISEbits.TRISE0 = 0;
  6821  005A26  9096               	bcf	150,0,c	;volatile
  6822                           
  6823                           ;main.c: 71:     PORTEbits.RE0 = 0;
  6824  005A28  9084               	bcf	132,0,c	;volatile
  6825  005A2A  0012               	return		;funcret
  6826  005A2C                     __end_of_desligaRele2:
  6827                           	callstack 0
  6828                           
  6829 ;; *************** function _desligaRele1 *****************
  6830 ;; Defined at:
  6831 ;;		line 59 in file "main.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;		None
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  1    wreg      void 
  6838 ;; Registers used:
  6839 ;;		None
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6845 ;;      Params:         0       0       0       0       0       0       0
  6846 ;;      Locals:         0       0       0       0       0       0       0
  6847 ;;      Temps:          0       0       0       0       0       0       0
  6848 ;;      Totals:         0       0       0       0       0       0       0
  6849 ;;Total ram usage:        0 bytes
  6850 ;; Hardware stack levels used: 1
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_main
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text24
  6859  005A20                     __ptext24:
  6860                           	callstack 0
  6861  005A20                     _desligaRele1:
  6862                           	callstack 30
  6863  005A20                     
  6864                           ;main.c: 60:     TRISCbits.TRISC0 = 0;
  6865  005A20  9094               	bcf	148,0,c	;volatile
  6866                           
  6867                           ;main.c: 61:     PORTCbits.RC0 = 0;
  6868  005A22  9082               	bcf	130,0,c	;volatile
  6869  005A24  0012               	return		;funcret
  6870  005A26                     __end_of_desligaRele1:
  6871                           	callstack 0
  6872                           
  6873 ;; *************** function _desligaDisplays *****************
  6874 ;; Defined at:
  6875 ;;		line 47 in file "main.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;		None
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  1    wreg      void 
  6882 ;; Registers used:
  6883 ;;		wreg, status,2, status,0, cstack
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/0
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6889 ;;      Params:         0       0       0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0
  6892 ;;      Totals:         0       0       0       0       0       0       0
  6893 ;;Total ram usage:        0 bytes
  6894 ;; Hardware stack levels used: 1
  6895 ;; Hardware stack levels required when called: 1
  6896 ;; This function calls:
  6897 ;;		_digitalWrite
  6898 ;; This function is called by:
  6899 ;;		_main
  6900 ;; This function uses a non-reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text25
  6904  005BD0                     __ptext25:
  6905                           	callstack 0
  6906  005BD0                     _desligaDisplays:
  6907                           	callstack 29
  6908  005BD0                     
  6909                           ;main.c: 48:     digitalWrite(PIN_A2, 0);
  6910  005BD0  0E00               	movlw	0
  6911  005BD2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6912  005BD4  0E02               	movlw	2
  6913  005BD6  6E01               	movwf	digitalWrite@pin^0,c
  6914  005BD8  0E00               	movlw	0
  6915  005BDA  6E04               	movwf	(digitalWrite@value+1)^0,c
  6916  005BDC  0E00               	movlw	0
  6917  005BDE  6E03               	movwf	digitalWrite@value^0,c
  6918  005BE0  ECAA  F030         	call	_digitalWrite	;wreg free
  6919                           
  6920                           ;main.c: 49:     digitalWrite(PIN_A3, 0);
  6921  005BE4  0E00               	movlw	0
  6922  005BE6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6923  005BE8  0E03               	movlw	3
  6924  005BEA  6E01               	movwf	digitalWrite@pin^0,c
  6925  005BEC  0E00               	movlw	0
  6926  005BEE  6E04               	movwf	(digitalWrite@value+1)^0,c
  6927  005BF0  0E00               	movlw	0
  6928  005BF2  6E03               	movwf	digitalWrite@value^0,c
  6929  005BF4  ECAA  F030         	call	_digitalWrite	;wreg free
  6930                           
  6931                           ;main.c: 50:     digitalWrite(PIN_A4, 0);
  6932  005BF8  0E00               	movlw	0
  6933  005BFA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6934  005BFC  0E04               	movlw	4
  6935  005BFE  6E01               	movwf	digitalWrite@pin^0,c
  6936  005C00  0E00               	movlw	0
  6937  005C02  6E04               	movwf	(digitalWrite@value+1)^0,c
  6938  005C04  0E00               	movlw	0
  6939  005C06  6E03               	movwf	digitalWrite@value^0,c
  6940  005C08  ECAA  F030         	call	_digitalWrite	;wreg free
  6941                           
  6942                           ;main.c: 51:     digitalWrite(PIN_A5, 0);
  6943  005C0C  0E00               	movlw	0
  6944  005C0E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  6945  005C10  0E05               	movlw	5
  6946  005C12  6E01               	movwf	digitalWrite@pin^0,c
  6947  005C14  0E00               	movlw	0
  6948  005C16  6E04               	movwf	(digitalWrite@value+1)^0,c
  6949  005C18  0E00               	movlw	0
  6950  005C1A  6E03               	movwf	digitalWrite@value^0,c
  6951  005C1C  ECAA  F030         	call	_digitalWrite	;wreg free
  6952  005C20  0012               	return		;funcret
  6953  005C22                     __end_of_desligaDisplays:
  6954                           	callstack 0
  6955                           
  6956 ;; *************** function _digitalWrite *****************
  6957 ;; Defined at:
  6958 ;;		line 14 in file "io.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;  pin             2    0[COMRAM] int 
  6961 ;;  value           2    2[COMRAM] int 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg, status,2, status,0
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6973 ;;      Params:         4       0       0       0       0       0       0
  6974 ;;      Locals:         0       0       0       0       0       0       0
  6975 ;;      Temps:          2       0       0       0       0       0       0
  6976 ;;      Totals:         6       0       0       0       0       0       0
  6977 ;;Total ram usage:        6 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_desligaDisplays
  6983 ;;		_lcdCommand
  6984 ;;		_lcdData
  6985 ;;		_ssdUpdate
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           	psect	text26
  6990  006154                     __ptext26:
  6991                           	callstack 0
  6992  006154                     _digitalWrite:
  6993                           	callstack 29
  6994  006154                     
  6995                           ;io.c: 16:     if(pin <8){
  6996  006154  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  6997  006156  EFB8  F030         	goto	u1590
  6998  00615A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  6999  00615C  E107               	bnz	u1591
  7000  00615E  0E08               	movlw	8
  7001  006160  5C01               	subwf	digitalWrite@pin^0,w,c
  7002  006162  B0D8               	btfsc	status,0,c
  7003  006164  EFB6  F030         	goto	u1591
  7004  006168  EFB8  F030         	goto	u1590
  7005  00616C                     u1591:
  7006  00616C  EFE2  F030         	goto	l3122
  7007  006170                     u1590:
  7008  006170                     
  7009                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  7010  006170  5003               	movf	digitalWrite@value^0,w,c
  7011  006172  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7012  006174  B4D8               	btfsc	status,2,c
  7013  006176  EFBF  F030         	goto	u1601
  7014  00617A  EFC1  F030         	goto	u1600
  7015  00617E                     u1601:
  7016  00617E  EFD1  F030         	goto	l3120
  7017  006182                     u1600:
  7018  006182  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7019  006186  0E01               	movlw	1
  7020  006188  6E06               	movwf	(??_digitalWrite+1)^0,c
  7021  00618A  2A05               	incf	??_digitalWrite^0,f,c
  7022  00618C  EFCA  F030         	goto	u1614
  7023  006190                     u1615:
  7024  006190  90D8               	bcf	status,0,c
  7025  006192  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7026  006194                     u1614:
  7027  006194  2E05               	decfsz	??_digitalWrite^0,f,c
  7028  006196  EFC8  F030         	goto	u1615
  7029  00619A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7030  00619C  1280               	iorwf	128,f,c	;volatile
  7031  00619E  EFD0  F031         	goto	l244
  7032  0061A2                     l3120:
  7033  0061A2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7034  0061A6  0E01               	movlw	1
  7035  0061A8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7036  0061AA  2A05               	incf	??_digitalWrite^0,f,c
  7037  0061AC  EFDA  F030         	goto	u1624
  7038  0061B0                     u1625:
  7039  0061B0  90D8               	bcf	status,0,c
  7040  0061B2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7041  0061B4                     u1624:
  7042  0061B4  2E05               	decfsz	??_digitalWrite^0,f,c
  7043  0061B6  EFD8  F030         	goto	u1625
  7044  0061BA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7045  0061BC  0AFF               	xorlw	255
  7046  0061BE  1680               	andwf	128,f,c	;volatile
  7047  0061C0  EFD0  F031         	goto	l244
  7048  0061C4                     l3122:
  7049  0061C4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7050  0061C6  EFF0  F030         	goto	u1630
  7051  0061CA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7052  0061CC  E107               	bnz	u1631
  7053  0061CE  0E10               	movlw	16
  7054  0061D0  5C01               	subwf	digitalWrite@pin^0,w,c
  7055  0061D2  B0D8               	btfsc	status,0,c
  7056  0061D4  EFEE  F030         	goto	u1631
  7057  0061D8  EFF0  F030         	goto	u1630
  7058  0061DC                     u1631:
  7059  0061DC  EF1E  F031         	goto	l3130
  7060  0061E0                     u1630:
  7061  0061E0                     
  7062                           ;io.c: 20:         pin -=8;
  7063  0061E0  0EF8               	movlw	248
  7064  0061E2  2601               	addwf	digitalWrite@pin^0,f,c
  7065  0061E4  0EFF               	movlw	255
  7066  0061E6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7067                           
  7068                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7069  0061E8  5003               	movf	digitalWrite@value^0,w,c
  7070  0061EA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7071  0061EC  B4D8               	btfsc	status,2,c
  7072  0061EE  EFFB  F030         	goto	u1641
  7073  0061F2  EFFD  F030         	goto	u1640
  7074  0061F6                     u1641:
  7075  0061F6  EF0D  F031         	goto	l3128
  7076  0061FA                     u1640:
  7077  0061FA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7078  0061FE  0E01               	movlw	1
  7079  006200  6E06               	movwf	(??_digitalWrite+1)^0,c
  7080  006202  2A05               	incf	??_digitalWrite^0,f,c
  7081  006204  EF06  F031         	goto	u1654
  7082  006208                     u1655:
  7083  006208  90D8               	bcf	status,0,c
  7084  00620A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7085  00620C                     u1654:
  7086  00620C  2E05               	decfsz	??_digitalWrite^0,f,c
  7087  00620E  EF04  F031         	goto	u1655
  7088  006212  5006               	movf	(??_digitalWrite+1)^0,w,c
  7089  006214  1281               	iorwf	129,f,c	;volatile
  7090  006216  EFD0  F031         	goto	l244
  7091  00621A                     l3128:
  7092  00621A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7093  00621E  0E01               	movlw	1
  7094  006220  6E06               	movwf	(??_digitalWrite+1)^0,c
  7095  006222  2A05               	incf	??_digitalWrite^0,f,c
  7096  006224  EF16  F031         	goto	u1664
  7097  006228                     u1665:
  7098  006228  90D8               	bcf	status,0,c
  7099  00622A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7100  00622C                     u1664:
  7101  00622C  2E05               	decfsz	??_digitalWrite^0,f,c
  7102  00622E  EF14  F031         	goto	u1665
  7103  006232  5006               	movf	(??_digitalWrite+1)^0,w,c
  7104  006234  0AFF               	xorlw	255
  7105  006236  1681               	andwf	129,f,c	;volatile
  7106  006238  EFD0  F031         	goto	l244
  7107  00623C                     l3130:
  7108  00623C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7109  00623E  EF2C  F031         	goto	u1670
  7110  006242  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7111  006244  E107               	bnz	u1671
  7112  006246  0E18               	movlw	24
  7113  006248  5C01               	subwf	digitalWrite@pin^0,w,c
  7114  00624A  B0D8               	btfsc	status,0,c
  7115  00624C  EF2A  F031         	goto	u1671
  7116  006250  EF2C  F031         	goto	u1670
  7117  006254                     u1671:
  7118  006254  EF5A  F031         	goto	l3138
  7119  006258                     u1670:
  7120  006258                     
  7121                           ;io.c: 24:         pin -=16;
  7122  006258  0EF0               	movlw	240
  7123  00625A  2601               	addwf	digitalWrite@pin^0,f,c
  7124  00625C  0EFF               	movlw	255
  7125  00625E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7126                           
  7127                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7128  006260  5003               	movf	digitalWrite@value^0,w,c
  7129  006262  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7130  006264  B4D8               	btfsc	status,2,c
  7131  006266  EF37  F031         	goto	u1681
  7132  00626A  EF39  F031         	goto	u1680
  7133  00626E                     u1681:
  7134  00626E  EF49  F031         	goto	l3136
  7135  006272                     u1680:
  7136  006272  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7137  006276  0E01               	movlw	1
  7138  006278  6E06               	movwf	(??_digitalWrite+1)^0,c
  7139  00627A  2A05               	incf	??_digitalWrite^0,f,c
  7140  00627C  EF42  F031         	goto	u1694
  7141  006280                     u1695:
  7142  006280  90D8               	bcf	status,0,c
  7143  006282  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7144  006284                     u1694:
  7145  006284  2E05               	decfsz	??_digitalWrite^0,f,c
  7146  006286  EF40  F031         	goto	u1695
  7147  00628A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7148  00628C  1282               	iorwf	130,f,c	;volatile
  7149  00628E  EFD0  F031         	goto	l244
  7150  006292                     l3136:
  7151  006292  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7152  006296  0E01               	movlw	1
  7153  006298  6E06               	movwf	(??_digitalWrite+1)^0,c
  7154  00629A  2A05               	incf	??_digitalWrite^0,f,c
  7155  00629C  EF52  F031         	goto	u1704
  7156  0062A0                     u1705:
  7157  0062A0  90D8               	bcf	status,0,c
  7158  0062A2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7159  0062A4                     u1704:
  7160  0062A4  2E05               	decfsz	??_digitalWrite^0,f,c
  7161  0062A6  EF50  F031         	goto	u1705
  7162  0062AA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7163  0062AC  0AFF               	xorlw	255
  7164  0062AE  1682               	andwf	130,f,c	;volatile
  7165  0062B0  EFD0  F031         	goto	l244
  7166  0062B4                     l3138:
  7167  0062B4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7168  0062B6  EF68  F031         	goto	u1710
  7169  0062BA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7170  0062BC  E107               	bnz	u1711
  7171  0062BE  0E20               	movlw	32
  7172  0062C0  5C01               	subwf	digitalWrite@pin^0,w,c
  7173  0062C2  B0D8               	btfsc	status,0,c
  7174  0062C4  EF66  F031         	goto	u1711
  7175  0062C8  EF68  F031         	goto	u1710
  7176  0062CC                     u1711:
  7177  0062CC  EF96  F031         	goto	l3146
  7178  0062D0                     u1710:
  7179  0062D0                     
  7180                           ;io.c: 28:         pin -=24;
  7181  0062D0  0EE8               	movlw	232
  7182  0062D2  2601               	addwf	digitalWrite@pin^0,f,c
  7183  0062D4  0EFF               	movlw	255
  7184  0062D6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7185                           
  7186                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7187  0062D8  5003               	movf	digitalWrite@value^0,w,c
  7188  0062DA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7189  0062DC  B4D8               	btfsc	status,2,c
  7190  0062DE  EF73  F031         	goto	u1721
  7191  0062E2  EF75  F031         	goto	u1720
  7192  0062E6                     u1721:
  7193  0062E6  EF85  F031         	goto	l3144
  7194  0062EA                     u1720:
  7195  0062EA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7196  0062EE  0E01               	movlw	1
  7197  0062F0  6E06               	movwf	(??_digitalWrite+1)^0,c
  7198  0062F2  2A05               	incf	??_digitalWrite^0,f,c
  7199  0062F4  EF7E  F031         	goto	u1734
  7200  0062F8                     u1735:
  7201  0062F8  90D8               	bcf	status,0,c
  7202  0062FA  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7203  0062FC                     u1734:
  7204  0062FC  2E05               	decfsz	??_digitalWrite^0,f,c
  7205  0062FE  EF7C  F031         	goto	u1735
  7206  006302  5006               	movf	(??_digitalWrite+1)^0,w,c
  7207  006304  1283               	iorwf	131,f,c	;volatile
  7208  006306  EFD0  F031         	goto	l244
  7209  00630A                     l3144:
  7210  00630A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7211  00630E  0E01               	movlw	1
  7212  006310  6E06               	movwf	(??_digitalWrite+1)^0,c
  7213  006312  2A05               	incf	??_digitalWrite^0,f,c
  7214  006314  EF8E  F031         	goto	u1744
  7215  006318                     u1745:
  7216  006318  90D8               	bcf	status,0,c
  7217  00631A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7218  00631C                     u1744:
  7219  00631C  2E05               	decfsz	??_digitalWrite^0,f,c
  7220  00631E  EF8C  F031         	goto	u1745
  7221  006322  5006               	movf	(??_digitalWrite+1)^0,w,c
  7222  006324  0AFF               	xorlw	255
  7223  006326  1683               	andwf	131,f,c	;volatile
  7224  006328  EFD0  F031         	goto	l244
  7225  00632C                     l3146:
  7226  00632C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7227  00632E  EFA4  F031         	goto	u1750
  7228  006332  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7229  006334  E107               	bnz	u1751
  7230  006336  0E28               	movlw	40
  7231  006338  5C01               	subwf	digitalWrite@pin^0,w,c
  7232  00633A  B0D8               	btfsc	status,0,c
  7233  00633C  EFA2  F031         	goto	u1751
  7234  006340  EFA4  F031         	goto	u1750
  7235  006344                     u1751:
  7236  006344  EFD0  F031         	goto	l244
  7237  006348                     u1750:
  7238  006348                     
  7239                           ;io.c: 32:         pin -=32;
  7240  006348  0EE0               	movlw	224
  7241  00634A  2601               	addwf	digitalWrite@pin^0,f,c
  7242  00634C  0EFF               	movlw	255
  7243  00634E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7244                           
  7245                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7246  006350  5003               	movf	digitalWrite@value^0,w,c
  7247  006352  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7248  006354  B4D8               	btfsc	status,2,c
  7249  006356  EFAF  F031         	goto	u1761
  7250  00635A  EFB1  F031         	goto	u1760
  7251  00635E                     u1761:
  7252  00635E  EFC1  F031         	goto	l3152
  7253  006362                     u1760:
  7254  006362  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7255  006366  0E01               	movlw	1
  7256  006368  6E06               	movwf	(??_digitalWrite+1)^0,c
  7257  00636A  2A05               	incf	??_digitalWrite^0,f,c
  7258  00636C  EFBA  F031         	goto	u1774
  7259  006370                     u1775:
  7260  006370  90D8               	bcf	status,0,c
  7261  006372  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7262  006374                     u1774:
  7263  006374  2E05               	decfsz	??_digitalWrite^0,f,c
  7264  006376  EFB8  F031         	goto	u1775
  7265  00637A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7266  00637C  1284               	iorwf	132,f,c	;volatile
  7267  00637E  EFD0  F031         	goto	l244
  7268  006382                     l3152:
  7269  006382  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7270  006386  0E01               	movlw	1
  7271  006388  6E06               	movwf	(??_digitalWrite+1)^0,c
  7272  00638A  2A05               	incf	??_digitalWrite^0,f,c
  7273  00638C  EFCA  F031         	goto	u1784
  7274  006390                     u1785:
  7275  006390  90D8               	bcf	status,0,c
  7276  006392  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7277  006394                     u1784:
  7278  006394  2E05               	decfsz	??_digitalWrite^0,f,c
  7279  006396  EFC8  F031         	goto	u1785
  7280  00639A  5006               	movf	(??_digitalWrite+1)^0,w,c
  7281  00639C  0AFF               	xorlw	255
  7282  00639E  1684               	andwf	132,f,c	;volatile
  7283  0063A0                     l244:
  7284  0063A0  0012               	return		;funcret
  7285  0063A2                     __end_of_digitalWrite:
  7286                           	callstack 0
  7287                           
  7288                           	psect	rparam
  7289  0000                     
  7290                           	psect	idloc
  7291                           
  7292                           ;Config register IDLOC0 @ 0x200000
  7293                           ;	unspecified, using default values
  7294  200000                     	org	2097152
  7295  200000  FF                 	db	255
  7296                           
  7297                           ;Config register IDLOC1 @ 0x200001
  7298                           ;	unspecified, using default values
  7299  200001                     	org	2097153
  7300  200001  FF                 	db	255
  7301                           
  7302                           ;Config register IDLOC2 @ 0x200002
  7303                           ;	unspecified, using default values
  7304  200002                     	org	2097154
  7305  200002  FF                 	db	255
  7306                           
  7307                           ;Config register IDLOC3 @ 0x200003
  7308                           ;	unspecified, using default values
  7309  200003                     	org	2097155
  7310  200003  FF                 	db	255
  7311                           
  7312                           ;Config register IDLOC4 @ 0x200004
  7313                           ;	unspecified, using default values
  7314  200004                     	org	2097156
  7315  200004  FF                 	db	255
  7316                           
  7317                           ;Config register IDLOC5 @ 0x200005
  7318                           ;	unspecified, using default values
  7319  200005                     	org	2097157
  7320  200005  FF                 	db	255
  7321                           
  7322                           ;Config register IDLOC6 @ 0x200006
  7323                           ;	unspecified, using default values
  7324  200006                     	org	2097158
  7325  200006  FF                 	db	255
  7326                           
  7327                           ;Config register IDLOC7 @ 0x200007
  7328                           ;	unspecified, using default values
  7329  200007                     	org	2097159
  7330  200007  FF                 	db	255
  7331                           
  7332                           	psect	config
  7333                           
  7334                           ; Padding undefined space
  7335  300000                     	org	3145728
  7336  300000  FF                 	db	255
  7337                           
  7338                           ;Config register CONFIG1H @ 0x300001
  7339                           ;	Oscillator Selection bits
  7340                           ;	OSC = HS, HS oscillator
  7341                           ;	Fail-Safe Clock Monitor Enable bit
  7342                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7343                           ;	Internal/External Oscillator Switchover bit
  7344                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7345  300001                     	org	3145729
  7346  300001  02                 	db	2
  7347                           
  7348                           ;Config register CONFIG2L @ 0x300002
  7349                           ;	Power-up Timer Enable bit
  7350                           ;	PWRT = OFF, PWRT disabled
  7351                           ;	Brown-out Reset Enable bits
  7352                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  7353                           ;	Brown Out Reset Voltage bits
  7354                           ;	BORV = 0x2E, user specified literal
  7355  300002                     	org	3145730
  7356  300002  71                 	db	369
  7357                           
  7358                           ;Config register CONFIG2H @ 0x300003
  7359                           ;	Watchdog Timer Enable bit
  7360                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7361                           ;	Watchdog Timer Postscale Select bits
  7362                           ;	WDTPS = 1, 1:1
  7363  300003                     	org	3145731
  7364  300003  00                 	db	0
  7365                           
  7366                           ; Padding undefined space
  7367  300004                     	org	3145732
  7368  300004  FF                 	db	255
  7369                           
  7370                           ;Config register CONFIG3H @ 0x300005
  7371                           ;	CCP2 MUX bit
  7372                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7373                           ;	PORTB A/D Enable bit
  7374                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  7375                           ;	Low-Power Timer1 Oscillator Enable bit
  7376                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7377                           ;	MCLR Pin Enable bit
  7378                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  7379  300005                     	org	3145733
  7380  300005  83                 	db	131
  7381                           
  7382                           ;Config register CONFIG4L @ 0x300006
  7383                           ;	Stack Full/Underflow Reset Enable bit
  7384                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  7385                           ;	Single-Supply ICSP Enable bit
  7386                           ;	LVP = OFF, Single-Supply ICSP disabled
  7387                           ;	Extended Instruction Set Enable bit
  7388                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7389                           ;	Background Debugger Enable bit
  7390                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7391  300006                     	org	3145734
  7392  300006  80                 	db	128
  7393                           
  7394                           ; Padding undefined space
  7395  300007                     	org	3145735
  7396  300007  FF                 	db	255
  7397                           
  7398                           ;Config register CONFIG5L @ 0x300008
  7399                           ;	Code Protection bit
  7400                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  7401                           ;	Code Protection bit
  7402                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  7403                           ;	Code Protection bit
  7404                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  7405                           ;	Code Protection bit
  7406                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  7407  300008                     	org	3145736
  7408  300008  0F                 	db	15
  7409                           
  7410                           ;Config register CONFIG5H @ 0x300009
  7411                           ;	Boot Block Code Protection bit
  7412                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7413                           ;	Data EEPROM Code Protection bit
  7414                           ;	CPD = OFF, Data EEPROM not code-protected
  7415  300009                     	org	3145737
  7416  300009  C0                 	db	192
  7417                           
  7418                           ;Config register CONFIG6L @ 0x30000A
  7419                           ;	Write Protection bit
  7420                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  7421                           ;	Write Protection bit
  7422                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  7423                           ;	Write Protection bit
  7424                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  7425                           ;	Write Protection bit
  7426                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  7427  30000A                     	org	3145738
  7428  30000A  0F                 	db	15
  7429                           
  7430                           ;Config register CONFIG6H @ 0x30000B
  7431                           ;	Configuration Register Write Protection bit
  7432                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7433                           ;	Boot Block Write Protection bit
  7434                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  7435                           ;	Data EEPROM Write Protection bit
  7436                           ;	WRTD = OFF, Data EEPROM not write-protected
  7437  30000B                     	org	3145739
  7438  30000B  E0                 	db	224
  7439                           
  7440                           ;Config register CONFIG7L @ 0x30000C
  7441                           ;	Table Read Protection bit
  7442                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  7443                           ;	Table Read Protection bit
  7444                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  7445                           ;	Table Read Protection bit
  7446                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  7447                           ;	Table Read Protection bit
  7448                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7449  30000C                     	org	3145740
  7450  30000C  0F                 	db	15
  7451                           
  7452                           ;Config register CONFIG7H @ 0x30000D
  7453                           ;	Boot Block Table Read Protection bit
  7454                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7455  30000D                     	org	3145741
  7456  30000D  40                 	db	64
  7457                           tosu	equ	0xFFF
  7458                           tosh	equ	0xFFE
  7459                           tosl	equ	0xFFD
  7460                           stkptr	equ	0xFFC
  7461                           pclatu	equ	0xFFB
  7462                           pclath	equ	0xFFA
  7463                           pcl	equ	0xFF9
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           indf0	equ	0xFEF
  7471                           postinc0	equ	0xFEE
  7472                           postdec0	equ	0xFED
  7473                           preinc0	equ	0xFEC
  7474                           plusw0	equ	0xFEB
  7475                           fsr0h	equ	0xFEA
  7476                           fsr0l	equ	0xFE9
  7477                           wreg	equ	0xFE8
  7478                           indf1	equ	0xFE7
  7479                           postinc1	equ	0xFE6
  7480                           postdec1	equ	0xFE5
  7481                           preinc1	equ	0xFE4
  7482                           plusw1	equ	0xFE3
  7483                           fsr1h	equ	0xFE2
  7484                           fsr1l	equ	0xFE1
  7485                           bsr	equ	0xFE0
  7486                           indf2	equ	0xFDF
  7487                           postinc2	equ	0xFDE
  7488                           postdec2	equ	0xFDD
  7489                           preinc2	equ	0xFDC
  7490                           plusw2	equ	0xFDB
  7491                           fsr2h	equ	0xFDA
  7492                           fsr2l	equ	0xFD9
  7493                           status	equ	0xFD8

Data Sizes:
    Strings     267
    Constant    16
    Data        32
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     49      94
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_135(CODE[9]), STR_134(CODE[13]), STR_133(CODE[14]), STR_132(CODE[10]), 
		 -> STR_131(CODE[14]), STR_130(CODE[9]), STR_129(CODE[17]), STR_128(CODE[10]), 
		 -> STR_127(CODE[14]), STR_126(CODE[9]), STR_125(CODE[13]), STR_124(CODE[14]), 
		 -> STR_123(CODE[10]), STR_122(CODE[14]), STR_121(CODE[9]), STR_120(CODE[17]), 
		 -> STR_119(CODE[10]), STR_118(CODE[14]), STR_117(CODE[9]), STR_116(CODE[13]), 
		 -> STR_115(CODE[14]), STR_114(CODE[10]), STR_113(CODE[14]), STR_112(CODE[9]), 
		 -> STR_111(CODE[17]), STR_110(CODE[10]), STR_109(CODE[14]), STR_108(CODE[17]), 
		 -> STR_107(CODE[17]), STR_106(CODE[16]), STR_105(CODE[4]), STR_104(CODE[9]), 
		 -> STR_103(CODE[13]), STR_102(CODE[14]), STR_101(CODE[10]), STR_100(CODE[14]), 
		 -> STR_99(CODE[9]), STR_98(CODE[17]), STR_97(CODE[10]), STR_96(CODE[14]), 
		 -> STR_95(CODE[9]), STR_94(CODE[13]), STR_93(CODE[14]), STR_92(CODE[10]), 
		 -> STR_91(CODE[14]), STR_90(CODE[9]), STR_89(CODE[17]), STR_88(CODE[10]), 
		 -> STR_87(CODE[14]), STR_86(CODE[9]), STR_85(CODE[13]), STR_84(CODE[14]), 
		 -> STR_83(CODE[10]), STR_82(CODE[14]), STR_81(CODE[9]), STR_80(CODE[17]), 
		 -> STR_79(CODE[10]), STR_78(CODE[14]), STR_77(CODE[17]), STR_76(CODE[17]), 
		 -> STR_75(CODE[16]), STR_74(CODE[6]), STR_73(CODE[9]), STR_72(CODE[13]), 
		 -> STR_71(CODE[14]), STR_70(CODE[10]), STR_69(CODE[14]), STR_68(CODE[9]), 
		 -> STR_67(CODE[17]), STR_66(CODE[10]), STR_65(CODE[14]), STR_64(CODE[9]), 
		 -> STR_63(CODE[13]), STR_62(CODE[14]), STR_61(CODE[10]), STR_60(CODE[14]), 
		 -> STR_59(CODE[9]), STR_58(CODE[17]), STR_57(CODE[10]), STR_56(CODE[14]), 
		 -> STR_55(CODE[9]), STR_54(CODE[13]), STR_53(CODE[14]), STR_52(CODE[10]), 
		 -> STR_51(CODE[14]), STR_50(CODE[9]), STR_49(CODE[17]), STR_48(CODE[10]), 
		 -> STR_47(CODE[14]), STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[16]), 
		 -> STR_43(CODE[6]), STR_42(CODE[9]), STR_41(CODE[13]), STR_40(CODE[14]), 
		 -> STR_39(CODE[10]), STR_38(CODE[14]), STR_37(CODE[9]), STR_36(CODE[17]), 
		 -> STR_35(CODE[10]), STR_34(CODE[14]), STR_33(CODE[9]), STR_32(CODE[13]), 
		 -> STR_31(CODE[14]), STR_30(CODE[10]), STR_29(CODE[14]), STR_28(CODE[9]), 
		 -> STR_27(CODE[17]), STR_26(CODE[10]), STR_25(CODE[14]), STR_24(CODE[9]), 
		 -> STR_23(CODE[13]), STR_22(CODE[14]), STR_21(CODE[10]), STR_20(CODE[14]), 
		 -> STR_19(CODE[9]), STR_18(CODE[17]), STR_17(CODE[10]), STR_16(CODE[14]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[16]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[10]), 
		 -> STR_7(CODE[11]), STR_6(CODE[9]), STR_5(CODE[14]), STR_4(CODE[8]), 
		 -> STR_3(CODE[11]), STR_2(CODE[8]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_lcd_str
    _ssdUpdate->_digitalWrite
    _ssdInit->_pinMode
    _lcd_str->_lcd_dat
    _lcd_dat->_atraso_ms
    _lcd_cmd->_atraso_ms
    _lcdPosition->_lcdCommand
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite
    _desligaDisplays->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   61213
                                             11 COMRAM    38    38      0
                          _atraso_ms
                    _desligaDisplays
                       _desligaRele1
                       _desligaRele2
                     _desligarCooler
                         _kpDebounce
                             _kpInit
                             _kpRead
                         _lcdCommand
                            _lcdData
                            _lcdInit
                        _lcdPosition
                            _lcd_cmd
                            _lcd_str
                          _ligaRele1
                          _ligaRele2
                        _ligarCooler
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0    3180
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1656
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1    2000
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ligarCooler                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ligaRele2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ligaRele1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              5     3      2   14811
                                              6 COMRAM     5     3      2
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              1     1      0    4461
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_cmd                                              1     1      0    4461
                                              5 COMRAM     1     1      0
                          _atraso_ms
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _atraso_ms                                            5     3      2    4424
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          2     1      1   13947
                                              8 COMRAM     2     1      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    5075
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1656
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    3359
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0      60
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    3255
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                          10    10      0     210
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _desligarCooler                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desligaRele2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desligaRele1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _desligaDisplays                                      0     0      0    3180
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    3180
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso_ms
   _desligaDisplays
     _digitalWrite
   _desligaRele1
   _desligaRele2
   _desligarCooler
   _kpDebounce
   _kpInit
   _kpRead
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _lcdPosition
     _lcdCommand
   _lcd_cmd
     _atraso_ms
     _lcd_wr
   _lcd_str
     _lcd_dat
       _atraso_ms
       _lcd_wr
   _ligaRele1
   _ligaRele2
   _ligarCooler
   _ssdDigit
   _ssdInit
     _pinMode
   _ssdUpdate
     _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     31      5E       1       74.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5E      15        0.0%
DATA                 0      0      5E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Aug 01 08:44:13 2021

                      l41 5D92                        l50 5C20                        l44 5A4E  
                      l53 5A30                        l62 5A2A                        l47 5A3E  
                      l56 5A24                        l73 6D8C                        l59 5A36  
                      l83 6BD2                        l76 6A18                        l98 7352  
                      u10 5A7A                        u11 5A76                        _v0 005B  
                      _v1 005A                        _v2 0059                        _v3 0058  
                      _de 005D                       l101 6FDE                       l202 5B7E  
                     l123 7918                       l108 7198                       l133 775E  
                     l310 614A                       l126 75A4                       l311 6152  
                     l151 7B6A                       l314 5A58                       l323 5A46  
                     l244 63A0                       l309 6132                       l502 5A7A  
                     l326 5AE0                       l158 7D24                       l520 5E0A  
                     l329 5B0A                       l514 5E88                       l338 5BCE  
                     l291 5A62                       l507 5A96                       l517 5C74  
                     l278 65EE                       l560 5CCA                       l547 5D22  
                     l557 5FD8                       u240 5A96                       u241 5A92  
                     u700 6142                       u620 6050                       u604 5FFC  
                     u701 613E                       u621 604C                       u605 5FF8  
                     u614 601C                       u615 6018                       u640 6080  
                     u641 607C                       u634 6066                       u635 6062  
                     u670 60F6                       u654 609E                       u671 60F2  
                     u655 6098                       u680 6108                       u664 60CE  
                     u681 6104                       u665 60C8                       u690 6120  
                     u691 611C                       wreg 000FE8                      l1310 5A80  
                    l1302 5A42                      l1312 5A84                      l1304 5A7C  
                    l1242 5A68                      l1314 5A86                      l1244 5A6A  
                    l1236 5A64                      l1500 5A2C               main@imagem1 000C  
                    l1502 5A20                      l3120 61A2                      l3200 6412  
                    l1504 5A32                      l4000 73F8                      l3130 623C  
                    l3122 61C4                      l3114 6154                      l1506 5A26  
                    l3210 64A6                      l3202 642E                      l4010 743A  
                    l4002 7408                      l3140 62D0                      l3132 6258  
                    l3124 61E0                      l3116 6170                      l1620 60E4  
                    l1604 6030                      l3220 6530                      l3212 64B8  
                    l3204 6440                      l3300 5CC6                      l4100 762E  
                    l4020 7470                      l4012 743E                      l4004 7414  
                    l3150 6362                      l3142 62EA                      l3134 6272  
                    l3126 61FA                      l3118 6182                      l1630 6120  
                    l1622 60E6                      l1614 6054                      l1606 6034  
                    l1542 5A50                      l3310 5C44                      l3302 5C24  
                    l3230 65CC                      l3222 6554                      l3214 64DC  
                    l3206 6464                      l4110 764E                      l4030 7490  
                    l4022 7474                      l4014 7444                      l4006 742A  
                    l3152 6382                      l3144 630A                      l3136 6292  
                    l3128 621A                      l1632 6126                      l1624 60F6  
                    l1616 6080                      l1608 6050                      l3312 5C58  
                    l3304 5C28                      l3224 657A                      l3216 6502  
                    l3208 648A                      l3240 5AFA                      l3232 5AE4  
                    l3320 5B88                      l4200 7852                      l4120 767C  
                    l4112 765A                      l4040 74BE                      l4032 7494  
                    l4016 744E                      l4008 742E                      l3146 632C  
                    l3138 62B4                      l1634 612A                      l1626 60F8  
                    l1618 60B0                      l3314 5C6C                      l3306 5C2C  
                    l3170 5E0E                      l3226 6596                      l3218 651E  
                    l3250 5D40                      l3162 5B52                      l3154 5B42  
                    l3330 5AC2                      l3242 5AFC                      l3234 5AE6  
                    l3322 5BA4                      l1490 5A48                      l4210 7894  
                    l4202 785E                      l4130 76CE                      l4122 7698  
                    l4114 765E                      l4106 7636                      l4050 7508  
                    l4042 74C2                      l4034 74A0                      l4018 7464  
                    l3410 661A                      l3402 65F0                      l3148 6348  
                    l1636 6142                      l1628 6108                      l3340 5A5A  
                    l3316 5C70                      l3308 5C40                      l3180 5E42  
                    l3172 5E12                      l3228 65A8                      l3260 5D88  
                    l3252 5D50                      l3164 5B54                      l3156 5B4E  
                    l3332 5AC4                      l3244 5B08                      l3236 5AEC  
                    l3324 5BA6                      l1492 5A4C                      l4300 7AB0  
                    l4220 78C4                      l4212 789A                      l4204 786C  
                    l4140 76FE                      l4132 76DA                      l4124 76A4  
                    l4116 7674                      l4108 764A                      l4060 7540  
                    l4052 7514                      l4044 74DE                      l4036 74A4  
                    l4028 747C                      l3500 68A2                      l3420 662C  
                    l3412 661E                      l3404 6600                      l3262 5BD0  
                    l1494 5A38                      l1638 614E                      l1590 5FE2  
                    l3190 5E84                      l3182 5E56                      l3174 5E16  
                    l3270 5DC4                      l3254 5D5A                      l3246 5D26  
                    l3166 5B64                      l3334 5AD0                      l3326 5ABA  
                    l3238 5AEE                      l3318 5B80                      l3350 5CF6  
                    l3342 5CCE                      l4310 7AEC                      l4302 7ABE  
                    l4230 78F2                      l4222 78C8                      l4214 78B0  
                    l4206 787C                      l4150 7722                      l4142 770A  
                    l4134 76E0                      l4126 76B2                      l4118 7678  
                    l4070 755E                      l4062 7544                      l4054 7520  
                    l4046 74EA                      l4038 74BA                      l3510 68D8  
                    l3502 68AE                      l3430 669A                      l3422 663E  
                    l3414 6624                      l3406 6612                      l1496 5A3C  
                    l3184 5E5A                      l3176 5E2A                      l3192 63A2  
                    l3280 5DDA                      l3272 5DC8                      l3264 5D94  
                    l3256 5D6C                      l3248 5D36                      l3168 5B68  
                    l3336 5AD2                      l3328 5ABC                      l3352 5D08  
                    l3344 5CDE                      l3360 5E8E                      l4400 7CD8  
                    l4320 7B1A                      l4312 7B02                      l4304 7ACE  
                    l4240 7958                      l4232 78FE                      l4224 78CC  
                    l4216 78B4                      l4208 7888                      l4160 7788  
                    l4152 7738                      l4144 770E                      l4136 76F6  
                    l4128 76C2                      l4080 75C2                      l4072 7568  
                    l4064 7550                      l4056 7526                      l4048 74F8  
                    l3600 6ABE                      l3520 68F0                      l3512 68E4  
                    l3504 68B2                      l3440 66E8                      l3432 66B0  
                    l3424 6642                      l3408 6616                      l1586 5FDA  
                    l3186 5E6C                      l3178 5E2E                      l3194 63BE  
                    l3290 5DF2                      l3282 5DDE                      l3274 5DCC  
                    l3266 5DBC                      l3258 5D76                      l3338 5ADE  
                    l3354 5D0C                      l3346 5CE2                      l3370 5EF8  
                    l3362 5EA2                      l4410 7D32                      l4402 7CDE  
                    l4330 7B50                      l4322 7B1E                      l4314 7B06  
                    l4306 7ADA                      l4250 79A4                      l4242 7962  
                    l4234 7926                      l4226 78D2                      l4218 78B8  
                    l4170 77B8                      l4162 779E                      l4154 7744  
                    l4146 7712                      l4138 76FA                      l4090 75F8  
                    l4082 75CE                      l4074 757E                      l4066 7554  
                    l4058 753C                      l3610 6AEC                      l3602 6AC2  
                    l3530 692E                      l3522 6904                      l3514 68E8  
                    l3506 68B8                      l3450 6730                      l3442 66EE  
                    l3434 66BA                      l3426 6658                      l1596 5FE6  
                    l1588 5FDE                      l3188 5E7C                      l3196 63D0  
                    l3292 5DF8                      l3284 5DE2                      l3276 5DD0  
                    l3268 5DC0                      l3356 5D1E                      l3348 5CF2  
                    l3380 5F42                      l3372 5F0C                      l3364 5EB6  
                    l4420 7D74                      l4412 7D42                      l4404 7CE8  
                    l4340 7BAE                      l4332 7B78                      l4324 7B24  
                    l4316 7B0A                      l4308 7AE6                      l4260 79F0  
                    l4252 79B0                      l4244 7978                      l4236 7936  
                    l4228 78DC                      l4172 77C2                      l4164 77A2  
                    l4156 776C                      l4148 7718                      l4092 75FE  
                    l4084 75E4                      l4076 758A                      l4068 7558  
                    l3700 6CFC                      l3620 6B36                      l3612 6AF0  
                    l3604 6ACE                      l3540 696C                      l3532 6932  
                    l3524 6908                      l3508 68C2                      l3460 6778  
                    l3452 673C                      l3444 6704                      l3436 66D0  
                    l3428 668E                      l1598 6028                      l3198 63F0  
                    l3294 5DFE                      l3286 5DE8                      l3278 5DD4  
                    l3390 5F96                      l3382 5F54                      l3374 5F14  
                    l3366 5ECA                      l3358 5E8A                      l4430 7DAA  
                    l4422 7D78                      l4414 7D4E                      l4406 7CFE  
                    l4350 7BE4                      l4342 7BBA                      l4334 7B88  
                    l4326 7B2E                      l4318 7B16                      l4270 7A14  
                    l4262 79F4                      l4254 79BE                      l4246 7984  
                    l4238 7942                      l4190 7814                      l4174 77D8  
                    l4166 77AE                      l4158 777C                      l4094 7608  
                    l4086 75E8                      l4078 75B2                      l3710 6D2C  
                    l3702 6D08                      l3630 6B6E                      l3622 6B42  
                    l3614 6B0C                      l3606 6AD2                      l3550 69B0  
                    l3542 697C                      l3534 6936                      l3526 6914  
                    l3470 67C6                      l3462 6784                      l3454 6742  
                    l3446 670E                      l3438 66DC                      l3296 5E04  
                    l3288 5DEC                      l4504 5FB2                      l3384 5F68  
                    l3376 5F26                      l3368 5EE6                      l4440 7DCA  
                    l4432 7DAE                      l4424 7D7E                      l4416 7D64  
                    l4408 7D0A                      l4360 7BFC                      l4352 7BF0  
                    l4344 7BBE                      l4336 7B94                      l4328 7B44  
                    l4272 7A2A                      l4264 7A00                      l4256 79CE  
                    l4248 7988                      l4192 7818                      l4184 77F0  
                    l4176 77E4                      l4168 77B2                      l4096 761E  
                    l4088 75F4                      l3800 6F5A                      l3720 6D50  
                    l3712 6D38                      l3704 6D0E                      l3640 6B8C  
                    l3632 6B72                      l3624 6B4E                      l3616 6B18  
                    l3608 6AE8                      l3560 69CC                      l3552 69B4  
                    l3544 6988                      l3536 6952                      l3528 6918  
                    l3480 6810                      l3472 67D4                      l3464 679A  
                    l3456 6758                      l3448 6724                      l3298 5C76  
                    l3386 5F70                      l3378 5F3A                      l4450 7DF8  
                    l4442 7DCE                      l4426 7D88                      l4418 7D68  
                    l4370 7C3A                      l4362 7C10                      l4354 7BF4  
                    l4346 7BC4                      l4338 7BAA                      l4290 7A6A  
                    l4282 7A42                      l4274 7A36                      l4266 7A04  
                    l4258 79DA                      l4194 782E                      l4186 7804  
                    l4178 77E8                      l4098 762A                      l3810 6F8A  
                    l3802 6F60                      l3730 6DB6                      l3722 6D66  
                    l3714 6D3C                      l3706 6D24                      l3650 6BF0  
                    l3642 6B96                      l3634 6B7E                      l3626 6B54  
                    l3618 6B26                      l3570 6A26                      l3562 69D2  
                    l3554 69B8                      l3546 6994                      l3538 695E  
                    l3490 685E                      l3482 6826                      l3474 67E4  
                    l3466 679E                      l3458 6762                      l3388 5F82  
                    l3396 5F9E                      l4460 7E42                      l4452 7DFC  
                    l4444 7DDA                      l4428 7D9E                      l4380 7C78  
                    l4372 7C3E                      l4364 7C14                      l4348 7BCE  
                    l4292 7A80                      l4284 7A56                      l4276 7A3A  
                    l4268 7A0A                      l4196 7832                      l4188 7808  
                    l3900 717E                      l3820 6FB8                      l3812 6F8E  
                    l3804 6F76                      l3740 6DFC                      l3732 6DCC  
                    l3724 6D72                      l3716 6D40                      l3708 6D28  
                    l3660 6C26                      l3652 6BFC                      l3644 6BAC  
                    l3636 6B82                      l3628 6B6A                      l3580 6A68  
                    l3572 6A36                      l3564 69DC                      l3556 69C4  
                    l3548 699A                      l3492 686C                      l3484 6832  
                    l3476 67F0                      l3468 67BA                      l4470 7E7A  
                    l4462 7E4E                      l4454 7E18                      l4446 7DDE  
                    l4438 7DB6                      l4390 7CBC                      l4382 7C88  
                    l4374 7C42                      l4366 7C20                      l4294 7A84  
                    l4286 7A5A                      l4198 7836                      l3910 71DC  
                    l3902 71A6                      l3830 701E                      l3822 6FC4  
                    l3814 6F92                      l3806 6F7A                      l3750 6E4E  
                    l3742 6E18                      l3734 6DD6                      l3726 6D9A  
                    l3718 6D46                      l3670 6C5C                      l3662 6C2C  
                    l3654 6C12                      l3646 6BB8                      l3638 6B86  
                    l3590 6A9E                      l3582 6A6C                      l3574 6A42  
                    l3566 69F2                      l3558 69C8                      l3494 687C  
                    l3486 6836                      l3478 6806                      l4480 7E98  
                    l4472 7E7E                      l4464 7E5A                      l4456 7E24  
                    l4448 7DF4                      l4392 7CC0                      l4384 7C94  
                    l4376 7C5E                      l4368 7C24                      l4296 7A88  
                    l4288 7A66                      l3920 7212                      l3912 71E8  
                    l3904 71B6                      l3840 7042                      l3832 7022  
                    l3824 6FEC                      l3816 6F98                      l3808 6F7E  
                    l3760 6E7E                      l3752 6E64                      l3744 6E24  
                    l3736 6DEC                      l3728 6DAA                      l3680 6C7C  
                    l3664 6C36                      l3656 6C16                      l3648 6BE0  
                    l3592 6AA2                      l3584 6A72                      l3576 6A58  
                    l3568 69FE                      l3496 6888                      l3488 6852  
                    l4482 7EA2                      l4474 7E8A                      l4466 7E60  
                    l4458 7E32                      l4394 7CC4                      l4386 7CA0  
                    l4378 7C6A                      l4298 7AA4                      l3930 722A  
                    l3922 721E                      l3914 71EC                      l3906 71C2  
                    l3842 7058                      l3834 702E                      l3826 6FFC  
                    l3818 6FA2                      l3762 6E88                      l3754 6E68  
                    l3746 6E32                      l3738 6DF8                      l3690 6CAA  
                    l3682 6C88                      l3666 6C4C                      l3658 6C22  
                    l3586 6A7C                      l3578 6A5C                      l3498 689E  
                    l4484 7EB8                      l4476 7E8E                      l4468 7E76  
                    l4396 7CD0                      l4388 7CA6                      l3940 7268  
                    l3932 723E                      l3924 7222                      l3916 71F2  
                    l3908 71D8                      l3860 7098                      l3852 7070  
                    l3844 7064                      l3836 7032                      l3828 7008  
                    l3780 6EDA                      l3764 6E9E                      l3756 6E74  
                    l3748 6E42                      l3692 6CC6                      l3684 6C8C  
                    l3676 6C64                      l3668 6C58                      l3588 6A92  
                    l4486 7EC4                      l4478 7E92                      l4398 7CD4  
                    l3950 72A6                      l3942 726C                      l3934 7242  
                    l3918 71FC                      l3870 70DE                      l3862 70AE  
                    l3854 7084                      l3846 7068                      l3838 7038  
                    l3790 6F18                      l3782 6EDE                      l3774 6EB6  
                    l3766 6EAA                      l3758 6E78                      l3694 6CD2  
                    l3686 6CA2                      l3678 6C78                      l3598 6AAA  
                    l3960 72EA                      l3952 72B6                      l3944 7270  
                    l3936 724E                      l3880 711A                      l3872 70EC  
                    l3864 70B2                      l3856 7088                      l3792 6F24  
                    l3784 6EF4                      l3776 6ECA                      l3768 6EAE  
                    l3696 6CE0                      l3688 6CA6                      l3970 7306  
                    l3962 72EE                      l3954 72C2                      l3946 728C  
                    l3938 7252                      l3890 7148                      l3882 7130  
                    l3874 70FC                      l3866 70B6                      l3858 7094  
                    l3794 6F32                      l3786 6EF8                      l3778 6ECE  
                    l3698 6CF0                      l3980 7360                      l3972 730C  
                    l3964 72F2                      l3956 72CE                      l3948 7298  
                    l3892 714C                      l3884 7134                      l3876 7108  
                    l3868 70D2                      l3796 6F42                      l3788 6EFC  
                    l3990 73B2                      l3982 7370                      l3974 7316  
                    l3966 72FE                      l3958 72D4                      l3894 7152  
                    l3886 7138                      l3878 7114                      l3798 6F4E  
                    l3992 73BE                      l3984 737C                      l3976 732C  
                    l3968 7302                      l3896 715C                      l3888 7144  
                    l3994 73C2                      l3986 7392                      l3978 7338  
                    l3898 7172                      l3996 73DE                      l3988 739C  
                    l3998 73EA                      STR_1 7F7B                      STR_2 7FEF  
                    STR_3 7F91                      STR_4 7FE7                      STR_5 7F60  
                    STR_6 7FCC                      STR_7 7F86                      STR_8 7FB0  
                    STR_9 7FDE                      u2000 65A8                      u2001 65A4  
                    u2100 5D08                      u2101 5D04                      u2014 65BE  
                    u2030 5D36                      u2110 5D1E                      u2015 65BA  
                    u2031 5D32                      u2111 5D1A                      u2024 65E2  
                    u2040 5D50                      u2200 696C                      u2025 65DE  
                    u2041 5D4C                      u2201 6968                      u2121 660A  
                    u2050 5D6C                      u2210 6A26                      u2130 6658  
                    u2051 5D68                      u2211 6A22                      u2131 6654  
                    u2060 5D88                      u2300 6E18                      u2220 6AE8  
                    u2140 67BA                      u2061 5D84                      u2301 6E14  
                    u2221 6AE4                      u2141 67B6                      u2070 5BCE  
                    u2310 6E32                      u2230 6B0C                      u2150 67D4  
                    u2071 5BCA                      u2311 6E2E                      u2231 6B08  
                    u2151 67D0                      u1600 6182                      u2080 5CDE  
                    u2400 7268                      u2320 6EF4                      u2240 6B26  
                    u2160 6852                      u1601 617E                      u2081 5CDA  
                    u2401 7264                      u2321 6EF0                      u2241 6B22  
                    u2161 684E                      u2090 5CF2                      u2410 728C  
                    u2330 6F18                      u2250 6BE0                      u2170 686C  
                    u2091 5CEE                      u2411 7288                      u2331 6F14  
                    u2251 6BDC                      u2171 6868                      u2500 7674  
                    u2420 72A6                      u2340 6F32                      u2260 6CA2  
                    u2180 692E                      u2501 7670                      u2421 72A2  
                    u2341 6F2E                      u2261 6C9E                      u2181 692A  
                    u1710 62D0                      u1630 61E0                      u1614 6194  
                    u2510 7698                      u2430 7360                      u2350 6FEC  
                    u2270 6CC6                      u2190 6952                      u1711 62CC  
                    u1631 61DC                      u1615 6190                      u2511 7694  
                    u2431 735C                      u2351 6FE8                      u2271 6CC2  
                    u2191 694E                      u1720 62EA                      u1704 62A4  
                    u1640 61FA                      u1624 61B4                      u1800 5B7E  
                    u2600 7A80                      u2520 76B2                      u2440 73DE  
                    u2360 70AE                      u2280 6CE0                      u1721 62E6  
                    u1705 62A0                      u1641 61F6                      u1625 61B0  
                    u1801 5B7A                      u2601 7A7C                      u2521 76AE  
                    u2441 73DA                      u2361 70AA                      u2281 6CDC  
                    u1810 5E6C                      u2610 7AA4                      u2530 776C  
                    u2450 73F8                      u2370 70D2                      u2290 6D9A  
                    u1811 5E68                      u2611 7AA0                      u2531 7768  
                    u2451 73F4                      u2371 70CE                      u2291 6D96  
                    u1820 5E7C                      u2700 7E32                      u2620 7ABE  
                    u2540 782E                      u2460 74BA                      u2380 70EC  
                    u1821 5E78                      u2701 7E2E                      u2621 7ABA  
                    u2541 782A                      u2461 74B6                      u2381 70E8  
                    u1750 6348                      u1734 62FC                      u1670 6258  
                    u1654 620C                      u1590 6170                      u1910 64A6  
                    u1830 63BE                      u2630 7B78                      u2550 7852  
                    u2470 74DE                      u2390 71A6                      u1751 6344  
                    u1735 62F8                      u1671 6254                      u1655 6208  
                    u1591 616C                      u1911 64A2                      u1831 63BA  
                    u2631 7B74                      u2551 784E                      u2471 74DA  
                    u2391 71A2                      u1760 6362                      u1744 631C  
                    u1680 6272                      u1664 622C                      u1920 64B8  
                    u1904 647A                      u1840 63D0                      u2640 7C3A  
                    u2560 786C                      u2480 74F8                      u1761 635E  
                    u1745 6318                      u1681 626E                      u1665 6228  
                    u1921 64B4                      u1905 6476                      u1841 63CC  
                    u2641 7C36                      u2561 7868                      u2481 74F4  
                    u2650 7C5E                      u2570 7926                      u2490 75B2  
                    u2651 7C5A                      u2571 7922                      u2491 75AE  
                    u2660 7C78                      u2580 79A4                      u2661 7C74  
                    u2581 79A0                      u1774 6374                      u1694 6284  
                    u1950 651E                      u1934 64CE                      u1870 642E  
                    u1854 63E2                      u1790 5B64                      u2670 7D32  
                    u2590 79BE                      u1775 6370                      u1695 6280  
                    u1951 651A                      u1935 64CA                      u1871 642A  
                    u1855 63DE                      u1791 5B60                      u2671 7D2E  
                    u2591 79BA                      u1784 6394                      u1960 6530  
                    u1944 64F2                      u1880 6440                      u1864 6402  
                    u2680 7DF4                      u1785 6390                      u1961 652C  
                    u1945 64EE                      u1881 643C                      u1865 63FE  
                    u2681 7DF0                      u2690 7E18                      u2691 7E14  
                    u1990 6596                      u1974 6546                      u1894 6456  
                    u1991 6592                      u1975 6542                      u1895 6452  
                    u1984 656A                      u1985 6566                      _main 65F0  
            ?_ligarCooler 0001                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      prodl 000FF3                      start 0000  
            ___param_bank 000000                     ?_main 0001                     STR_10 7FC3  
                   STR_11 7FF7                     STR_12 7FB3                     STR_20 7F44  
                   STR_21 7F9C                     STR_13 7F26                     STR_30 7F9C  
                   STR_22 7F36                     STR_14 7EF3                     STR_31 7F36  
                   STR_23 7F6E                     STR_15 7F04                     STR_40 7F36  
                   STR_32 7F6E                     STR_24 7FD5                     STR_16 7F52  
                   STR_25 7F52                     STR_41 7F6E                     STR_33 7FD5  
                   STR_17 7FA6                     STR_26 7FA6                     STR_34 7F52  
                   STR_50 7FBA                     STR_42 7FD5                     STR_18 7F15  
                   STR_35 7FA6                     STR_51 7F44                     STR_43 7FE1  
                   STR_27 7F15                     STR_19 7FBA                     STR_52 7F9C  
                   STR_60 7F44                     STR_44 7F26                     STR_28 7FBA  
                   STR_36 7F15                     STR_53 7F36                     STR_61 7F9C  
                   STR_29 7F44                     STR_45 7EF3                     STR_37 7FBA  
                   STR_62 7F36                     STR_70 7F9C                     STR_38 7F44  
                   STR_46 7F04                     STR_54 7F6E                     STR_71 7F36  
                   STR_39 7F9C                     STR_47 7F52                     STR_63 7F6E  
                   STR_55 7FD5                     STR_48 7FA6                     STR_56 7F52  
                   STR_72 7F6E                     STR_64 7FD5                     STR_80 7F15  
                   STR_57 7FA6                     STR_65 7F52                     STR_81 7FBA  
                   STR_73 7FD5                     STR_49 7F15                     STR_66 7FA6  
                   STR_82 7F44                     STR_90 7FBA                     STR_74 7FC6  
                   STR_58 7F15                     STR_83 7F9C                     STR_91 7F44  
                   STR_75 7F26                     STR_59 7FBA                     STR_67 7F15  
                   STR_84 7F36                     STR_92 7F9C                     STR_76 7EF3  
                   STR_68 7FBA                     STR_93 7F36                     STR_69 7F44  
                   STR_77 7F04                     STR_85 7F6E                     STR_78 7F52  
                   STR_94 7F6E                     STR_86 7FD5                     STR_79 7FA6  
                   STR_87 7F52                     STR_95 7FD5                     STR_88 7FA6  
                   STR_96 7F52                     STR_97 7FA6                     STR_89 7F15  
                   STR_98 7F15                     STR_99 7FBA                     _T0CON 000FD5  
                   _TMR0H 000FD7                     _TMR0L 000FD6                     _PORTA 000F80  
                   _PORTB 000F81                     _PORTC 000F82                     _PORTD 000F83  
                   _PORTE 000F84                     _TRISA 000F92                     _TRISB 000F93  
                   _TRISC 000F94                     _TRISD 000F95                     _TRISE 000F96  
         __end_of_lcdData 5C76           _desligaDisplays 5BD0           __end_of_lcdInit 5E0C  
         __end_of_lcd_dat 5B0C           __end_of_lcd_cmd 5AE2           __end_of_lcd_str 5BD0  
         __end_of_pinMode 65F0                     _valor 0056                     main@i 002E  
                   tablat 000FF5           __end_of_ssdInit 5CCC                     plusw1 000FE3  
                   plusw2 000FDB                     status 000FD8          __end_of_Delay2ms 5A98  
    __end_of_digitalWrite 63A2           __initialization 5B0C              __end_of_main 7EE2  
      __size_of_Delay40us 0018                    ??_main 000C      __end_of_desligaRele1 5A26  
    __end_of_desligaRele2 5A2C             __activetblptr 000002                    _ADCON0 000FC2  
                  _ADCON2 000FC0                    STR_100 7F44                    STR_101 7F9C  
                  STR_102 7F36                    STR_110 7FA6                    STR_103 7F6E  
                  STR_111 7F15                    STR_112 7FBA                    STR_104 7FD5  
                  STR_120 7F15                    STR_113 7F44                    STR_105 7FFA  
                  STR_121 7FBA                    STR_114 7F9C                    STR_122 7F44  
                  STR_106 7F26                    STR_130 7FBA                    _ADRESH 000FC4  
                  STR_115 7F36                    STR_123 7F9C                    STR_131 7F44  
                  STR_107 7EF3                    STR_124 7F36                    STR_132 7F9C  
                  STR_108 7F04                    STR_116 7F6E                    STR_133 7F36  
                  STR_109 7F52                    STR_125 7F6E                    STR_117 7FD5  
                  STR_118 7F52                    STR_134 7F6E                    STR_126 7FD5  
                  _ADRESL 000FC3                    STR_119 7FA6                    STR_127 7F52  
                  STR_135 7FD5                    STR_128 7FA6                    STR_129 7F15  
                  _INTCON 000FF2      __size_of_lcdPosition 0070         lcdPosition@coluna 0009  
                  _kpInit 5A50                    _kpRead 5A5A                    _lcd_wr 5A40  
                  clear_0 5B32   __end_of_desligaDisplays 5C22                 ??_lcdData 0007  
                  isa$std 000001                 ??_lcdInit 0009                 ??_lcd_dat 0006  
               ??_lcd_cmd 0006                 ??_lcd_str 0009          __end_of_ssdDigit 5D24  
            __pdataCOMRAM 0032                 ??_pinMode 0005              __mediumconst 7EE2  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_ssdInit 0007         __end_of_Delay40us 5A7C                __accesstop 0080  
 __end_of__initialization 5B38             ___rparam_used 000001      __size_of_ligarCooler 0008  
             pinMode@type 0003            __pcstackCOMRAM 0001                 ?_Delay2ms 0001  
      __size_of_atraso_ms 003E        __size_of_ligaRele1 0006        __size_of_ligaRele2 0006  
   __size_of_digitalWrite 024E                _lcdCommand 5E0C     __size_of_desligaRele1 0006  
   __size_of_desligaRele2 0006                   ?_kpInit 0001                   ?_kpRead 0001  
                 ?_lcd_wr 0001                _kpDebounce 5FDA          ?_desligaDisplays 0001  
      __size_of_ssdUpdate 0150                ??_Delay2ms 0002              _digitalWrite 6154  
 __size_of_desligarCooler 0008              _desligaRele1 5A20              _desligaRele2 5A26  
                 __Hparam 0000                   __Lparam 0000                 ?_ssdDigit 0001  
         kpDebounce@old_D 0006           kpDebounce@tempo 005E         __end_of_atraso_ms 5B80  
       __end_of_ligaRele1 5A32         __end_of_ligaRele2 5A38           __size_of_kpInit 000A  
         __size_of_kpRead 000A           __size_of_lcd_wr 0008               ssdDigit@val 0002  
             ssdDigit@pos 0001                   __pcinit 5B0C                   _lcdData 5C22  
                 __ramtop 0600                   _lcdInit 5D94                   __ptext0 65F0  
                 __ptext1 5E8A                   __ptext2 5C76                   __ptext3 5CCC  
                 __ptext4 5A48                   __ptext5 5A32                   __ptext6 5A2C  
                 __ptext7 5B80                   __ptext8 5AE2                   __ptext9 5AB8  
                 _lcd_dat 5AE2                   _lcd_cmd 5AB8                   _display 005C  
                 _lcd_str 5B80                   _pinMode 63A2                   _ssdInit 5C76  
               Delay2ms@i 0002       kpDebounce@valorNovo 0054      end_of_initialization 5B38  
           __Lmediumconst 7EE2         __end_of_ssdUpdate 5FDA                ??_ssdDigit 0002  
                 postdec1 000FE5               ?_lcdCommand 0001                   postinc0 000FEE  
             ?_kpDebounce 0001                 _PORTCbits 000F82                 _PORTEbits 000F84  
          _valor@ssd$F975 7EE3                 _TRISCbits 000F94                 _TRISEbits 000F96  
              lcd_dat@val 0006                lcd_cmd@val 0006             ??_lcdPosition 000A  
               _Delay40us 5A64                main@coluna 002C                lcd_str@str 0007  
              atraso_ms@i 0003                atraso_ms@j 0005             __pidataCOMRAM 5A98  
          __end_of_kpInit 5A5A            __end_of_kpRead 5A64            __end_of_lcd_wr 5A48  
  __end_of_valor@ssd$F975 7EF3       start_initialization 5B0C         __size_of_Delay2ms 001C  
          _desligarCooler 5A38       __size_of_lcdCommand 007E             ??_ligarCooler 0001  
     __size_of_kpDebounce 017A                ?_Delay40us 0001       __end_of_lcdPosition 5D94  
        lcdPosition@linha 000A                  ??_kpInit 0001                  ??_kpRead 0003  
                ??_lcd_wr 0001               __pbssCOMRAM 0052                pinMode@pin 0001  
  __end_of_desligarCooler 5A40       __end_of_ligarCooler 5A50             __pmediumconst 7EE2  
       __size_of_ssdDigit 0058                  ?_lcdData 0001                  ?_lcdInit 0001  
                ?_lcd_dat 0001                  ?_lcd_cmd 0001                  ?_lcd_str 0007  
           lcdCommand@cmd 0008                 _atraso_ms 5B42                 _ligaRele1 5A2C  
               _ligaRele2 5A32                  ?_pinMode 0001                  ?_ssdInit 0001  
         ?_desligarCooler 0001  __size_of_desligaDisplays 0052               _lcdPosition 5D24  
          atraso_ms@valor 0001               ??_Delay40us 0001              ??_lcdCommand 0007  
               main@F2688 0032                 _ssdUpdate 5E8A              ??_kpDebounce 0001  
              ?_atraso_ms 0001                ?_ligaRele1 0001                ?_ligaRele2 0001  
         lcdCommand@old_D 0007     kpDebounce@valorAntigo 0052                 lcd_wr@val 0001  
               main@linha 002D                  _Delay2ms 5A7C                 main@tecla 0030  
               copy_data0 5B20        __end_of_lcdCommand 5E8A              lcdData@old_D 0008  
            lcdData@valor 0007               _ligarCooler 5A48        __end_of_kpDebounce 6154  
                __Hrparam 0000                  __Lrparam 0000                ?_ssdUpdate 0001  
        __size_of_lcdData 0054          __size_of_lcdInit 0078          __size_of_lcd_dat 002A  
        __size_of_lcd_cmd 002A          __size_of_lcd_str 0050          __size_of_pinMode 024E  
                __ptext10 5A40                  __ptext11 5B42                  __ptext20 5A50  
                __ptext12 5D24                  __ptext21 5FDA                  __ptext13 5D94  
                __ptext22 5A38                  __ptext14 63A2                  __ptext23 5A26  
                __ptext15 5E0C                  __ptext24 5A20                  __ptext16 5A7C  
                __ptext25 5BD0                  __ptext17 5C22                  __ptext26 6154  
                __ptext18 5A64                  __ptext19 5A5A          __size_of_ssdInit 0056  
           __size_of_main 18F2         ??_desligaDisplays 0007                Delay40us@i 0001  
                _ssdDigit 5CCC                  isa$xinst 000000                  lcd_str@i 000B  
             ??_atraso_ms 0003               ??_ligaRele1 0001               ??_ligaRele2 0001  
           ?_digitalWrite 0001         digitalWrite@value 0003             ?_desligaRele1 0001  
           ?_desligaRele2 0001               ??_ssdUpdate 0007          ??_desligarCooler 0001  
             kpDebounce@i 000A               kpDebounce@j 0009               kpDebounce@k 0007  
          ??_digitalWrite 0005              ?_lcdPosition 0009           digitalWrite@pin 0001  
          ??_desligaRele1 0001            ??_desligaRele2 0001  
